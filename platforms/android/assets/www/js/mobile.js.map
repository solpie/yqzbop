{"version":3,"sources":["webpack:///js/mobile.js","webpack:///webpack/bootstrap 1a82a0f15e03d7a0da26","webpack:///./src/mobile/index.ts","webpack:///../YuanTV3/~/vue/dist/vue.common.js","webpack:///../YuanTV3/~/vue-class-component/index.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/vue-resource/dist/vue-resource.common.js","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./src/mobile/StagePanelViewMobile.ts","webpack:///../YuanTV3/src/view/panel/stage/StagePanelView.ts","webpack:///../YuanTV3/src/event/Command.ts?d522","webpack:///../YuanTV3/src/event/EventDispatcher.ts","webpack:///../YuanTV3/src/view/panel/BasePanelView.ts","webpack:///../YuanTV3/src/view/VueEx.ts","webpack:///../YuanTV3/src/event/Const.ts?6aa7","webpack:///../YuanTV3/src/model/PlayerInfo.ts","webpack:///../YuanTV3/src/model/BaseInfo.ts","webpack:///../YuanTV3/src/view/panel/stage/PlayerPanel.ts","webpack:///../YuanTV3/src/view/panel/render/PlayerRender.ts","webpack:///../YuanTV3/src/utils/JsFunc.ts","webpack:///../YuanTV3/src/utils/Fx.ts","webpack:///../YuanTV3/src/view/panel/stage/EventPanel.ts","webpack:///../YuanTV3/src/view/panel/stage/ScorePanel.ts","webpack:///../YuanTV3/src/model/GameInfo.ts","webpack:///../YuanTV3/src/model/TeamInfo.ts","webpack:///../YuanTV3/src/utils/EloUtil.ts","webpack:///../YuanTV3/src/view/panel/stage/stage-panel.html","webpack:///./~/vue-class-component/index.js","webpack:///../YuanTV3/src/event/Const.ts","webpack:///../YuanTV3/src/event/Command.ts","webpack:///./src/mobile/stage-panel-mobile.html"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","onDeviceReady","console","log","router","start","MobileView","__extends","this","d","b","__","constructor","hasOwnProperty","prototype","Object","create","Vue","StagePanelViewMobile_1","_super","apply","arguments","ready","connect","use","VueRouter","map","/","component","StagePanelViewMobile","name","/panel/stage/op","afterEach","transition","toPath","to","path","app","isOp","test","document","addEventListener","global","set","obj","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","i","length","vm","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","str","charCodeAt","_toString","value","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","ctx","l","toArray","list","ret","Array","extend","from","keys","isObject","isPlainObject","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","indexOf","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","undefined","_keymap","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","processFilterArg","dir","filters","push","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","el","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","querySelector","inDoc","node","doc","ownerDocument","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","event","useCapture","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","data","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","guardProps","props","isArray","type","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","e","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","Math","floor","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","split","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","forEach","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","update","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","some","$broadcast","source","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","search","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","unshift","install","mixin","definition","inBrowser","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","isIos","isWechat","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","shift","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","_this","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version","componentFactory","proto","internalHooks","superProto","getPrototypeOf","decorator","mixinOptions","literalValueRE$1","commentMatch","commentRE","noop$1","isIE","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","Promise$2","executor","state","PENDING","deferred","promise","x","resolve","r","reject","Promise$1","PromiseObj","Util","msg","error","isBoolean","isFunction","isFormData","FormData","when","fulfilled","rejected","then","opts","merge","$vm","each","array","_merge","defaults","_assign","root","url","urlParams","Url","expand","variables","tmpl","expanded","vars","operators","operator","values","substr","variable","getValues","separator","encodeReserved","modifier","isDefined","substring","encodeValue","isKeyOperator","encodeURIComponent","part","encodeURI","transform","transforms","serialize","plain","xdrClient","request","xdr","XDomainRequest","response","respondWith","responseText","status","statusText","abort","getUrl","onload","onerror","ontimeout","onprogress","send","getBody","cors","crossOrigin","SUPPORTS_CORS","client","emulateHTTP","requestUrl","protocol","ORIGIN_URL","emulateJSON","headers","contentType","jsonpClient","script","jsonp","callback","random","header","assign","Http","common","custom","clearTimeout","xhrClient","xhr","XMLHttpRequest","parseHeaders","getAllResponseHeaders","progress","upload","credentials","withCredentials","setRequestHeader","row","Client","reqHandlers","pop","resHandlers","sendRequest","interceptors","Request","ok","Error","Resource","resource","$http","http","Promise","$url","$resource","$promise","RESOLVED","REJECTED","all","iterable","resolver","race","TypeError","onResolved","onRejected","ie","documentMode","escape","href","port","hostname","pathname","location","classCallCheck","instance","Constructor","Response","blob","Blob","CUSTOM_HEADERS","X-Requested-With","COMMON_HEADERS","Accept","JSON_CONTENT_TYPE","Content-Type","post","patch","Target","matcher","delegate","Matcher","routes","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","len","route","eachRoute","baseRoute","binding","addRouteCallback","noWarning","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","recognizeChar","RecognizeResults","queryParams","findHandler","regex","captures","currentCapture","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","warn$1","resolvePath","base","relative","stack","isPromise","getRouteConfig","resolveAsyncComponent","exports$1","mapParams","genQuery","canReuse","view","canReuseFn","canDeactivate","fromComponent","expectBoolean","canActivate","aborted","deactivate","callHooks","reuse","activateQueue","saveChildView","activateHook","dataHook","waitForData","activated","loading","$loadingRouteData","_routerView","cachedChildView","_keepAliveRouterView","childView","_rendered","_transitionOnLoad","setCurrent","afterData","afterActivate","loadData","postActivate","processData","promises","resolvedVal","isPlainOjbect","applyOverride","_Vue$util","_parent","$router","$route","_children","_defineMeta","hooksToMergeRE","View","componentDef","viewDef","_isDynamicLiteral","parentView","_rootView","_currentTransition","elementDirective","Link","sameOrigin","link","toggleClasses","onPriority","LINK_UPDATE","activeId","childLinks","existingId","activeIds","updateClasses","onRouteUpdate","onClick","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","go","history","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","queryStringRE","isAbsolute","formatPath","_linkActiveClass","dest","trailingSlashRE","guardComponent","comp","babelHelpers","willAddRoute","addChild","contextEntered","specials","validChars","generate","invalidChars","repeat","isEqual","chars","returned","oCreate","F","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","solutions","hashRE","HTML5History","onChange","baseEl","replaceState","pos","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","formattedPath","isAbsoloute","AbstractHistory","currentPath","RouteTransition","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","reverse","reuseQueue","runQueue","_onTransitionValidated","_view","step","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","nextWithData","exposed","internalKeysRE","Route","_recognizer","_notFoundHandler","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","_addAlias","beforeEach","App","_appContainer","Ctor","_appConstructor","_location","generatedPath","currentParams","targetParams","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","scrollX","offsetTop","externalVue","__decorate","decorators","desc","Reflect","decorate","__metadata","v","metadata","StagePanelView_1","vue_class_component_1","Const_1","Command_1","PanelId","stagePanel","initIO","io","onAddLeftFoul","opReq","CommandId","cs_addLeftFoul","onMinLeftFoul","cs_minLeftFoul","onMinRightFoul","cs_minRightFoul","onAddRightFoul","cs_addRightFoul","onComingActivity","cs_setGameComing","default","timerName","mvpIdx","gameId","playerInfoArr","StagePanelView","BasePanelView_1","PlayerInfo_1","PlayerPanel_1","EventPanel_1","ScorePanel_1","isSubmited","pid","isInitCanvas","initPanel","isInit","initStage","gameInfo","updateLeftScore","scorePanel","setLeftScore","leftScore","updateRightScore","setRightScore","rightScore","straightScore3","param","team","ViewEvent","STRAIGHT3_LEFT","eventPanel","fadeInStraight3","STRAIGHT3_RIGHT","toggleTimer","TimerState","START_STR","PAUSE_STR","toggleTimer1","resetTimer","updatePlayer","playerPanel","setPlayer","idx","PlayerInfo","playerDoc","setAvgEloScore","avgEloScore","updatePlayerAll","playerInfo","fadeInWinPanel","teamInfo","mvpId","fadeOutWinPanel","updatePlayerBackNum","playerCardArr","setBackNumber","backNum","gameDoc","ScorePanel","PlayerPanel","EventPanel","getElem","playerData","onToggleTimer","cs_toggleTimer","onResetTimer","cs_resetTimer","onAddLeftScore","cs_addLeftScore","onAddRightScore","cs_addRightScore","onQueryPlayer","queryId","avatar","onUpdatePlayerNum","cs_updatePlayerBackNum","onStarting","playerIdArr","backNumArr","cs_updatePlayerAll","onSetEloScore","eloScore","setEloScore","onUpdateBackNum","onUpdatePlayer","cs_updatePlayer","playerId","onMinRightScore","cs_minRightScore","onMinLeftScore","cs_minLeftScore","onShowWin","isBlueMvp","isBlueWin","alert","PAUSE","cs_fadeInWinPanel","onHideWin","cs_fadeOutWinPanel","onSubmitGame","date","dateTime","getTime","cs_saveGameRec","onRefresh","reload","BasePanelView","EventDispatcher_1","CommandItem","Command","cmdArr","newCmd","toggleTracker","toggleBallRolling","disableTracker","ci","EventDispatcher","_func","_funcId","broadcastId","broadcast","proxy","_i","funcId","removeAll","VueEx_1","initCanvas","stageWidth","ViewConst","STAGE_WIDTH","stageHeight","STAGE_HEIGHT","canvas","stage","createjs","Stage","autoClear","Ticker","framerate","ctn","Container","cmdId","panel","VueEx","$parentMethods","propName","_0","winPanel","actPanel","screenPanel","ServerConst","SEND_ASYNC","DEF_AVATAR","RUNNING","PLAYER_EDIT","BaseInfo_1","PlayerDoc","phone","weight","dtScore","activityId","gameRec","loseGameCount","winGameCount","isRed","isMvp","backNumber","obj2Class","setPlayerInfoFromData","getPlayerData","winPercent","gameCount","winPercentStr","winpercent","getWinPercent","getStyleIcon","getWinStyleIcon","getRec","saveScore","isWin","getCurWinningPercent","BaseInfo","setPropTo","isdef","paramName","BaseDoc","PlayerRender_1","px","py","invert","playerCard","StagePlayerCard","delayShow","setPlayerInfo","isBlue","JsFunc_1","Fx_1","scale","isDelayShow","_delayShowEnd","setName","nameText","eloScoreText","backNumText","setStyle","_styleCtn","removeAllChildren","styleIcon","Bitmap","_isBluePath","avatarFrame","avatarCtn","avatarMask","Shape","sx","graphics","beginFill","moveTo","lineTo","avatarPath","loadImg","avatarBmp","mask","blink","alpha","scaleX","scaleY","getBounds","Text","textAlign","eloText","newPlayerIcon","styleCtn","Tween","delayCall","newScoreText","sheet","SpriteSheet","animations","1","2","3","4","5","6","7","8","9","images","frames","BitmapText","ascendingProp","descendingProp","mapToSortArray","sortFunc","mapToArr","arrCountSame","arrA","arrB","arrUniqueFilter","path1","img","Image","loadImgArr","pathArr","onLoadImg","combineArr","num","formatSecond","sec","minStr","secStr","min","strMin","strSec","time","loop","isBusy","basePath","txt3","bound","mpvId","mvp","modal","drawRect","playerCtn","isRedWin","titlePath","titleCtn","title","prePlayerIsMvp","pInfo","getWinPlayerCard","bgPath","bg","nameCol","eloScoreDt","GameInfo_1","timeOnSec","scoreCtn","timeText","leftScoreNum","letterSpacing","leftScoreText","leftScoreTextX","rightScoreNum","rightScoreText","rightScoreTextX","leftCircleArr","rightCircleArr","leftScoreBg","rightScoreBg","lTxt","leftAvgEloScoreText","rTxt","rightAvgEloScoreText","timerState","timerId","clearInterval","setInterval","setTime","gameInfoClone","GameInfo","getAvgEloScore","TeamInfo_1","GameDoc","blueScore","redScore","winScore","leftFoul","rightFoul","straightScoreLeft","straightScoreStack","straightScoreRight","playerRecArr","_timer","gameState","unLimitScore","playerDocArr","sum","leftPlayerArr","getLeftTeam","playerArr","getRightTeam","addLeftScore","pushStraightScore","minLeftScore","popStraightScore","minRightScore","addRightScore","getGameId","GAME_STATE_SAVE","setPlayerInfoByIdx","setWinByMvpIdx","mvpPlayerId","setLeftTeamWin","setRightTeamWin","_setGameResult","isLeftWin","teamLeft","TeamInfo","setPlayerArr","teamRight","beat2","_winTeam","_loseTeam","getGameDoc","addRightFoul","minRightFoul","addLeftFoul","minLeftFoul","GAME_STATE_ING","GAME_STATE_FIN","EloUtil_1","player","getPlayerInfoById","setScore","score","beat","loserTeam","win","EloUtil","classicMethod","getScoreArr","playerInArr","teamScore","scoreArr","teamWinScore","winTeamScore","loseTeamScore","winScoreArr","loseScoreArr","saveScoreArr","mix2","getPercentage","getNewPlayerDataArr","getWinningPercent","wp","EloConf","K","winEloScore","loseEloScore","Elo1","Elo2","EloDifference","percentage","pow","round","playerToWinMethod"],"mappings":"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","file":"js/mobile.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Vue = __webpack_require__(4);\r\n\tvar StagePanelViewMobile_1 = __webpack_require__(7);\r\n\tvar MobileView = (function (_super) {\r\n\t    __extends(MobileView, _super);\r\n\t    function MobileView() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    MobileView.prototype.ready = function () {\r\n\t        console.log('mobile ready');\r\n\t    };\r\n\t    MobileView.prototype.connect = function () {\r\n\t    };\r\n\t    return MobileView;\r\n\t}(Vue));\r\n\texports.MobileView = MobileView;\r\n\tVue.use(__webpack_require__(5));\r\n\tvar VueRouter = __webpack_require__(6);\r\n\tVue.use(VueRouter);\r\n\tvar router = new VueRouter();\r\n\trouter.map({\r\n\t    '/': {\r\n\t        component: StagePanelViewMobile_1.StagePanelViewMobile,\r\n\t        name: 'home'\r\n\t    },\r\n\t    '/panel/stage/op': {\r\n\t        component: StagePanelViewMobile_1.StagePanelViewMobile,\r\n\t        name: 'stage'\r\n\t    },\r\n\t});\r\n\trouter.afterEach(function (transition) {\r\n\t    var toPath = transition.to.path;\r\n\t    router.app.isOp = /\\/op/.test(toPath);\r\n\t    console.log('after each!!!', toPath);\r\n\t});\r\n\tfunction onDeviceReady() {\r\n\t    console.log('onDeviceReady');\r\n\t    router.start(MobileView, '#app');\r\n\t}\r\n\tdocument.addEventListener('deviceready', onDeviceReady, false);\r\n\n\n/***/ },\n/* 1 */,\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.24\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tisWechat: isWechat,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if (isA || isO) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.24';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t})\n\t\n\tvar Vue = __webpack_require__(2)\n\t\n\tvar internalHooks = [\n\t  'data',\n\t  'el',\n\t  'init',\n\t  'created',\n\t  'ready',\n\t  'beforeCompile',\n\t  'compiled',\n\t  'beforeDestroy',\n\t  'destroyed',\n\t  'attached',\n\t  'detached',\n\t  'activate'\n\t]\n\t\n\tfunction componentFactory (Component, options) {\n\t  if (!options) {\n\t    options = {}\n\t  }\n\t  options.name = options.name || Component.name\n\t  // prototype props.\n\t  var proto = Component.prototype\n\t  Object.getOwnPropertyNames(proto).forEach(function (key) {\n\t    if (key === 'constructor') {\n\t      return\n\t    }\n\t    // hooks\n\t    if (internalHooks.indexOf(key) > -1) {\n\t      options[key] = proto[key]\n\t      return\n\t    }\n\t    var descriptor = Object.getOwnPropertyDescriptor(proto, key)\n\t    if (typeof descriptor.value === 'function') {\n\t      // methods\n\t      (options.methods || (options.methods = {}))[key] = descriptor.value\n\t    } else if (descriptor.get || descriptor.set) {\n\t      // computed properties\n\t      (options.computed || (options.computed = {}))[key] = {\n\t        get: descriptor.get,\n\t        set: descriptor.set\n\t      }\n\t    }\n\t  })\n\t  // find super\n\t  var superProto = Object.getPrototypeOf(Component.prototype)\n\t  var Super = superProto instanceof Vue\n\t    ? superProto.constructor\n\t    : Vue\n\t  return Super.extend(options)\n\t}\n\t\n\tfunction decorator (options) {\n\t  if (typeof options === 'function') {\n\t    return componentFactory(options)\n\t  }\n\t  return function (Component) {\n\t    return componentFactory(Component, options)\n\t  }\n\t}\n\t\n\texports.default = decorator\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.26\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n\tvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\t\n\t// detecting iOS UIWebView by indexedDB\n\tvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tiosVersionMatch: iosVersionMatch,\n\t\tiosVersion: iosVersion,\n\t\thasMutationObserverBug: hasMutationObserverBug,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (false) {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.26';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * vue-resource v0.9.1\n\t * https://github.com/vuejs/vue-resource\n\t * Released under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING = 2;\n\t\n\tfunction Promise$2(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise$2.reject = function (r) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise$2.resolve = function (x) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise$2.all = function all(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        var count = 0,\n\t            result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise$2.race = function race(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p$1 = Promise$2.prototype;\n\t\n\tp$1.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.notify = function notify() {\n\t    var promise = this;\n\t\n\t    nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp$1.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise$2(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp$1.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\tvar PromiseObj = window.Promise || Promise$2;\n\t\n\tfunction Promise$1(executor, context) {\n\t\n\t    if (executor instanceof PromiseObj) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new PromiseObj(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromise$1.all = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.all(iterable), context);\n\t};\n\t\n\tPromise$1.resolve = function (value, context) {\n\t    return new Promise$1(PromiseObj.resolve(value), context);\n\t};\n\t\n\tPromise$1.reject = function (reason, context) {\n\t    return new Promise$1(PromiseObj.reject(reason), context);\n\t};\n\t\n\tPromise$1.race = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.race(iterable), context);\n\t};\n\t\n\tvar p = Promise$1.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new Promise$1(this.promise.catch(rejected), this.context);\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t        callback.call(this);\n\t        return value;\n\t    }, function (reason) {\n\t        callback.call(this);\n\t        return PromiseObj.reject(reason);\n\t    });\n\t};\n\t\n\tvar debug = false;\n\tvar util = {};\n\tvar array = [];\n\tfunction Util (Vue) {\n\t    util = Vue.util;\n\t    debug = Vue.config.debug || !Vue.config.silent;\n\t}\n\t\n\tfunction warn(msg) {\n\t    if (typeof console !== 'undefined' && debug) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t}\n\t\n\tfunction error(msg) {\n\t    if (typeof console !== 'undefined') {\n\t        console.error(msg);\n\t    }\n\t}\n\t\n\tfunction nextTick(cb, ctx) {\n\t    return util.nextTick(cb, ctx);\n\t}\n\t\n\tfunction trim(str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t}\n\t\n\tvar isArray = Array.isArray;\n\t\n\tfunction isString(val) {\n\t    return typeof val === 'string';\n\t}\n\t\n\tfunction isBoolean(val) {\n\t    return val === true || val === false;\n\t}\n\t\n\tfunction isFunction(val) {\n\t    return typeof val === 'function';\n\t}\n\t\n\tfunction isObject(obj) {\n\t    return obj !== null && typeof obj === 'object';\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t}\n\t\n\tfunction isFormData(obj) {\n\t    return typeof FormData !== 'undefined' && obj instanceof FormData;\n\t}\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = Promise$1.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\t\n\tfunction options(fn, obj, opts) {\n\t\n\t    opts = opts || {};\n\t\n\t    if (isFunction(opts)) {\n\t        opts = opts.call(obj);\n\t    }\n\t\n\t    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n\t}\n\t\n\tfunction each(obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t}\n\t\n\tvar assign = Object.assign || _assign;\n\t\n\tfunction merge(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source, true);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction defaults(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t\n\t        for (var key in source) {\n\t            if (target[key] === undefined) {\n\t                target[key] = source[key];\n\t            }\n\t        }\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _assign(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n\t            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (isArray(source[key]) && !isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            _merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\t\n\tfunction root (options, next) {\n\t\n\t    var url = next(options);\n\t\n\t    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\tfunction query (options, next) {\n\t\n\t    var urlParams = Object.keys(Url.options.params),\n\t        query = {},\n\t        url = next(options);\n\t\n\t    each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = Url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\tfunction expand(url, params, variables) {\n\t\n\t    var tmpl = parse(url),\n\t        expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t}\n\t\n\tfunction parse(template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n\t        variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function (context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null,\n\t                        values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t                } else {\n\t                    return encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t}\n\t\n\tfunction getValues(context, operator, key, modifier) {\n\t\n\t    var value = context[key],\n\t        result = [];\n\t\n\t    if (isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            result.push(encodeValue(operator, value[k], k));\n\t                        }\n\t                    });\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        tmp.push(encodeValue(operator, value));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction isDefined(value) {\n\t    return value !== undefined && value !== null;\n\t}\n\t\n\tfunction isKeyOperator(operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t}\n\t\n\tfunction encodeValue(operator, value, key) {\n\t\n\t    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t}\n\t\n\tfunction encodeReserved(str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t}\n\t\n\tfunction template (options) {\n\t\n\t    var variables = [],\n\t        url = expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\t\n\tfunction Url(url, params) {\n\t\n\t    var self = this || {},\n\t        options = url,\n\t        transform;\n\t\n\t    if (isString(url)) {\n\t        options = { url: url, params: params };\n\t    }\n\t\n\t    options = merge({}, Url.options, self.$options, options);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, self.$vm);\n\t    });\n\t\n\t    return transform(options);\n\t}\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [template, query, root];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [],\n\t        escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = isArray(obj),\n\t        plain = isPlainObject(obj),\n\t        hash;\n\t\n\t    each(obj, function (value, key) {\n\t\n\t        hash = isObject(value) || isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\tfunction xdrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(),\n\t            handler = function (event) {\n\t\n\t            var response = request.respondWith(xdr.responseText, {\n\t                status: xdr.status,\n\t                statusText: xdr.statusText\n\t            });\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        request.abort = function () {\n\t            return xdr.abort();\n\t        };\n\t\n\t        xdr.open(request.method, request.getUrl(), true);\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = function () {};\n\t        xdr.onprogress = function () {};\n\t        xdr.send(request.getBody());\n\t    });\n\t}\n\t\n\tvar ORIGIN_URL = Url.parse(location.href);\n\tvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\t\n\tfunction cors (request, next) {\n\t\n\t    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n\t        request.crossOrigin = true;\n\t    }\n\t\n\t    if (request.crossOrigin) {\n\t\n\t        if (!SUPPORTS_CORS) {\n\t            request.client = xdrClient;\n\t        }\n\t\n\t        delete request.emulateHTTP;\n\t    }\n\t\n\t    next();\n\t}\n\t\n\tfunction crossOrigin(request) {\n\t\n\t    var requestUrl = Url.parse(Url(request));\n\t\n\t    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n\t}\n\t\n\tfunction body (request, next) {\n\t\n\t    if (request.emulateJSON && isPlainObject(request.body)) {\n\t        request.body = Url.params(request.body);\n\t        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t    }\n\t\n\t    if (isFormData(request.body)) {\n\t        delete request.headers['Content-Type'];\n\t    }\n\t\n\t    if (isPlainObject(request.body)) {\n\t        request.body = JSON.stringify(request.body);\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        var contentType = response.headers['Content-Type'];\n\t\n\t        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\t\n\t            try {\n\t                response.data = response.json();\n\t            } catch (e) {\n\t                response.data = null;\n\t            }\n\t        } else {\n\t            response.data = response.text();\n\t        }\n\t    });\n\t}\n\t\n\tfunction jsonpClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var name = request.jsonp || 'callback',\n\t            callback = '_jsonp' + Math.random().toString(36).substr(2),\n\t            body = null,\n\t            handler,\n\t            script;\n\t\n\t        handler = function (event) {\n\t\n\t            var status = 0;\n\t\n\t            if (event.type === 'load' && body !== null) {\n\t                status = 200;\n\t            } else if (event.type === 'error') {\n\t                status = 404;\n\t            }\n\t\n\t            resolve(request.respondWith(body, { status: status }));\n\t\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\t\n\t        request.params[name] = callback;\n\t\n\t        window[callback] = function (result) {\n\t            body = JSON.stringify(result);\n\t        };\n\t\n\t        script = document.createElement('script');\n\t        script.src = request.getUrl();\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t}\n\t\n\tfunction jsonp (request, next) {\n\t\n\t    if (request.method == 'JSONP') {\n\t        request.client = jsonpClient;\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        if (request.method == 'JSONP') {\n\t            response.data = response.json();\n\t        }\n\t    });\n\t}\n\t\n\tfunction before (request, next) {\n\t\n\t    if (isFunction(request.before)) {\n\t        request.before.call(this, request);\n\t    }\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tfunction method (request, next) {\n\t\n\t    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n\t        request.headers['X-HTTP-Method-Override'] = request.method;\n\t        request.method = 'POST';\n\t    }\n\t\n\t    next();\n\t}\n\t\n\tfunction header (request, next) {\n\t\n\t    request.method = request.method.toUpperCase();\n\t    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * Timeout Interceptor.\n\t */\n\t\n\tfunction timeout (request, next) {\n\t\n\t    var timeout;\n\t\n\t    if (request.timeout) {\n\t        timeout = setTimeout(function () {\n\t            request.cancel();\n\t        }, request.timeout);\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        clearTimeout(timeout);\n\t    });\n\t}\n\t\n\tfunction xhrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(),\n\t            handler = function (event) {\n\t\n\t            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n\t                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n\t                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n\t                headers: parseHeaders(xhr.getAllResponseHeaders())\n\t            });\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        request.abort = function () {\n\t            return xhr.abort();\n\t        };\n\t\n\t        xhr.open(request.method, request.getUrl(), true);\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onerror = handler;\n\t\n\t        if (request.progress) {\n\t            if (request.method === 'GET') {\n\t                xhr.addEventListener('progress', request.progress);\n\t            } else if (/^(POST|PUT)$/i.test(request.method)) {\n\t                xhr.upload.addEventListener('progress', request.progress);\n\t            }\n\t        }\n\t\n\t        if (request.credentials === true) {\n\t            xhr.withCredentials = true;\n\t        }\n\t\n\t        each(request.headers || {}, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t        });\n\t\n\t        xhr.send(request.getBody());\n\t    });\n\t}\n\t\n\tfunction parseHeaders(str) {\n\t\n\t    var headers = {},\n\t        value,\n\t        name,\n\t        i;\n\t\n\t    each(trim(str).split('\\n'), function (row) {\n\t\n\t        i = row.indexOf(':');\n\t        name = trim(row.slice(0, i));\n\t        value = trim(row.slice(i + 1));\n\t\n\t        if (headers[name]) {\n\t\n\t            if (isArray(headers[name])) {\n\t                headers[name].push(value);\n\t            } else {\n\t                headers[name] = [headers[name], value];\n\t            }\n\t        } else {\n\t\n\t            headers[name] = value;\n\t        }\n\t    });\n\t\n\t    return headers;\n\t}\n\t\n\tfunction Client (context) {\n\t\n\t    var reqHandlers = [sendRequest],\n\t        resHandlers = [],\n\t        handler;\n\t\n\t    if (!isObject(context)) {\n\t        context = null;\n\t    }\n\t\n\t    function Client(request) {\n\t        return new Promise$1(function (resolve) {\n\t\n\t            function exec() {\n\t\n\t                handler = reqHandlers.pop();\n\t\n\t                if (isFunction(handler)) {\n\t                    handler.call(context, request, next);\n\t                } else {\n\t                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n\t                    next();\n\t                }\n\t            }\n\t\n\t            function next(response) {\n\t                when(response, function (response) {\n\t\n\t                    if (isFunction(response)) {\n\t\n\t                        resHandlers.unshift(response);\n\t                    } else if (isObject(response)) {\n\t\n\t                        resHandlers.forEach(function (handler) {\n\t                            handler.call(context, response);\n\t                        });\n\t\n\t                        resolve(response);\n\t\n\t                        return;\n\t                    }\n\t\n\t                    exec();\n\t                });\n\t            }\n\t\n\t            exec();\n\t        }, context);\n\t    }\n\t\n\t    Client.use = function (handler) {\n\t        reqHandlers.push(handler);\n\t    };\n\t\n\t    return Client;\n\t}\n\t\n\tfunction sendRequest(request, resolve) {\n\t\n\t    var client = request.client || xhrClient;\n\t\n\t    resolve(client(request));\n\t}\n\t\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\t\n\t/**\n\t * HTTP Response.\n\t */\n\t\n\tvar Response = function () {\n\t    function Response(body, _ref) {\n\t        var url = _ref.url;\n\t        var headers = _ref.headers;\n\t        var status = _ref.status;\n\t        var statusText = _ref.statusText;\n\t        classCallCheck(this, Response);\n\t\n\t\n\t        this.url = url;\n\t        this.body = body;\n\t        this.headers = headers || {};\n\t        this.status = status || 0;\n\t        this.statusText = statusText || '';\n\t        this.ok = status >= 200 && status < 300;\n\t    }\n\t\n\t    Response.prototype.text = function text() {\n\t        return this.body;\n\t    };\n\t\n\t    Response.prototype.blob = function blob() {\n\t        return new Blob([this.body]);\n\t    };\n\t\n\t    Response.prototype.json = function json() {\n\t        return JSON.parse(this.body);\n\t    };\n\t\n\t    return Response;\n\t}();\n\t\n\tvar Request = function () {\n\t    function Request(options) {\n\t        classCallCheck(this, Request);\n\t\n\t\n\t        this.method = 'GET';\n\t        this.body = null;\n\t        this.params = {};\n\t        this.headers = {};\n\t\n\t        assign(this, options);\n\t    }\n\t\n\t    Request.prototype.getUrl = function getUrl() {\n\t        return Url(this);\n\t    };\n\t\n\t    Request.prototype.getBody = function getBody() {\n\t        return this.body;\n\t    };\n\t\n\t    Request.prototype.respondWith = function respondWith(body, options) {\n\t        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n\t    };\n\t\n\t    return Request;\n\t}();\n\t\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\n\tvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\n\tvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\t\n\tfunction Http(options) {\n\t\n\t    var self = this || {},\n\t        client = Client(self.$vm);\n\t\n\t    defaults(options || {}, self.$options, Http.options);\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client.use(handler);\n\t    });\n\t\n\t    return client(new Request(options)).then(function (response) {\n\t\n\t        return response.ok ? response : Promise$1.reject(response);\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            error(response);\n\t        }\n\t\n\t        return Promise$1.reject(response);\n\t    });\n\t}\n\t\n\tHttp.options = {};\n\t\n\tHttp.headers = {\n\t    put: JSON_CONTENT_TYPE,\n\t    post: JSON_CONTENT_TYPE,\n\t    patch: JSON_CONTENT_TYPE,\n\t    delete: JSON_CONTENT_TYPE,\n\t    custom: CUSTOM_HEADERS,\n\t    common: COMMON_HEADERS\n\t};\n\t\n\tHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\t\n\t['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, options) {\n\t        return this(assign(options || {}, { url: url, method: method }));\n\t    };\n\t});\n\t\n\t['post', 'put', 'patch'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, body, options) {\n\t        return this(assign(options || {}, { url: url, method: method, body: body }));\n\t    };\n\t});\n\t\n\tfunction Resource(url, params, actions, options) {\n\t\n\t    var self = this || {},\n\t        resource = {};\n\t\n\t    actions = assign({}, Resource.actions, actions);\n\t\n\t    each(actions, function (action, name) {\n\t\n\t        action = merge({ url: url, params: params || {} }, options, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || Http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options = assign({}, action),\n\t        params = {},\n\t        body;\n\t\n\t    switch (args.length) {\n\t\n\t        case 2:\n\t\n\t            params = args[0];\n\t            body = args[1];\n\t\n\t            break;\n\t\n\t        case 1:\n\t\n\t            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                body = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options.body = body;\n\t    options.params = assign({}, options.params, params);\n\t\n\t    return options;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: { method: 'GET' },\n\t    save: { method: 'POST' },\n\t    query: { method: 'GET' },\n\t    update: { method: 'PUT' },\n\t    remove: { method: 'DELETE' },\n\t    delete: { method: 'DELETE' }\n\t\n\t};\n\t\n\tfunction plugin(Vue) {\n\t\n\t    if (plugin.installed) {\n\t        return;\n\t    }\n\t\n\t    Util(Vue);\n\t\n\t    Vue.url = Url;\n\t    Vue.http = Http;\n\t    Vue.resource = Resource;\n\t    Vue.Promise = Promise$1;\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function () {\n\t                return options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function () {\n\t                return options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function () {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function () {\n\t                var _this = this;\n\t\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, _this);\n\t                };\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(plugin);\n\t}\n\t\n\tmodule.exports = plugin;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar StagePanelView_1 = __webpack_require__(8);\r\n\tvar vue_class_component_1 = __webpack_require__(26);\r\n\tvar Const_1 = __webpack_require__(27);\r\n\tvar Command_1 = __webpack_require__(28);\r\n\tvar StagePanelViewMobile = (function (_super) {\r\n\t    __extends(StagePanelViewMobile, _super);\r\n\t    function StagePanelViewMobile() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    StagePanelViewMobile.prototype.ready = function () {\r\n\t        _super.prototype.ready.call(this, Const_1.PanelId.stagePanel, false);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.initIO = function (io) {\r\n\t        console.log('init io!!!');\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onAddLeftFoul = function () {\r\n\t        console.log('onAddLeftFoul');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_addLeftFoul);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onMinLeftFoul = function () {\r\n\t        console.log('onMinLeftFoul');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_minLeftFoul);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onMinRightFoul = function () {\r\n\t        console.log('onMinRightFoul');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_minRightFoul);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onAddRightFoul = function () {\r\n\t        console.log('onAddRightFoul');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_addRightFoul);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onComingActivity = function () {\r\n\t        console.log('onComingActivity');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_setGameComing);\r\n\t    };\r\n\t    StagePanelViewMobile = __decorate([\r\n\t        vue_class_component_1.default({\r\n\t            template: __webpack_require__(29),\r\n\t            props: {\r\n\t                op: {\r\n\t                    type: Boolean,\r\n\t                    required: true,\r\n\t                    default: false\r\n\t                },\r\n\t                timerName: {\r\n\t                    type: String,\r\n\t                    default: \"start\"\r\n\t                },\r\n\t                mvpIdx: {\r\n\t                    type: Number,\r\n\t                    required: true,\r\n\t                    default: 0\r\n\t                },\r\n\t                gameId: {\r\n\t                    type: Number,\r\n\t                    required: true,\r\n\t                    default: 0\r\n\t                },\r\n\t                playerInfoArr: {\r\n\t                    type: Array,\r\n\t                    default: [1, 2, 3, 4, 5, 6, 7, 8]\r\n\t                }\r\n\t            }\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], StagePanelViewMobile);\r\n\t    return StagePanelViewMobile;\r\n\t}(StagePanelView_1.StagePanelView));\r\n\texports.StagePanelViewMobile = StagePanelViewMobile;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar Command_1 = __webpack_require__(9);\r\n\tvar vue_class_component_1 = __webpack_require__(3);\r\n\tvar BasePanelView_1 = __webpack_require__(11);\r\n\tvar Const_1 = __webpack_require__(13);\r\n\tvar PlayerInfo_1 = __webpack_require__(14);\r\n\tvar PlayerPanel_1 = __webpack_require__(16);\r\n\tvar EventPanel_1 = __webpack_require__(20);\r\n\tvar ScorePanel_1 = __webpack_require__(21);\r\n\tvar StagePanelView = (function (_super) {\r\n\t    __extends(StagePanelView, _super);\r\n\t    function StagePanelView() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.isSubmited = false;\r\n\t    }\r\n\t    StagePanelView.prototype.ready = function (pid, isInitCanvas) {\r\n\t        if (isInitCanvas === void 0) { isInitCanvas = true; }\r\n\t        if (!pid)\r\n\t            pid = Const_1.PanelId.stagePanel;\r\n\t        var io = _super.prototype.ready.call(this, pid, isInitCanvas);\r\n\t        this.initIO(io);\r\n\t    };\r\n\t    StagePanelView.prototype.initIO = function (io) {\r\n\t        var _this = this;\r\n\t        io.on(\"\" + Command_1.CommandId.initPanel, function (data) {\r\n\t            console.log(\"\" + Command_1.CommandId.initPanel, data);\r\n\t            if (!_this.isInit && _this.isInitCanvas)\r\n\t                _this.initStage(data.gameInfo);\r\n\t        });\r\n\t        io\r\n\t            .on(\"\" + Command_1.CommandId.updateLeftScore, function (data) {\r\n\t            console.log(\"\" + Command_1.CommandId.updateLeftScore, data);\r\n\t            _this.scorePanel.setLeftScore(data.leftScore);\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.updateRightScore, function (data) {\r\n\t            _this.scorePanel.setRightScore(data.rightScore);\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.straightScore3, function (param) {\r\n\t            if (param.team === Const_1.ViewEvent.STRAIGHT3_LEFT) {\r\n\t                _this.eventPanel.fadeInStraight3(false);\r\n\t            }\r\n\t            else if (param.team === Const_1.ViewEvent.STRAIGHT3_RIGHT) {\r\n\t                _this.eventPanel.fadeInStraight3(true);\r\n\t            }\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.toggleTimer, function (data) {\r\n\t            if (_this.timerName === Const_1.TimerState.START_STR)\r\n\t                _this.timerName = Const_1.TimerState.PAUSE_STR;\r\n\t            else\r\n\t                _this.timerName = Const_1.TimerState.START_STR;\r\n\t            _this.scorePanel.toggleTimer1();\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.resetTimer, function (data) {\r\n\t            _this.timerName = Const_1.TimerState.START_STR;\r\n\t            _this.scorePanel.resetTimer();\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.updatePlayer, function (data) {\r\n\t            _this.playerPanel.setPlayer(data.idx, new PlayerInfo_1.PlayerInfo(data.playerDoc));\r\n\t            _this.scorePanel.setAvgEloScore(data.avgEloScore);\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.updatePlayerAll, function (param) {\r\n\t            for (var i = 0; i < param.playerInfoArr.length; i++) {\r\n\t                var playerInfo = new PlayerInfo_1.PlayerInfo(param.playerInfoArr[i]);\r\n\t                _this.playerPanel.setPlayer(i, playerInfo);\r\n\t            }\r\n\t            _this.scorePanel.setLeftScore(0);\r\n\t            _this.scorePanel.setRightScore(0);\r\n\t            _this.scorePanel.setAvgEloScore(param.avgEloScore);\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.fadeInWinPanel, function (param) {\r\n\t            var teamInfo = param.teamInfo;\r\n\t            var mvpIdx = param.mvpIdx;\r\n\t            var mvpId = param.mvpId;\r\n\t            _this.eventPanel.fadeInWinPanel(teamInfo, mvpIdx, mvpId);\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.fadeOutWinPanel, function (param) {\r\n\t            _this.eventPanel.fadeOutWinPanel();\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.updatePlayerBackNum, function (param) {\r\n\t            _this.playerPanel.playerCardArr[param.idx].setBackNumber(param.backNum);\r\n\t        });\r\n\t    };\r\n\t    StagePanelView.prototype.initStage = function (gameDoc) {\r\n\t        this.isInit = true;\r\n\t        this.scorePanel = new ScorePanel_1.ScorePanel(this);\r\n\t        this.scorePanel.init(gameDoc);\r\n\t        this.playerPanel = new PlayerPanel_1.PlayerPanel(this);\r\n\t        this.playerPanel.init(gameDoc);\r\n\t        this.gameId = gameDoc.id;\r\n\t        this.eventPanel = new EventPanel_1.EventPanel(this);\r\n\t        console.log('initStage', gameDoc);\r\n\t        if (this.op) {\r\n\t            for (var i = 0; i < gameDoc.playerInfoArr.length; i++) {\r\n\t                var playerInfo = gameDoc.playerInfoArr[i];\r\n\t                if (playerInfo)\r\n\t                    this.getElem(\"#player\" + i).value = playerInfo.playerData.id;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    StagePanelView.prototype.onToggleTimer = function () {\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_toggleTimer);\r\n\t        console.log('onToggleTimer');\r\n\t    };\r\n\t    StagePanelView.prototype.onResetTimer = function () {\r\n\t        console.log('onResetTimer');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_resetTimer);\r\n\t    };\r\n\t    StagePanelView.prototype.onAddLeftScore = function () {\r\n\t        console.log('onAddLeftScore');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_addLeftScore, { param: 'addLeftScore' });\r\n\t    };\r\n\t    StagePanelView.prototype.onAddRightScore = function () {\r\n\t        console.log('onAddRightScore');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_addRightScore);\r\n\t    };\r\n\t    StagePanelView.prototype.onQueryPlayer = function (idx) {\r\n\t        var _this = this;\r\n\t        var queryId = this.getElem(\"#player\" + idx).value;\r\n\t        console.log('onQueryPlayer', idx, queryId);\r\n\t        this.post(\"/db/player/\" + queryId, function (data) {\r\n\t            console.log('res: ', data);\r\n\t            var playerDoc = data.playerDoc;\r\n\t            _this.getElem('#playerImg' + idx).src = playerDoc.avatar;\r\n\t        });\r\n\t    };\r\n\t    StagePanelView.prototype.onUpdatePlayerNum = function (idx) {\r\n\t        var backNum = this.getElem(\"#playerNum\" + idx).value;\r\n\t        console.log('onUpdatePlayerNum', idx, backNum);\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerBackNum, { idx: idx, backNum: backNum });\r\n\t    };\r\n\t    StagePanelView.prototype.onStarting = function () {\r\n\t        console.log('onStarting');\r\n\t        var playerIdArr = [];\r\n\t        var backNumArr = [];\r\n\t        for (var i = 0; i < 8; i++) {\r\n\t            var queryId = Number(this.getElem(\"#player\" + i).value);\r\n\t            playerIdArr.push(queryId);\r\n\t            backNumArr.push(Number(this.getElem(\"#playerNum\" + i).value));\r\n\t        }\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerAll, { playerIdArr: playerIdArr, backNumArr: backNumArr });\r\n\t    };\r\n\t    StagePanelView.prototype.onSetEloScore = function (idx) {\r\n\t        var eloScore = Number(this.getElem(\"#eloScore\" + idx).value);\r\n\t        this.playerPanel.setEloScore(idx, eloScore);\r\n\t    };\r\n\t    StagePanelView.prototype.onUpdateBackNum = function () {\r\n\t        for (var idx = 0; idx < 8; idx++) {\r\n\t            var backNum = this.getElem(\"#playerNum\" + idx).value;\r\n\t            console.log('onUpdatePlayerNum', idx, backNum);\r\n\t            this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerBackNum, { idx: idx, backNum: backNum });\r\n\t        }\r\n\t    };\r\n\t    StagePanelView.prototype.onUpdatePlayer = function (idx) {\r\n\t        console.log('onUpdatePlayer', idx);\r\n\t        var queryId = Number(this.getElem(\"#player\" + idx).value);\r\n\t        console.log('onQueryPlayer', idx, queryId);\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayer, { idx: idx, playerId: queryId });\r\n\t    };\r\n\t    StagePanelView.prototype.onMinRightScore = function () {\r\n\t        console.log('onMinRightScore');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_minRightScore);\r\n\t    };\r\n\t    StagePanelView.prototype.onMinLeftScore = function () {\r\n\t        console.log('onMinLeftScore');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_minLeftScore);\r\n\t    };\r\n\t    StagePanelView.prototype.onShowWin = function () {\r\n\t        console.log('onShowWin mvp ', this.mvpIdx);\r\n\t        var isBlueMvp = this.mvpIdx < 4;\r\n\t        if (this.scorePanel.isBlueWin != isBlueMvp) {\r\n\t            alert('比赛结果与mvp不符');\r\n\t        }\r\n\t        else {\r\n\t            this.opReq(\"\" + Command_1.CommandId.cs_toggleTimer, { state: Const_1.TimerState.PAUSE });\r\n\t            this.opReq(\"\" + Command_1.CommandId.cs_fadeInWinPanel, { mvpIdx: this.mvpIdx });\r\n\t        }\r\n\t    };\r\n\t    StagePanelView.prototype.onHideWin = function () {\r\n\t        console.log('onHideWin mvp ');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_fadeOutWinPanel);\r\n\t    };\r\n\t    StagePanelView.prototype.onSubmitGame = function () {\r\n\t        var _this = this;\r\n\t        var isBlueMvp = this.mvpIdx < 4;\r\n\t        if (this.scorePanel.isBlueWin != isBlueMvp) {\r\n\t            alert('比赛结果与mvp不符');\r\n\t        }\r\n\t        else {\r\n\t            var date = new Date();\r\n\t            var dateTime = date.getTime();\r\n\t            console.log('onSubmitGame', dateTime);\r\n\t            this.opReq(\"\" + Command_1.CommandId.cs_saveGameRec, { date: dateTime }, function (res) {\r\n\t                console.log(res);\r\n\t                _this.isSubmited = true;\r\n\t                if (res) {\r\n\t                    alert('比赛结果提交成功');\r\n\t                }\r\n\t                else {\r\n\t                    alert('比赛结果已经提交过了');\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    StagePanelView.prototype.onRefresh = function () {\r\n\t        console.log('onRefresh');\r\n\t        if (this.isSubmited)\r\n\t            window.location.reload();\r\n\t        else\r\n\t            alert('还没提交比赛结果');\r\n\t    };\r\n\t    StagePanelView = __decorate([\r\n\t        vue_class_component_1.default({\r\n\t            template: __webpack_require__(25),\r\n\t            props: {\r\n\t                op: {\r\n\t                    type: Boolean,\r\n\t                    required: true,\r\n\t                    default: false\r\n\t                },\r\n\t                timerName: {\r\n\t                    type: String,\r\n\t                    default: \"start\"\r\n\t                },\r\n\t                mvpIdx: {\r\n\t                    type: Number,\r\n\t                    required: true,\r\n\t                    default: 0\r\n\t                },\r\n\t                gameId: {\r\n\t                    type: Number,\r\n\t                    required: true,\r\n\t                    default: 0\r\n\t                },\r\n\t                playerInfoArr: {\r\n\t                    type: Array,\r\n\t                    default: [1, 2, 3, 4, 5, 6, 7, 8]\r\n\t                }\r\n\t            }\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], StagePanelView);\r\n\t    return StagePanelView;\r\n\t}(BasePanelView_1.BasePanelView));\r\n\texports.StagePanelView = StagePanelView;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar EventDispatcher_1 = __webpack_require__(10);\r\n\t(function (CommandId) {\r\n\t    CommandId[CommandId[\"ShowConsoleWin\"] = 100000] = \"ShowConsoleWin\";\r\n\t    CommandId[CommandId[\"toggleTracker\"] = 100001] = \"toggleTracker\";\r\n\t    CommandId[CommandId[\"toggleBallRolling\"] = 100002] = \"toggleBallRolling\";\r\n\t    CommandId[CommandId[\"toggleTimer\"] = 100003] = \"toggleTimer\";\r\n\t    CommandId[CommandId[\"cs_toggleTimer\"] = 100004] = \"cs_toggleTimer\";\r\n\t    CommandId[CommandId[\"resetTimer\"] = 100005] = \"resetTimer\";\r\n\t    CommandId[CommandId[\"cs_resetTimer\"] = 100006] = \"cs_resetTimer\";\r\n\t    CommandId[CommandId[\"disableTracker\"] = 100007] = \"disableTracker\";\r\n\t    CommandId[CommandId[\"updateLeftScore\"] = 100008] = \"updateLeftScore\";\r\n\t    CommandId[CommandId[\"cs_addLeftScore\"] = 100009] = \"cs_addLeftScore\";\r\n\t    CommandId[CommandId[\"updateRightScore\"] = 100010] = \"updateRightScore\";\r\n\t    CommandId[CommandId[\"cs_addRightScore\"] = 100011] = \"cs_addRightScore\";\r\n\t    CommandId[CommandId[\"minLeftScore\"] = 100012] = \"minLeftScore\";\r\n\t    CommandId[CommandId[\"cs_minLeftScore\"] = 100013] = \"cs_minLeftScore\";\r\n\t    CommandId[CommandId[\"minRightScore\"] = 100014] = \"minRightScore\";\r\n\t    CommandId[CommandId[\"cs_minRightScore\"] = 100015] = \"cs_minRightScore\";\r\n\t    CommandId[CommandId[\"updateLeftFoul\"] = 100016] = \"updateLeftFoul\";\r\n\t    CommandId[CommandId[\"cs_addLeftFoul\"] = 100017] = \"cs_addLeftFoul\";\r\n\t    CommandId[CommandId[\"cs_minLeftFoul\"] = 100018] = \"cs_minLeftFoul\";\r\n\t    CommandId[CommandId[\"updateRightFoul\"] = 100019] = \"updateRightFoul\";\r\n\t    CommandId[CommandId[\"cs_addRightFoul\"] = 100020] = \"cs_addRightFoul\";\r\n\t    CommandId[CommandId[\"cs_minRightFoul\"] = 100021] = \"cs_minRightFoul\";\r\n\t    CommandId[CommandId[\"stageFadeOut\"] = 100022] = \"stageFadeOut\";\r\n\t    CommandId[CommandId[\"cs_fadeOut\"] = 100023] = \"cs_fadeOut\";\r\n\t    CommandId[CommandId[\"playerScore\"] = 100024] = \"playerScore\";\r\n\t    CommandId[CommandId[\"cs_playerScore\"] = 100025] = \"cs_playerScore\";\r\n\t    CommandId[CommandId[\"stageFadeIn\"] = 100026] = \"stageFadeIn\";\r\n\t    CommandId[CommandId[\"cs_stageFadeIn\"] = 100027] = \"cs_stageFadeIn\";\r\n\t    CommandId[CommandId[\"moveStagePanel\"] = 100028] = \"moveStagePanel\";\r\n\t    CommandId[CommandId[\"cs_moveStagePanel\"] = 100029] = \"cs_moveStagePanel\";\r\n\t    CommandId[CommandId[\"updatePlayer\"] = 100030] = \"updatePlayer\";\r\n\t    CommandId[CommandId[\"cs_updatePlayer\"] = 100031] = \"cs_updatePlayer\";\r\n\t    CommandId[CommandId[\"updatePlayerAll\"] = 100032] = \"updatePlayerAll\";\r\n\t    CommandId[CommandId[\"cs_updatePlayerAll\"] = 100033] = \"cs_updatePlayerAll\";\r\n\t    CommandId[CommandId[\"cs_updatePlayerBackNum\"] = 100034] = \"cs_updatePlayerBackNum\";\r\n\t    CommandId[CommandId[\"updatePlayerBackNum\"] = 100035] = \"updatePlayerBackNum\";\r\n\t    CommandId[CommandId[\"fadeInNotice\"] = 100036] = \"fadeInNotice\";\r\n\t    CommandId[CommandId[\"cs_fadeInNotice\"] = 100037] = \"cs_fadeInNotice\";\r\n\t    CommandId[CommandId[\"cs_resetGame\"] = 100038] = \"cs_resetGame\";\r\n\t    CommandId[CommandId[\"cs_unLimitScore\"] = 100039] = \"cs_unLimitScore\";\r\n\t    CommandId[CommandId[\"unLimitScore\"] = 100040] = \"unLimitScore\";\r\n\t    CommandId[CommandId[\"fadeInWinPanel\"] = 100041] = \"fadeInWinPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInWinPanel\"] = 100042] = \"cs_fadeInWinPanel\";\r\n\t    CommandId[CommandId[\"fadeOutWinPanel\"] = 100043] = \"fadeOutWinPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeOutWinPanel\"] = 100044] = \"cs_fadeOutWinPanel\";\r\n\t    CommandId[CommandId[\"saveGameRec\"] = 100045] = \"saveGameRec\";\r\n\t    CommandId[CommandId[\"cs_saveGameRec\"] = 100046] = \"cs_saveGameRec\";\r\n\t    CommandId[CommandId[\"cs_queryPlayerByPos\"] = 100047] = \"cs_queryPlayerByPos\";\r\n\t    CommandId[CommandId[\"fadeInPlayerPanel\"] = 100048] = \"fadeInPlayerPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInPlayerPanel\"] = 100049] = \"cs_fadeInPlayerPanel\";\r\n\t    CommandId[CommandId[\"fadeOutPlayerPanel\"] = 100050] = \"fadeOutPlayerPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeOutPlayerPanel\"] = 100051] = \"cs_fadeOutPlayerPanel\";\r\n\t    CommandId[CommandId[\"movePlayerPanel\"] = 100052] = \"movePlayerPanel\";\r\n\t    CommandId[CommandId[\"cs_movePlayerPanel\"] = 100053] = \"cs_movePlayerPanel\";\r\n\t    CommandId[CommandId[\"straightScore3\"] = 100054] = \"straightScore3\";\r\n\t    CommandId[CommandId[\"straightScore5\"] = 100055] = \"straightScore5\";\r\n\t    CommandId[CommandId[\"initPanel\"] = 100056] = \"initPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInActivityPanel\"] = 100057] = \"cs_fadeInActivityPanel\";\r\n\t    CommandId[CommandId[\"fadeInActivityPanel\"] = 100058] = \"fadeInActivityPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInNextActivity\"] = 100059] = \"cs_fadeInNextActivity\";\r\n\t    CommandId[CommandId[\"fadeInNextActivity\"] = 100060] = \"fadeInNextActivity\";\r\n\t    CommandId[CommandId[\"cs_fadeInActivityExGame\"] = 100061] = \"cs_fadeInActivityExGame\";\r\n\t    CommandId[CommandId[\"fadeInActivityExGame\"] = 100062] = \"fadeInActivityExGame\";\r\n\t    CommandId[CommandId[\"cs_fadeOutActivityPanel\"] = 100063] = \"cs_fadeOutActivityPanel\";\r\n\t    CommandId[CommandId[\"fadeOutActivityPanel\"] = 100064] = \"fadeOutActivityPanel\";\r\n\t    CommandId[CommandId[\"cs_startGame\"] = 100065] = \"cs_startGame\";\r\n\t    CommandId[CommandId[\"cs_restartGame\"] = 100066] = \"cs_restartGame\";\r\n\t    CommandId[CommandId[\"cs_fadeInRankPanel\"] = 100067] = \"cs_fadeInRankPanel\";\r\n\t    CommandId[CommandId[\"fadeInRankPanel\"] = 100068] = \"fadeInRankPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInNextRank\"] = 100069] = \"cs_fadeInNextRank\";\r\n\t    CommandId[CommandId[\"fadeInNextRank\"] = 100070] = \"fadeInNextRank\";\r\n\t    CommandId[CommandId[\"cs_setGameComing\"] = 100071] = \"cs_setGameComing\";\r\n\t    CommandId[CommandId[\"setGameComing\"] = 100072] = \"setGameComing\";\r\n\t    CommandId[CommandId[\"cs_fadeOutRankPanel\"] = 100073] = \"cs_fadeOutRankPanel\";\r\n\t    CommandId[CommandId[\"fadeOutRankPanel\"] = 100074] = \"fadeOutRankPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInCountDown\"] = 100075] = \"cs_fadeInCountDown\";\r\n\t    CommandId[CommandId[\"fadeInCountDown\"] = 100076] = \"fadeInCountDown\";\r\n\t    CommandId[CommandId[\"cs_fadeOutCountDown\"] = 100077] = \"cs_fadeOutCountDown\";\r\n\t    CommandId[CommandId[\"fadeOutCountDown\"] = 100078] = \"fadeOutCountDown\";\r\n\t    CommandId[CommandId[\"cs_inScreenScore\"] = 100079] = \"cs_inScreenScore\";\r\n\t    CommandId[CommandId[\"inScreenScore\"] = 100080] = \"inScreenScore\";\r\n\t    CommandId[CommandId[\"cs_findPlayerData\"] = 100081] = \"cs_findPlayerData\";\r\n\t})(exports.CommandId || (exports.CommandId = {}));\r\n\tvar CommandId = exports.CommandId;\r\n\tvar CommandItem = (function () {\r\n\t    function CommandItem(id) {\r\n\t        this.id = id;\r\n\t    }\r\n\t    return CommandItem;\r\n\t}());\r\n\tvar Command = (function (_super) {\r\n\t    __extends(Command, _super);\r\n\t    function Command() {\r\n\t        _super.call(this);\r\n\t        this.cmdArr = [];\r\n\t        this.newCmd(CommandId.updateLeftScore, \"addLeftScore\");\r\n\t        this.newCmd(CommandId.updateRightScore, \"addRightScore\");\r\n\t        this.newCmd(CommandId.toggleTracker, \"toggleTracker\");\r\n\t        this.newCmd(CommandId.toggleTimer, \"toggleTimer\");\r\n\t        this.newCmd(CommandId.toggleBallRolling, \"toggleBallRolling\");\r\n\t        this.newCmd(CommandId.disableTracker, \"disableTracker\");\r\n\t    }\r\n\t    Command.prototype.newCmd = function (id, name, desc) {\r\n\t        var ci = new CommandItem(id);\r\n\t        ci.name = name;\r\n\t        ci.desc = desc;\r\n\t        this.cmdArr.push(ci);\r\n\t    };\r\n\t    return Command;\r\n\t}(EventDispatcher_1.EventDispatcher));\r\n\texports.Command = Command;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar EventDispatcher = (function () {\r\n\t    function EventDispatcher() {\r\n\t        this._func = {};\r\n\t        this._funcId = 0;\r\n\t    }\r\n\t    EventDispatcher.prototype.on = function (type, func) {\r\n\t        if (!this._func[type])\r\n\t            this._func[type] = [];\r\n\t        this._funcId++;\r\n\t        this._func[type].push({ func: func, id: this._funcId });\r\n\t    };\r\n\t    EventDispatcher.prototype.emit = function (type, param, broadcastId) {\r\n\t        if (param === void 0) { param = null; }\r\n\t        if (broadcastId === void 0) { broadcastId = null; }\r\n\t        if (this._func[type]) {\r\n\t            for (var i = 0; i < this._func[type].length; ++i) {\r\n\t                var f = this._func[type][i];\r\n\t                if (f)\r\n\t                    f.func(param);\r\n\t            }\r\n\t        }\r\n\t        if (this.broadcast && broadcastId)\r\n\t            this.broadcast(broadcastId, type, param);\r\n\t    };\r\n\t    EventDispatcher.prototype.proxy = function () {\r\n\t        var param = [];\r\n\t        for (var _i = 0; _i < arguments.length; _i++) {\r\n\t            param[_i - 0] = arguments[_i];\r\n\t        }\r\n\t        throw new Error(\"no proxy method!!!\");\r\n\t    };\r\n\t    ;\r\n\t    EventDispatcher.prototype.broadcast = function () {\r\n\t        var param = [];\r\n\t        for (var _i = 0; _i < arguments.length; _i++) {\r\n\t            param[_i - 0] = arguments[_i];\r\n\t        }\r\n\t        throw new Error(\"no broadcast method!!!\");\r\n\t    };\r\n\t    ;\r\n\t    EventDispatcher.prototype.del = function (type, funcId) {\r\n\t        if (funcId === void 0) { funcId = -1; }\r\n\t        if (this._func[type])\r\n\t            if (funcId < 0) {\r\n\t                this._func[type] = [];\r\n\t            }\r\n\t            else {\r\n\t                for (var i = 0; i < this._func[type].length; ++i) {\r\n\t                    var f = this._func[type][i];\r\n\t                    if (f) {\r\n\t                        if (f.id == funcId) {\r\n\t                            delete this._func[type][i];\r\n\t                            console.log('del event', type, funcId);\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t    };\r\n\t    EventDispatcher.prototype.removeAll = function () {\r\n\t        this._func = {};\r\n\t    };\r\n\t    return EventDispatcher;\r\n\t}());\r\n\texports.EventDispatcher = EventDispatcher;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar VueEx_1 = __webpack_require__(12);\r\n\tvar Const_1 = __webpack_require__(13);\r\n\tvar BasePanelView = (function (_super) {\r\n\t    __extends(BasePanelView, _super);\r\n\t    function BasePanelView() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    BasePanelView.prototype.initCanvas = function () {\r\n\t        this.stageWidth = Const_1.ViewConst.STAGE_WIDTH;\r\n\t        this.stageHeight = Const_1.ViewConst.STAGE_HEIGHT;\r\n\t        var canvas = document.getElementById(\"stage\");\r\n\t        if (canvas) {\r\n\t            canvas.setAttribute(\"width\", this.stageWidth + \"\");\r\n\t            canvas.setAttribute(\"height\", this.stageHeight + \"\");\r\n\t            var stage = new createjs.Stage(canvas);\r\n\t            stage.autoClear = true;\r\n\t            createjs.Ticker.framerate = 60;\r\n\t            createjs.Ticker.addEventListener(\"tick\", function () {\r\n\t                stage.update();\r\n\t            });\r\n\t            this.ctn = new createjs.Container();\r\n\t            stage.addChild(this.ctn);\r\n\t            this.stage = stage;\r\n\t        }\r\n\t    };\r\n\t    BasePanelView.prototype.ready = function (pid, isInitCanvas) {\r\n\t        var _this = this;\r\n\t        if (isInitCanvas === void 0) { isInitCanvas = true; }\r\n\t        this.isInitCanvas = isInitCanvas;\r\n\t        if (isInitCanvas)\r\n\t            this.initCanvas();\r\n\t        this.opReq = function (cmdId, param, callback) {\r\n\t            _this.$http.post(\"/panel/\" + pid + \"/\" + cmdId, param, callback);\r\n\t        };\r\n\t        var panel = this.$parent;\r\n\t        this.op = panel.isOp;\r\n\t        console.log(\"BasePanelView.ready\", panel.isOp);\r\n\t        return panel.connect();\r\n\t    };\r\n\t    return BasePanelView;\r\n\t}(VueEx_1.VueEx));\r\n\texports.BasePanelView = BasePanelView;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Vue = __webpack_require__(2);\r\n\tvar vue_class_component_1 = __webpack_require__(3);\r\n\texports.Component = vue_class_component_1.default;\r\n\tvar VueEx = (function (_super) {\r\n\t    __extends(VueEx, _super);\r\n\t    function VueEx() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    VueEx.prototype.ready = function () {\r\n\t        this.$parentMethods = this.$parent.$options.methods;\r\n\t    };\r\n\t    VueEx.prototype.getAttr = function (e, propName) {\r\n\t        var str = e.target.attributes[propName];\r\n\t        var a = str.split('=');\r\n\t        if (a.length === 2) {\r\n\t            return a[1];\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    VueEx.prototype.post = function (url, data, option) {\r\n\t        if (data)\r\n\t            this.$http.post(url, data, option);\r\n\t        else\r\n\t            this.$http.post(url, option);\r\n\t    };\r\n\t    VueEx.prototype.getElem = function (val) {\r\n\t        var _0 = val[0];\r\n\t        if (_0 == \"#\") {\r\n\t            return document.getElementById(val.substr(1));\r\n\t        }\r\n\t    };\r\n\t    return VueEx;\r\n\t}(Vue));\r\n\texports.VueEx = VueEx;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PanelId = {\r\n\t    stagePanel: 'stage',\r\n\t    winPanel: 'win',\r\n\t    actPanel: 'act',\r\n\t    screenPanel: 'screen',\r\n\t    playerPanel: 'player'\r\n\t};\r\n\texports.ServerConst = {\r\n\t    SEND_ASYNC: true,\r\n\t    DEF_AVATAR: '/img/panel/stage/blue.png'\r\n\t};\r\n\texports.ViewConst = {\r\n\t    STAGE_WIDTH: 1920,\r\n\t    STAGE_HEIGHT: 1080\r\n\t};\r\n\texports.TimerState = {\r\n\t    START_STR: 'start',\r\n\t    PAUSE_STR: 'pause',\r\n\t    PAUSE: 0,\r\n\t    RUNNING: 1\r\n\t};\r\n\texports.ViewEvent = {\r\n\t    PLAYER_EDIT: 'edit player',\r\n\t    STRAIGHT3_LEFT: 'STRAIGHT3_LEFT',\r\n\t    STRAIGHT3_RIGHT: 'STRAIGHT3_RIGHT'\r\n\t};\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar BaseInfo_1 = __webpack_require__(15);\r\n\tvar PlayerDoc = (function () {\r\n\t    function PlayerDoc() {\r\n\t        this.id = 0;\r\n\t        this.name = '';\r\n\t        this.phone = 0;\r\n\t        this.eloScore = 0;\r\n\t        this.style = 0;\r\n\t        this.avatar = \"\";\r\n\t        this.height = 0;\r\n\t        this.weight = 0;\r\n\t        this.dtScore = 0;\r\n\t        this.activityId = 0;\r\n\t        this.gameRec = [];\r\n\t        this.loseGameCount = 0;\r\n\t        this.winGameCount = 0;\r\n\t    }\r\n\t    return PlayerDoc;\r\n\t}());\r\n\tvar PlayerInfo = (function (_super) {\r\n\t    __extends(PlayerInfo, _super);\r\n\t    function PlayerInfo(playerData) {\r\n\t        _super.call(this);\r\n\t        this.playerData = new PlayerDoc();\r\n\t        this.isRed = true;\r\n\t        this.isMvp = false;\r\n\t        this.backNumber = 0;\r\n\t        if (playerData) {\r\n\t            if (playerData['playerData'] != null) {\r\n\t                this.playerData = BaseInfo_1.obj2Class(playerData.playerData, PlayerDoc);\r\n\t                this.setPlayerInfoFromData(playerData);\r\n\t            }\r\n\t            else {\r\n\t                this.playerData = BaseInfo_1.obj2Class(playerData, PlayerDoc);\r\n\t                this.setPlayerInfoFromData(playerData);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    PlayerInfo.prototype.setPlayerInfoFromData = function (data) {\r\n\t        if (data['isRed'] != null)\r\n\t            this.isRed = data.isRed;\r\n\t        if (data['isMvp'] != null)\r\n\t            this.isMvp = data.isMvp;\r\n\t        if (data['backNumber'] != null)\r\n\t            this.backNumber = data.backNumber;\r\n\t    };\r\n\t    PlayerInfo.prototype.getPlayerData = function () {\r\n\t        this.playerData['isRed'] = this.isRed;\r\n\t        this.playerData['isMvp'] = this.isMvp;\r\n\t        this.playerData['backNumber'] = this.backNumber;\r\n\t        return this.playerData;\r\n\t    };\r\n\t    PlayerInfo.prototype.id = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"id\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.phone = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"phone\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.name = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"name\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.activityId = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"activityId\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.eloScore = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"eloScore\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.dtScore = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"dtScore\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.style = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"style\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.avatar = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"avatar\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.gameRec = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"gameRec\", val);\r\n\t    };\r\n\t    PlayerInfo.winPercent = function (playerDoc) {\r\n\t        var p = playerDoc.winGameCount / PlayerInfo.gameCount(playerDoc);\r\n\t        if (!p)\r\n\t            p = 0;\r\n\t        return p;\r\n\t    };\r\n\t    PlayerInfo.winPercentStr = function (playerDoc) {\r\n\t        return (PlayerInfo.winPercent(playerDoc) * 100).toFixed(1) + \"%\";\r\n\t    };\r\n\t    PlayerInfo.prototype.winpercent = function (val) {\r\n\t        return this.winGameCount() / this.gameCount();\r\n\t    };\r\n\t    PlayerInfo.gameCount = function (playerDoc) {\r\n\t        return (playerDoc.loseGameCount + playerDoc.winGameCount) || 0;\r\n\t    };\r\n\t    PlayerInfo.prototype.gameCount = function () {\r\n\t        return this.loseGameCount() + this.winGameCount();\r\n\t    };\r\n\t    PlayerInfo.prototype.winGameCount = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"winGameCount\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.loseGameCount = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"loseGameCount\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.getWinPercent = function () {\r\n\t        return (this.winpercent() * 100).toFixed(1) + \"%\";\r\n\t    };\r\n\t    PlayerInfo.getStyleIcon = function (style) {\r\n\t        var path = '/img/panel/stage/';\r\n\t        if (style === 1) {\r\n\t            path += 'feng.png';\r\n\t        }\r\n\t        else if (style === 2) {\r\n\t            path += 'lin.png';\r\n\t        }\r\n\t        else if (style === 3) {\r\n\t            path += 'huo.png';\r\n\t        }\r\n\t        else if (style === 4) {\r\n\t            path += 'shan.png';\r\n\t        }\r\n\t        return path;\r\n\t    };\r\n\t    PlayerInfo.prototype.getWinStyleIcon = function () {\r\n\t        var path = '/img/panel/stage/win/';\r\n\t        if (this.style() == 1) {\r\n\t            path += 'fengWin.png';\r\n\t        }\r\n\t        else if (this.style() == 2) {\r\n\t            path += 'linWin.png';\r\n\t        }\r\n\t        else if (this.style() == 3) {\r\n\t            path += 'huoWin.png';\r\n\t        }\r\n\t        else if (this.style() == 4) {\r\n\t            path += 'shanWin.png';\r\n\t        }\r\n\t        return path;\r\n\t    };\r\n\t    PlayerInfo.prototype.getRec = function () {\r\n\t        return { id: this.id(), eloScore: this.eloScore(), dtScore: this.dtScore() };\r\n\t    };\r\n\t    PlayerInfo.prototype.saveScore = function (dtScore, isWin) {\r\n\t        this.dtScore(dtScore);\r\n\t        this.eloScore(this.eloScore() + dtScore);\r\n\t        if (isWin) {\r\n\t            this.winGameCount(this.winGameCount() + 1);\r\n\t        }\r\n\t        else\r\n\t            this.loseGameCount(this.loseGameCount() + 1);\r\n\t    };\r\n\t    PlayerInfo.prototype.getCurWinningPercent = function () {\r\n\t        return this.winGameCount() / (this.loseGameCount() + this.winGameCount());\r\n\t    };\r\n\t    return PlayerInfo;\r\n\t}(BaseInfo_1.BaseInfo));\r\n\texports.PlayerInfo = PlayerInfo;\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.isdef = function (val) {\r\n\t    return val != undefined;\r\n\t};\r\n\texports.prop = function (obj, paramName, v, callback) {\r\n\t    if (exports.isdef(v)) {\r\n\t        obj[paramName] = v;\r\n\t        if (callback)\r\n\t            callback();\r\n\t    }\r\n\t    else\r\n\t        return obj[paramName];\r\n\t};\r\n\texports.obj2Class = function (obj, cls) {\r\n\t    var c = new cls;\r\n\t    for (var paramName in obj) {\r\n\t        c[paramName] = obj[paramName];\r\n\t    }\r\n\t    return c;\r\n\t};\r\n\tfunction setPropTo(data, obj) {\r\n\t    for (var key in data) {\r\n\t        if (obj.hasOwnProperty(key))\r\n\t            obj[key] = data[key];\r\n\t    }\r\n\t}\r\n\texports.setPropTo = setPropTo;\r\n\tvar BaseDoc = (function () {\r\n\t    function BaseDoc() {\r\n\t    }\r\n\t    return BaseDoc;\r\n\t}());\r\n\texports.BaseDoc = BaseDoc;\r\n\tvar BaseInfo = (function () {\r\n\t    function BaseInfo() {\r\n\t    }\r\n\t    return BaseInfo;\r\n\t}());\r\n\texports.BaseInfo = BaseInfo;\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar PlayerInfo_1 = __webpack_require__(14);\r\n\tvar PlayerRender_1 = __webpack_require__(17);\r\n\tvar PlayerPanel = (function () {\r\n\t    function PlayerPanel(parent) {\r\n\t        this.playerCardArr = [];\r\n\t        var ctn = parent.scorePanel.ctn;\r\n\t        var playerInfo = new PlayerInfo_1.PlayerInfo();\r\n\t        var px = 24;\r\n\t        var py = 12;\r\n\t        var invert = 150;\r\n\t        for (var i = 0; i < 4; i++) {\r\n\t            var playerCard = new PlayerRender_1.StagePlayerCard(playerInfo, 1, true, true);\r\n\t            playerCard.delayShow(i * 600);\r\n\t            playerCard.x = px + i * invert;\r\n\t            playerCard.y = py;\r\n\t            this.playerCardArr.push(playerCard);\r\n\t            ctn.addChild(playerCard);\r\n\t        }\r\n\t        px = 1247;\r\n\t        for (var i = 0; i < 4; i++) {\r\n\t            var playerCard = new PlayerRender_1.StagePlayerCard(playerInfo, 1, false, true);\r\n\t            playerCard.delayShow((3 - i) * 600);\r\n\t            playerCard.x = px + i * invert;\r\n\t            playerCard.y = py;\r\n\t            this.playerCardArr.push(playerCard);\r\n\t            ctn.addChild(playerCard);\r\n\t        }\r\n\t    }\r\n\t    PlayerPanel.prototype.setEloScore = function (idx, eloScore) {\r\n\t        this.playerCardArr[idx].setEloScore(eloScore);\r\n\t    };\r\n\t    PlayerPanel.prototype.setPlayer = function (idx, playerInfo) {\r\n\t        var playerCard = this.playerCardArr[idx];\r\n\t        playerCard.setPlayerInfo(playerInfo, 1, playerCard.isBlue);\r\n\t    };\r\n\t    PlayerPanel.prototype.init = function (gameDoc) {\r\n\t        for (var i = 0; i < gameDoc.playerInfoArr.length; i++) {\r\n\t            if (gameDoc.playerInfoArr[i]) {\r\n\t                this.setPlayer(i, new PlayerInfo_1.PlayerInfo(gameDoc.playerInfoArr[i]));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return PlayerPanel;\r\n\t}());\r\n\texports.PlayerPanel = PlayerPanel;\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar JsFunc_1 = __webpack_require__(18);\r\n\tvar PlayerInfo_1 = __webpack_require__(14);\r\n\tvar Fx_1 = __webpack_require__(19);\r\n\tvar Container = createjs.Container;\r\n\tvar StagePlayerCard = (function (_super) {\r\n\t    __extends(StagePlayerCard, _super);\r\n\t    function StagePlayerCard(playerInfo, scale, isBlue, isDelayShow) {\r\n\t        if (scale === void 0) { scale = 1; }\r\n\t        if (isBlue === void 0) { isBlue = true; }\r\n\t        if (isDelayShow === void 0) { isDelayShow = false; }\r\n\t        _super.call(this);\r\n\t        this._delayShowEnd = false;\r\n\t        this.isDelayShow = isDelayShow;\r\n\t        this.setPlayerInfo(playerInfo, scale, isBlue);\r\n\t    }\r\n\t    StagePlayerCard.prototype.setName = function (name) {\r\n\t        this.nameText.text = name;\r\n\t    };\r\n\t    StagePlayerCard.prototype.setEloScore = function (eloScore) {\r\n\t        this.eloScoreText.text = eloScore.toString();\r\n\t    };\r\n\t    StagePlayerCard.prototype.setBackNumber = function (backNumber) {\r\n\t        this.backNumText.text = backNumber.toString();\r\n\t    };\r\n\t    StagePlayerCard.prototype.setStyle = function (style) {\r\n\t        this._styleCtn.removeAllChildren();\r\n\t        var styleIcon = new createjs.Bitmap(PlayerInfo_1.PlayerInfo.getStyleIcon(style));\r\n\t        this._styleCtn.addChild(styleIcon);\r\n\t    };\r\n\t    StagePlayerCard.prototype.setPlayerInfo = function (playerInfo, scale, isBlue) {\r\n\t        var _this = this;\r\n\t        if (scale === void 0) { scale = 1; }\r\n\t        if (isBlue === void 0) { isBlue = true; }\r\n\t        this.isBlue = isBlue;\r\n\t        var ctn = this;\r\n\t        this.removeAllChildren();\r\n\t        function _isBluePath(p) {\r\n\t            if (isBlue)\r\n\t                return p + \"Blue.png\";\r\n\t            return p + \"Red.png\";\r\n\t        }\r\n\t        var avatarFrame = new createjs.Bitmap(_isBluePath('/img/panel/stage/avatarFrame'));\r\n\t        var avatarCtn = new createjs.Container();\r\n\t        this.avatarCtn = avatarCtn;\r\n\t        if (isBlue) {\r\n\t            avatarCtn.x = 19;\r\n\t            avatarCtn.y = 1;\r\n\t        }\r\n\t        else {\r\n\t            avatarCtn.x = 3;\r\n\t            avatarCtn.y = 1;\r\n\t        }\r\n\t        var avatarMask = new createjs.Shape();\r\n\t        var sx = 44;\r\n\t        if (isBlue)\r\n\t            avatarMask.graphics.beginFill(\"#000000\")\r\n\t                .moveTo(sx, 0)\r\n\t                .lineTo(0, 76)\r\n\t                .lineTo(180 - sx, 76)\r\n\t                .lineTo(180, 0)\r\n\t                .lineTo(sx, 0);\r\n\t        else {\r\n\t            avatarMask.graphics.beginFill(\"#000000\")\r\n\t                .moveTo(0, 0)\r\n\t                .lineTo(sx, 76)\r\n\t                .lineTo(180, 76)\r\n\t                .lineTo(180 - sx, 0)\r\n\t                .lineTo(0, 0);\r\n\t        }\r\n\t        var avatarPath;\r\n\t        if (isBlue)\r\n\t            avatarPath = '/img/panel/stage/blue.png';\r\n\t        else\r\n\t            avatarPath = '/img/panel/stage/red.png';\r\n\t        avatarPath = playerInfo.avatar() || avatarPath;\r\n\t        JsFunc_1.loadImg(avatarPath, function () {\r\n\t            var avatarBmp = new createjs.Bitmap(avatarPath);\r\n\t            avatarBmp.mask = avatarMask;\r\n\t            avatarCtn.addChild(avatarMask);\r\n\t            avatarCtn.addChild(avatarBmp);\r\n\t            _this.avatarBmp = avatarBmp;\r\n\t            if (_this.isDelayShow) {\r\n\t                if (_this._delayShowEnd) {\r\n\t                    Fx_1.blink(avatarBmp);\r\n\t                }\r\n\t                else {\r\n\t                    avatarBmp.alpha = 0;\r\n\t                }\r\n\t            }\r\n\t            avatarBmp.scaleX = avatarBmp.scaleY = 180 / avatarBmp.getBounds().width;\r\n\t        });\r\n\t        ctn.addChild(avatarCtn);\r\n\t        ctn.addChild(avatarFrame);\r\n\t        var backNumText = new createjs.Text(playerInfo.backNumber + \"\", \"18px Arial\", \"#fff\");\r\n\t        backNumText.y = 5;\r\n\t        this.backNumText = backNumText;\r\n\t        if (isBlue) {\r\n\t            backNumText.textAlign = \"right\";\r\n\t            backNumText.x = 182;\r\n\t        }\r\n\t        else {\r\n\t            backNumText.textAlign = \"left\";\r\n\t            backNumText.x = 15;\r\n\t        }\r\n\t        ctn.addChild(backNumText);\r\n\t        var eloText = '';\r\n\t        if (playerInfo.gameRec().length >= 3)\r\n\t            eloText = playerInfo.eloScore();\r\n\t        else {\r\n\t            var newPlayerIcon = new createjs.Bitmap('/img/panel/stage/newPlayer.png');\r\n\t            if (isBlue)\r\n\t                newPlayerIcon.x = 37;\r\n\t            else\r\n\t                newPlayerIcon.x = 139;\r\n\t            newPlayerIcon.y = 61;\r\n\t            ctn.addChild(newPlayerIcon);\r\n\t        }\r\n\t        console.log(\"player\" + playerInfo.name() + \"game Count\", playerInfo.gameCount());\r\n\t        var eloScoreText = new createjs.Text(eloText, \"18px Arial\", \"#fff\");\r\n\t        eloScoreText.y = 59;\r\n\t        this.eloScoreText = eloScoreText;\r\n\t        if (isBlue) {\r\n\t            eloScoreText.textAlign = \"left\";\r\n\t            eloScoreText.x = 31;\r\n\t        }\r\n\t        else {\r\n\t            eloScoreText.textAlign = \"right\";\r\n\t            eloScoreText.x = 172;\r\n\t        }\r\n\t        ctn.addChild(eloScoreText);\r\n\t        var styleCtn = new createjs.Container();\r\n\t        this._styleCtn = styleCtn;\r\n\t        var styleIcon = new createjs.Bitmap(PlayerInfo_1.PlayerInfo.getStyleIcon(playerInfo.style()));\r\n\t        if (isBlue) {\r\n\t            styleCtn.x = 110;\r\n\t        }\r\n\t        else {\r\n\t            styleCtn.x = 52;\r\n\t        }\r\n\t        styleCtn.y = 75;\r\n\t        Fx_1.blink(styleIcon);\r\n\t        styleCtn.addChild(styleIcon);\r\n\t        ctn.addChild(styleCtn);\r\n\t        var nameText = new createjs.Text(playerInfo.name(), \"bold 18px Arial\", \"#fff\");\r\n\t        this.nameText = nameText;\r\n\t        nameText.y = 84;\r\n\t        if (isBlue) {\r\n\t            nameText.textAlign = \"left\";\r\n\t            nameText.x = 16;\r\n\t        }\r\n\t        else {\r\n\t            nameText.textAlign = \"right\";\r\n\t            nameText.x = 185;\r\n\t        }\r\n\t        ctn.addChild(nameText);\r\n\t        return ctn;\r\n\t    };\r\n\t    StagePlayerCard.prototype.delayShow = function (delay) {\r\n\t        var _this = this;\r\n\t        console.log('delay show', delay);\r\n\t        this._delayShowEnd = false;\r\n\t        createjs.Tween.get(this.avatarCtn).wait(delay).call(function () {\r\n\t            _this._delayShowEnd = true;\r\n\t            if (_this.avatarBmp) {\r\n\t                Fx_1.blink(_this.avatarBmp);\r\n\t            }\r\n\t            if (_this._styleCtn) {\r\n\t                Fx_1.blink(_this._styleCtn);\r\n\t            }\r\n\t        });\r\n\t        Fx_1.delayCall(delay, function () {\r\n\t            _this.avatarBmp.alpha = 0;\r\n\t        });\r\n\t    };\r\n\t    StagePlayerCard.newScoreText = function () {\r\n\t        var sheet = new createjs.SpriteSheet({\r\n\t            animations: {\r\n\t                \"0\": 1,\r\n\t                \"1\": 2,\r\n\t                \"2\": 3,\r\n\t                \"3\": 4,\r\n\t                \"4\": 5,\r\n\t                \"5\": 6,\r\n\t                \"6\": 7,\r\n\t                \"7\": 8,\r\n\t                \"8\": 9,\r\n\t                \"9\": 0\r\n\t            },\r\n\t            images: [\"/img/panel/stage/scoreNum.png\"],\r\n\t            frames: [[0, 0, 40, 54],\r\n\t                [41, 0, 40, 54],\r\n\t                [0, 55, 40, 54],\r\n\t                [41, 55, 40, 54],\r\n\t                [82, 0, 40, 54],\r\n\t                [82, 55, 40, 54],\r\n\t                [123, 0, 40, 54],\r\n\t                [123, 55, 40, 54],\r\n\t                [0, 110, 40, 54],\r\n\t                [41, 110, 40, 54]]\r\n\t        });\r\n\t        return new createjs.BitmapText(\"0\", sheet);\r\n\t    };\r\n\t    return StagePlayerCard;\r\n\t}(Container));\r\n\texports.StagePlayerCard = StagePlayerCard;\r\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tfunction ascendingProp(prop) {\r\n\t    return function (a, b) {\r\n\t        return a[prop] - b[prop];\r\n\t    };\r\n\t}\r\n\texports.ascendingProp = ascendingProp;\r\n\tfunction descendingProp(prop) {\r\n\t    return function (a, b) {\r\n\t        return b[prop] - a[prop];\r\n\t    };\r\n\t}\r\n\texports.descendingProp = descendingProp;\r\n\tfunction mapToSortArray(map, prop, sortFunc) {\r\n\t    var arr = [];\r\n\t    for (var k in map) {\r\n\t        arr.push(map[k]);\r\n\t    }\r\n\t    arr.sort(sortFunc(prop));\r\n\t    return arr;\r\n\t}\r\n\texports.mapToSortArray = mapToSortArray;\r\n\tfunction mapToArr(map) {\r\n\t    var a = [];\r\n\t    for (var k in map) {\r\n\t        a.push(map[k]);\r\n\t    }\r\n\t    return a;\r\n\t}\r\n\texports.mapToArr = mapToArr;\r\n\tfunction arrCountSame(arrA, arrB) {\r\n\t    var n = 0;\r\n\t    for (var i = 0; i < arrB.length; i++) {\r\n\t        var obj = arrB[i];\r\n\t        if (arrA.indexOf(obj) > -1) {\r\n\t            n++;\r\n\t        }\r\n\t    }\r\n\t    return n;\r\n\t}\r\n\texports.arrCountSame = arrCountSame;\r\n\tfunction arrUniqueFilter(el, i, a) {\r\n\t    return i == a.indexOf(el);\r\n\t}\r\n\texports.arrUniqueFilter = arrUniqueFilter;\r\n\tfunction loadImg(path1, callback) {\r\n\t    var img = new Image();\r\n\t    img.onload = callback;\r\n\t    img.src = path1;\r\n\t}\r\n\texports.loadImg = loadImg;\r\n\tfunction loadImgArr(pathArr, callback) {\r\n\t    var count = pathArr.length;\r\n\t    function onLoadImg() {\r\n\t        count--;\r\n\t        if (count === 0)\r\n\t            callback();\r\n\t    }\r\n\t    for (var i = 0; i < pathArr.length; i++) {\r\n\t        var p = pathArr[i];\r\n\t        var img = new Image();\r\n\t        img.onload = onLoadImg;\r\n\t        img.src = p;\r\n\t    }\r\n\t}\r\n\texports.loadImgArr = loadImgArr;\r\n\tfunction combineArr(arr, num) {\r\n\t    var r = [];\r\n\t    (function f(t, a, n) {\r\n\t        if (n == 0) {\r\n\t            return r.push(t);\r\n\t        }\r\n\t        for (var i = 0, l = a.length; i <= l - n; i++) {\r\n\t            f(t.concat(a[i]), a.slice(i + 1), n - 1);\r\n\t        }\r\n\t    })([], arr, num);\r\n\t    return r;\r\n\t}\r\n\texports.combineArr = combineArr;\r\n\tfunction formatSecond(sec, minStr, secStr) {\r\n\t    if (minStr === void 0) { minStr = \":\"; }\r\n\t    if (secStr === void 0) { secStr = \"\"; }\r\n\t    var min = Math.floor(sec / 60);\r\n\t    var s = sec % 60;\r\n\t    var strMin = min + \"\";\r\n\t    var strSec = s + \"\";\r\n\t    if (min < 10)\r\n\t        strMin = \"0\" + strMin;\r\n\t    if (s < 10)\r\n\t        strSec = \"0\" + strSec;\r\n\t    return strMin + minStr + strSec + secStr;\r\n\t}\r\n\texports.formatSecond = formatSecond;\r\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tfunction delayCall(delay, callback) {\r\n\t    createjs.Tween.get(this).wait(delay).call(callback);\r\n\t}\r\n\texports.delayCall = delayCall;\r\n\tfunction blink(target, time, loop) {\r\n\t    if (time === void 0) { time = 80; }\r\n\t    if (loop === void 0) { loop = false; }\r\n\t    var blink = time;\r\n\t    createjs.Tween.get(target, { loop: loop })\r\n\t        .to({ alpha: 1 }, blink)\r\n\t        .to({ alpha: 0 }, blink)\r\n\t        .to({ alpha: 1 }, blink)\r\n\t        .to({ alpha: 0 }, blink)\r\n\t        .to({ alpha: 1 }, blink);\r\n\t}\r\n\texports.blink = blink;\r\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar JsFunc_1 = __webpack_require__(18);\r\n\tvar Const_1 = __webpack_require__(13);\r\n\tvar PlayerInfo_1 = __webpack_require__(14);\r\n\tvar EventPanel = (function () {\r\n\t    function EventPanel(parent) {\r\n\t        var ctn = new createjs.Container();\r\n\t        parent.stage.addChild(ctn);\r\n\t        this.ctn = ctn;\r\n\t    }\r\n\t    EventPanel.prototype.fadeInStraight3 = function (isRed) {\r\n\t        var _this = this;\r\n\t        console.log(\"straight score 3 isRed:\", isRed);\r\n\t        var isBusy = false;\r\n\t        isBusy = true;\r\n\t        this.ctn.removeAllChildren();\r\n\t        var ctn = new createjs.Container();\r\n\t        var basePath = '/img/panel/stage/straight3';\r\n\t        if (isRed)\r\n\t            basePath += 'Red.png';\r\n\t        else\r\n\t            basePath += 'Blue.png';\r\n\t        JsFunc_1.loadImg(basePath, function () {\r\n\t            var txt3 = new createjs.Bitmap(basePath);\r\n\t            var bound = txt3.getBounds();\r\n\t            txt3.x = -bound.width;\r\n\t            txt3.y = -bound.height;\r\n\t            ctn.addChild(txt3);\r\n\t            ctn.x = 1920 / 2 + 200;\r\n\t            ctn.y = 200;\r\n\t            ctn.alpha = 1;\r\n\t            ctn.scaleX = ctn.scaleY = 5;\r\n\t            _this.ctn.addChild(ctn);\r\n\t            createjs.Tween.get(ctn)\r\n\t                .to({ scaleX: 1, scaleY: 1 }, 150)\r\n\t                .wait(4000)\r\n\t                .to({ alpha: 0 }, 200).call(function () {\r\n\t                isBusy = false;\r\n\t            });\r\n\t        });\r\n\t    };\r\n\t    EventPanel.prototype.fadeInWinPanel = function (teamInfo, mvpIdx, mpvId) {\r\n\t        var mvp = Number(mvpIdx);\r\n\t        console.log(this, \"show fadeInWinPanel mvp:\", mvp);\r\n\t        var ctn = this.ctn;\r\n\t        var modal = new createjs.Shape();\r\n\t        modal.graphics.beginFill('#000').drawRect(0, 0, Const_1.ViewConst.STAGE_WIDTH, Const_1.ViewConst.STAGE_HEIGHT);\r\n\t        modal.alpha = .3;\r\n\t        ctn.addChild(modal);\r\n\t        var playerCtn = new createjs.Container();\r\n\t        ctn.addChild(playerCtn);\r\n\t        var isRedWin = (mvp > 3);\r\n\t        var isBlue = (mvp < 4);\r\n\t        var titlePath = \"/img/panel/stage/win/winPanelTitle\";\r\n\t        if (isRedWin)\r\n\t            titlePath += 'Red.png';\r\n\t        else\r\n\t            titlePath += 'Blue.png';\r\n\t        var titleCtn = new createjs.Container();\r\n\t        JsFunc_1.loadImg(titlePath, function () {\r\n\t            var title = new createjs.Bitmap(titlePath);\r\n\t            title.x = -419;\r\n\t            title.y = -158;\r\n\t            titleCtn.x = (Const_1.ViewConst.STAGE_WIDTH) * .5;\r\n\t            titleCtn.y = 198;\r\n\t            titleCtn.scaleX = titleCtn.scaleY = 5;\r\n\t            titleCtn.alpha = 0;\r\n\t            createjs.Tween.get(titleCtn).to({ scaleX: 1, scaleY: 1, alpha: 1 }, 150);\r\n\t            titleCtn.addChild(title);\r\n\t        });\r\n\t        ctn.addChild(titleCtn);\r\n\t        var prePlayerIsMvp = false;\r\n\t        playerCtn.x = (Const_1.ViewConst.STAGE_WIDTH - 4 * 390) * .5;\r\n\t        playerCtn.y = 300;\r\n\t        var start = 0;\r\n\t        if (!isBlue) {\r\n\t        }\r\n\t        for (var i = start; i < start + 4; i++) {\r\n\t            var pInfo;\r\n\t            pInfo = new PlayerInfo_1.PlayerInfo(teamInfo.playerInfoArr[i].playerData);\r\n\t            pInfo.isRed = teamInfo.playerInfoArr[i].isRed;\r\n\t            pInfo.isBlue = isBlue;\r\n\t            pInfo.isMvp = pInfo.id() == mpvId;\r\n\t            var playerCard = this.getWinPlayerCard(pInfo, function () {\r\n\t                var bound = playerCard.getBounds();\r\n\t                if (bound)\r\n\t                    playerCard.cache(bound.x, bound.y, bound.width, bound.height);\r\n\t            });\r\n\t            playerCard.x = i * 390;\r\n\t            if (pInfo.isMvp)\r\n\t                playerCard.y = -30;\r\n\t            else\r\n\t                playerCard.y = 0;\r\n\t            playerCard.px = playerCard.x;\r\n\t            playerCard.py = playerCard.y;\r\n\t            playerCard.x = 500;\r\n\t            playerCard.scaleX = playerCard.scaleY = 0.01;\r\n\t            createjs.Tween.get(playerCard)\r\n\t                .to({ x: playerCard.px, scaleX: 1.1, scaleY: 1.1 }, 200)\r\n\t                .to({ scaleX: 1, scaleY: 1 }, 60);\r\n\t            playerCtn.addChild(playerCard);\r\n\t            prePlayerIsMvp = pInfo.isMvp;\r\n\t        }\r\n\t    };\r\n\t    EventPanel.prototype.getWinPlayerCard = function (p, callback) {\r\n\t        var isMvp = p.isMvp;\r\n\t        var ctn = new createjs.Container();\r\n\t        console.log(\"playerCard=======:\", p.avatar());\r\n\t        JsFunc_1.loadImg(p.avatar(), function () {\r\n\t            var avatar = new createjs.Bitmap(p.avatar());\r\n\t            var scale = 80 / avatar.getBounds().height;\r\n\t            if (isMvp) {\r\n\t                avatar.scaleX = avatar.scaleY = 1.5 * scale;\r\n\t                avatar.x = (180 - 180 * 1.2) * .5 + 60;\r\n\t                avatar.y = 45 + 30;\r\n\t            }\r\n\t            else {\r\n\t                avatar.scaleX = avatar.scaleY = 1.2 * scale;\r\n\t                avatar.x = (180 - 180 * 1.2) * .5 + 60;\r\n\t                avatar.y = 50 + 30;\r\n\t            }\r\n\t            ctn.addChild(avatar);\r\n\t            var bgPath = '/img/panel/stage/win/playerBgWin';\r\n\t            if (p.isBlue)\r\n\t                bgPath += \"Blue\";\r\n\t            else\r\n\t                bgPath += \"Red\";\r\n\t            if (p.isMvp)\r\n\t                bgPath += \"Mvp\";\r\n\t            bgPath += '.png';\r\n\t            var bg = new createjs.Bitmap(bgPath);\r\n\t            if (p.isMvp) {\r\n\t                bg.x = -132;\r\n\t                bg.y = -105;\r\n\t            }\r\n\t            else {\r\n\t                bg.x = -116;\r\n\t                bg.y = -80;\r\n\t            }\r\n\t            ctn.addChild(bg);\r\n\t            var col;\r\n\t            if (p.isRed)\r\n\t                col = \"#e23f6b\";\r\n\t            else\r\n\t                col = \"#1ac3fa\";\r\n\t            var nameCol = \"#ddd\";\r\n\t            if (isMvp)\r\n\t                nameCol = \"#f1c236\";\r\n\t            var name;\r\n\t            if (isMvp)\r\n\t                name = new createjs.Text(p.name(), \"30px Arial\", nameCol);\r\n\t            else\r\n\t                name = new createjs.Text(p.name(), \"30px Arial\", col);\r\n\t            name.textAlign = 'center';\r\n\t            name.x = 90 + 60;\r\n\t            name.y = 200;\r\n\t            if (isMvp) {\r\n\t                name.x += 20;\r\n\t                name.y = 215;\r\n\t            }\r\n\t            ctn.addChild(name);\r\n\t            var eloScore;\r\n\t            var eloScoreText = '新秀';\r\n\t            if (p.gameCount() >= 3) {\r\n\t                eloScoreText = p.eloScore();\r\n\t            }\r\n\t            eloScore = new createjs.Text(eloScoreText, \"bold 32px Arial\", nameCol);\r\n\t            eloScore.textAlign = 'center';\r\n\t            eloScore.x = name.x;\r\n\t            eloScore.y = 245 + 30;\r\n\t            if (isMvp)\r\n\t                eloScore.y += 30;\r\n\t            ctn.addChild(eloScore);\r\n\t            var eloScoreDt = new createjs.Text(\"+\" + p.dtScore(), \"12px Arial\", col);\r\n\t            eloScoreDt.textAlign = 'left';\r\n\t            eloScoreDt.x = 140 + 60;\r\n\t            eloScoreDt.y = 260 + 30;\r\n\t            if (isMvp) {\r\n\t                eloScoreDt.x += 30;\r\n\t                eloScoreDt.y += 30;\r\n\t            }\r\n\t            ctn.addChild(eloScoreDt);\r\n\t            var winpercent = new createjs.Text(\"胜率\" + p.getWinPercent(), \"18px Arial\", col);\r\n\t            winpercent.textAlign = 'center';\r\n\t            winpercent.x = name.x;\r\n\t            winpercent.y = 320;\r\n\t            if (isMvp)\r\n\t                winpercent.y += 35;\r\n\t            ctn.addChild(winpercent);\r\n\t            var gameCount = new createjs.Text(\"场数\" + p.gameCount(), \"18px Arial\", col);\r\n\t            gameCount.textAlign = 'center';\r\n\t            gameCount.x = name.x;\r\n\t            gameCount.y = 350;\r\n\t            if (isMvp)\r\n\t                gameCount.y += 35;\r\n\t            ctn.addChild(gameCount);\r\n\t            var style = new createjs.Bitmap(p.getWinStyleIcon());\r\n\t            style.x = 110;\r\n\t            style.y = 370;\r\n\t            if (isMvp) {\r\n\t                style.x += 20;\r\n\t                style.y += 45;\r\n\t            }\r\n\t            ctn.addChild(style);\r\n\t            callback();\r\n\t        });\r\n\t        return ctn;\r\n\t    };\r\n\t    EventPanel.prototype.fadeOutWinPanel = function () {\r\n\t        console.log(this, \"show fade Out WinPanel\");\r\n\t        var ctn = this.ctn;\r\n\t        createjs.Tween.get(ctn).to({ alpha: 0 }, 200)\r\n\t            .call(function () {\r\n\t            ctn.alpha = 1;\r\n\t            ctn.removeAllChildren();\r\n\t        });\r\n\t    };\r\n\t    return EventPanel;\r\n\t}());\r\n\texports.EventPanel = EventPanel;\r\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar JsFunc_1 = __webpack_require__(18);\r\n\tvar GameInfo_1 = __webpack_require__(22);\r\n\tvar Fx_1 = __webpack_require__(19);\r\n\tvar Const_1 = __webpack_require__(13);\r\n\tvar ScorePanel = (function () {\r\n\t    function ScorePanel(parent) {\r\n\t        this.timeOnSec = 0;\r\n\t        var scoreCtn = new createjs.Container();\r\n\t        this.ctn = scoreCtn;\r\n\t        scoreCtn.y = parent.stageHeight - 132;\r\n\t        parent.stage.addChild(scoreCtn);\r\n\t        var bg = new createjs.Bitmap('/img/panel/stage/scoreBg.png');\r\n\t        bg.x = 1;\r\n\t        scoreCtn.addChild(bg);\r\n\t        var timeText = new createjs.Text(\"99:99\", \"28px Arial\", \"#fff\");\r\n\t        timeText.x = parent.stageWidth * .5 - 31;\r\n\t        timeText.y = 100;\r\n\t        this.timeText = timeText;\r\n\t        scoreCtn.addChild(timeText);\r\n\t        var sheet = new createjs.SpriteSheet({\r\n\t            animations: {\r\n\t                \"0\": 1, \"1\": 2, \"2\": 3, \"3\": 4, \"4\": 5,\r\n\t                \"5\": 6, \"6\": 7, \"7\": 8, \"8\": 9, \"9\": 0\r\n\t            },\r\n\t            images: [\"/img/panel/stage/scoreNum.png\"],\r\n\t            frames: [[0, 0, 40, 54],\r\n\t                [41, 0, 40, 54],\r\n\t                [0, 55, 40, 54],\r\n\t                [41, 55, 40, 54],\r\n\t                [82, 0, 40, 54],\r\n\t                [82, 55, 40, 54],\r\n\t                [123, 0, 40, 54],\r\n\t                [123, 55, 40, 54],\r\n\t                [0, 110, 40, 54],\r\n\t                [41, 110, 40, 54]]\r\n\t        });\r\n\t        var px = 865;\r\n\t        var leftScoreNum = new createjs.BitmapText(\"0\", sheet);\r\n\t        leftScoreNum.letterSpacing = -2;\r\n\t        leftScoreNum.x = px;\r\n\t        leftScoreNum.y = 60;\r\n\t        this.leftScoreText = leftScoreNum;\r\n\t        this.leftScoreTextX = leftScoreNum.x;\r\n\t        scoreCtn.addChild(leftScoreNum);\r\n\t        var rightScoreNum = new createjs.BitmapText(\"0\", sheet);\r\n\t        rightScoreNum.letterSpacing = -2;\r\n\t        rightScoreNum.x = px + 160;\r\n\t        rightScoreNum.y = leftScoreNum.y;\r\n\t        this.rightScoreText = rightScoreNum;\r\n\t        this.rightScoreTextX = rightScoreNum.x;\r\n\t        scoreCtn.addChild(rightScoreNum);\r\n\t        this.leftCircleArr = [];\r\n\t        this.rightCircleArr = [];\r\n\t        var px = 675;\r\n\t        var py = 88;\r\n\t        for (var i = 0; i < 7; i++) {\r\n\t            var leftScoreBg = new createjs.Bitmap(\"/img/panel/stage/leftScoreBg.png\");\r\n\t            leftScoreBg.x = px + i * 20;\r\n\t            leftScoreBg.y = py;\r\n\t            scoreCtn.addChild(leftScoreBg);\r\n\t            var leftScore = new createjs.Bitmap(\"/img/panel/stage/leftScore.png\");\r\n\t            leftScore.x = leftScoreBg.x;\r\n\t            leftScore.y = leftScoreBg.y;\r\n\t            scoreCtn.addChild(leftScore);\r\n\t            this.leftCircleArr.push(leftScore);\r\n\t        }\r\n\t        px = 1090;\r\n\t        for (var i = 0; i < 7; i++) {\r\n\t            var rightScoreBg = new createjs.Bitmap(\"/img/panel/stage/rightScoreBg.png\");\r\n\t            rightScoreBg.x = px + i * 20;\r\n\t            rightScoreBg.y = py;\r\n\t            scoreCtn.addChild(rightScoreBg);\r\n\t            var rightScore = new createjs.Bitmap(\"/img/panel/stage/rightScore.png\");\r\n\t            rightScore.x = rightScoreBg.x;\r\n\t            rightScore.y = rightScoreBg.y;\r\n\t            scoreCtn.addChild(rightScore);\r\n\t            this.rightCircleArr.push(rightScore);\r\n\t        }\r\n\t        px = 770;\r\n\t        var lTxt = new createjs.Text(\"\", \"28px Arial\", \"#fff\");\r\n\t        lTxt.text = '0';\r\n\t        lTxt.textAlign = 'center';\r\n\t        lTxt.x = px;\r\n\t        lTxt.y = 22;\r\n\t        this.leftAvgEloScoreText = lTxt;\r\n\t        scoreCtn.addChild(lTxt);\r\n\t        var rTxt = new createjs.Text(\"\", \"28px Arial\", \"#fff\");\r\n\t        rTxt.text = '0';\r\n\t        rTxt.textAlign = 'center';\r\n\t        rTxt.x = lTxt.x + 385;\r\n\t        rTxt.y = lTxt.y;\r\n\t        this.rightAvgEloScoreText = rTxt;\r\n\t        scoreCtn.addChild(rTxt);\r\n\t    }\r\n\t    Object.defineProperty(ScorePanel.prototype, \"isBlueWin\", {\r\n\t        get: function () {\r\n\t            return Number(this.leftScoreText.text) > Number(this.rightScoreText.text);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ScorePanel.prototype.setLeftScore = function (leftScore) {\r\n\t        this.leftScoreText.text = leftScore + \"\";\r\n\t        if (leftScore > 9)\r\n\t            this.leftScoreText.x = this.leftScoreTextX - 18;\r\n\t        else\r\n\t            this.leftScoreText.x = this.leftScoreTextX;\r\n\t        var len = this.leftCircleArr.length;\r\n\t        for (var i = 0; i < this.leftCircleArr.length; i++) {\r\n\t            if (i < leftScore) {\r\n\t                if (this.leftCircleArr[len - 1 - i].alpha == 0)\r\n\t                    Fx_1.blink(this.leftCircleArr[len - 1 - i]);\r\n\t            }\r\n\t            else {\r\n\t                createjs.Tween.get(this.leftCircleArr[len - 1 - i]).to({ alpha: 0 }, 200);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    ScorePanel.prototype.setRightScore = function (rightScore) {\r\n\t        if (rightScore > 9)\r\n\t            this.rightScoreText.x = this.rightScoreTextX - 18;\r\n\t        else\r\n\t            this.rightScoreText.x = this.rightScoreTextX;\r\n\t        this.rightScoreText.text = rightScore + \"\";\r\n\t        var len = this.rightCircleArr.length;\r\n\t        for (var i = 0; i < len; i++) {\r\n\t            if (i < rightScore) {\r\n\t                if (this.rightCircleArr[i].alpha == 0)\r\n\t                    Fx_1.blink(this.rightCircleArr[i]);\r\n\t            }\r\n\t            else {\r\n\t                createjs.Tween.get(this.rightCircleArr[i]).to({ alpha: 0 }, 200);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    ScorePanel.prototype.setAvgEloScore = function (data) {\r\n\t        this.leftAvgEloScoreText.text = data.left + \"\";\r\n\t        this.rightAvgEloScoreText.text = data.right + \"\";\r\n\t    };\r\n\t    ScorePanel.prototype.resetTimer = function () {\r\n\t        this.timeOnSec = 0;\r\n\t        this.timerState = Const_1.TimerState.PAUSE;\r\n\t        this.timeText.text = JsFunc_1.formatSecond(this.timeOnSec);\r\n\t    };\r\n\t    ScorePanel.prototype.toggleTimer1 = function () {\r\n\t        var _this = this;\r\n\t        if (this.timerId) {\r\n\t            clearInterval(this.timerId);\r\n\t            this.timerId = 0;\r\n\t            this.timerState = Const_1.TimerState.PAUSE;\r\n\t        }\r\n\t        else {\r\n\t            this.timerId = setInterval(function () {\r\n\t                _this.timeOnSec++;\r\n\t                _this.timeText.text = JsFunc_1.formatSecond(_this.timeOnSec);\r\n\t            }, 1000);\r\n\t            this.timerState = Const_1.TimerState.RUNNING;\r\n\t        }\r\n\t    };\r\n\t    ScorePanel.prototype.setTime = function (time, state) {\r\n\t        this.timeText.text = JsFunc_1.formatSecond(time);\r\n\t        this.timeOnSec = time;\r\n\t        if (state) {\r\n\t            this.toggleTimer1();\r\n\t        }\r\n\t    };\r\n\t    ScorePanel.prototype.init = function (gameInfo) {\r\n\t        this.setLeftScore(gameInfo.leftScore);\r\n\t        this.setRightScore(gameInfo.rightScore);\r\n\t        var gameInfoClone = new GameInfo_1.GameInfo(gameInfo);\r\n\t        this.setAvgEloScore(gameInfoClone.getAvgEloScore());\r\n\t    };\r\n\t    return ScorePanel;\r\n\t}());\r\n\texports.ScorePanel = ScorePanel;\r\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar TeamInfo_1 = __webpack_require__(23);\r\n\tvar PlayerInfo_1 = __webpack_require__(14);\r\n\tvar BaseInfo_1 = __webpack_require__(15);\r\n\tvar Const_1 = __webpack_require__(13);\r\n\tvar GameDoc = (function () {\r\n\t    function GameDoc() {\r\n\t        this.id = -1;\r\n\t        this.blueScore = 0;\r\n\t        this.redScore = 0;\r\n\t        this.mvp = 0;\r\n\t    }\r\n\t    return GameDoc;\r\n\t}());\r\n\texports.GameDoc = GameDoc;\r\n\tvar GameInfo = (function () {\r\n\t    function GameInfo(gameDoc) {\r\n\t        this.id = 0;\r\n\t        this.winScore = 7;\r\n\t        this.leftScore = 0;\r\n\t        this.rightScore = 0;\r\n\t        this.leftFoul = 0;\r\n\t        this.rightFoul = 0;\r\n\t        this.time = 0;\r\n\t        this.timerState = 0;\r\n\t        this.straightScoreLeft = 0;\r\n\t        this.straightScoreStack = [];\r\n\t        this.straightScoreRight = 0;\r\n\t        this.playerInfoArr = new Array(8);\r\n\t        this.playerRecArr = [];\r\n\t        this._timer = null;\r\n\t        this.gameState = 0;\r\n\t        this.unLimitScore = 0;\r\n\t        if (gameDoc) {\r\n\t            BaseInfo_1.setPropTo(gameDoc, this);\r\n\t            var playerDocArr = this.playerInfoArr;\r\n\t            this.playerInfoArr = [];\r\n\t            for (var i = 0; i < playerDocArr.length; i++) {\r\n\t                this.playerInfoArr.push(new PlayerInfo_1.PlayerInfo(playerDocArr[i]));\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    GameInfo.prototype.getAvgEloScore = function () {\r\n\t        var sum = 0;\r\n\t        var count = 0;\r\n\t        var leftPlayerArr = this.getLeftTeam();\r\n\t        for (var i = 0; i < leftPlayerArr.length; i++) {\r\n\t            var obj = leftPlayerArr[i];\r\n\t            if (obj) {\r\n\t                count++;\r\n\t                sum += obj.eloScore();\r\n\t            }\r\n\t        }\r\n\t        var left = Math.floor(sum / count);\r\n\t        sum = 0;\r\n\t        count = 0;\r\n\t        var playerArr = this.getRightTeam();\r\n\t        for (var i = 0; i < playerArr.length; i++) {\r\n\t            var obj = playerArr[i];\r\n\t            if (obj) {\r\n\t                count++;\r\n\t                sum += obj.eloScore();\r\n\t            }\r\n\t        }\r\n\t        var right = Math.floor(sum / count);\r\n\t        return { left: left, right: right };\r\n\t    };\r\n\t    GameInfo.prototype.addLeftScore = function () {\r\n\t        if (this.unLimitScore === 1)\r\n\t            this.leftScore += 1;\r\n\t        else\r\n\t            this.leftScore = (this.leftScore + 1) % (this.winScore + 1);\r\n\t        this.pushStraightScore();\r\n\t        this.straightScoreRight = 0;\r\n\t        this.straightScoreLeft++;\r\n\t        if (this.leftScore == 0)\r\n\t            this.straightScoreLeft = 0;\r\n\t        return this.straightScoreLeft;\r\n\t    };\r\n\t    GameInfo.prototype.minLeftScore = function () {\r\n\t        if (this.unLimitScore === 1)\r\n\t            this.leftScore -= 1;\r\n\t        else\r\n\t            this.leftScore = (this.leftScore - 1) % (this.winScore + 1);\r\n\t        this.popStraightScore();\r\n\t    };\r\n\t    GameInfo.prototype.pushStraightScore = function () {\r\n\t        this.straightScoreStack.push({ left: this.straightScoreLeft, right: this.straightScoreRight });\r\n\t    };\r\n\t    GameInfo.prototype.popStraightScore = function () {\r\n\t        var stack = this.straightScoreStack.pop();\r\n\t        this.straightScoreLeft = stack.left;\r\n\t        this.straightScoreRight = stack.right;\r\n\t    };\r\n\t    GameInfo.prototype.minRightScore = function () {\r\n\t        if (this.unLimitScore === 1)\r\n\t            this.rightScore -= 1;\r\n\t        else\r\n\t            this.rightScore = (this.rightScore - 1) % (this.winScore + 1);\r\n\t        this.popStraightScore();\r\n\t    };\r\n\t    GameInfo.prototype.addRightScore = function () {\r\n\t        if (this.unLimitScore === 1)\r\n\t            this.rightScore += 1;\r\n\t        else\r\n\t            this.rightScore = (this.rightScore + 1) % (this.winScore + 1);\r\n\t        this.pushStraightScore();\r\n\t        this.straightScoreLeft = 0;\r\n\t        this.straightScoreRight++;\r\n\t        if (this.rightScore == 0)\r\n\t            this.straightScoreRight = 0;\r\n\t        return this.straightScoreRight;\r\n\t    };\r\n\t    GameInfo.prototype.getGameId = function () {\r\n\t        return this.id;\r\n\t    };\r\n\t    GameInfo.prototype.toggleTimer = function (state) {\r\n\t        var _this = this;\r\n\t        if (state) {\r\n\t            if (state === Const_1.TimerState.PAUSE) {\r\n\t                this.resetTimer();\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            if (this._timer) {\r\n\t                this.resetTimer();\r\n\t            }\r\n\t            else {\r\n\t                this._timer = setInterval(function () {\r\n\t                    _this.time++;\r\n\t                }, 1000);\r\n\t                this.timerState = 1;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Object.defineProperty(GameInfo.prototype, \"isFinish\", {\r\n\t        get: function () {\r\n\t            return this.gameState === GameInfo.GAME_STATE_SAVE;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    GameInfo.prototype.resetTimer = function () {\r\n\t        clearInterval(this._timer);\r\n\t        this._timer = 0;\r\n\t        this.timerState = 0;\r\n\t    };\r\n\t    GameInfo.prototype.setPlayerInfoByIdx = function (pos, playerInfo) {\r\n\t        playerInfo.isBlue = (pos < 4);\r\n\t        playerInfo.isRed = !playerInfo.isBlue;\r\n\t        this.playerInfoArr[pos] = playerInfo;\r\n\t        return playerInfo;\r\n\t    };\r\n\t    GameInfo.prototype.setWinByMvpIdx = function (mvpIdx) {\r\n\t        var isBlueWin = (mvpIdx < 4);\r\n\t        this.mvpPlayerId = this.playerInfoArr[mvpIdx].id();\r\n\t        if (isBlueWin) {\r\n\t            return this.setLeftTeamWin();\r\n\t        }\r\n\t        else {\r\n\t            return this.setRightTeamWin();\r\n\t        }\r\n\t    };\r\n\t    GameInfo.prototype._setGameResult = function (isLeftWin) {\r\n\t        if (this.gameState === 0) {\r\n\t            var teamLeft = new TeamInfo_1.TeamInfo();\r\n\t            teamLeft.setPlayerArr(this.getLeftTeam());\r\n\t            var teamRight = new TeamInfo_1.TeamInfo();\r\n\t            teamRight.setPlayerArr(this.getRightTeam());\r\n\t            if (isLeftWin) {\r\n\t                teamLeft.beat2(teamRight, this.mvpPlayerId);\r\n\t                this._winTeam = teamLeft;\r\n\t                this._loseTeam = teamRight;\r\n\t            }\r\n\t            else {\r\n\t                teamRight.beat2(teamLeft, this.mvpPlayerId);\r\n\t                this._winTeam = teamRight;\r\n\t                this._loseTeam = teamLeft;\r\n\t            }\r\n\t            this.gameState = 1;\r\n\t        }\r\n\t        return this._winTeam;\r\n\t    };\r\n\t    GameInfo.prototype.getGameDoc = function () {\r\n\t        return {};\r\n\t    };\r\n\t    GameInfo.prototype.setLeftTeamWin = function () {\r\n\t        return this._setGameResult(true);\r\n\t    };\r\n\t    GameInfo.prototype.setRightTeamWin = function () {\r\n\t        return this._setGameResult(false);\r\n\t    };\r\n\t    GameInfo.prototype.getLeftTeam = function (start) {\r\n\t        if (start === void 0) { start = 0; }\r\n\t        var team = [];\r\n\t        for (var i = start; i < 4 + start; i++) {\r\n\t            var pInfo = this.playerInfoArr[i];\r\n\t            team.push(pInfo);\r\n\t            pInfo.isRed = (start > 0);\r\n\t        }\r\n\t        return team;\r\n\t    };\r\n\t    Object.defineProperty(GameInfo.prototype, \"isBlueWin\", {\r\n\t        get: function () {\r\n\t            return this.leftScore > this.rightScore;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    GameInfo.prototype.getRightTeam = function () {\r\n\t        return this.getLeftTeam(4);\r\n\t    };\r\n\t    GameInfo.prototype.addRightFoul = function () {\r\n\t        this.rightFoul++;\r\n\t        return this.rightFoul;\r\n\t    };\r\n\t    GameInfo.prototype.minRightFoul = function () {\r\n\t        this.rightFoul--;\r\n\t        return this.rightFoul;\r\n\t    };\r\n\t    GameInfo.prototype.addLeftFoul = function () {\r\n\t        this.leftFoul++;\r\n\t        return this.leftFoul;\r\n\t    };\r\n\t    GameInfo.prototype.minLeftFoul = function () {\r\n\t        this.leftFoul--;\r\n\t        return this.leftFoul;\r\n\t    };\r\n\t    GameInfo.GAME_STATE_ING = 0;\r\n\t    GameInfo.GAME_STATE_FIN = 1;\r\n\t    GameInfo.GAME_STATE_SAVE = 2;\r\n\t    return GameInfo;\r\n\t}());\r\n\texports.GameInfo = GameInfo;\r\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar EloUtil_1 = __webpack_require__(24);\r\n\tvar TeamInfo = (function () {\r\n\t    function TeamInfo() {\r\n\t        this.playerInfoArr = [];\r\n\t    }\r\n\t    TeamInfo.prototype.setPlayer = function (player, pos) {\r\n\t    };\r\n\t    TeamInfo.prototype.getPlayerInfoById = function (playerId) {\r\n\t        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n\t            var playerInfo = this.playerInfoArr[i];\r\n\t            if (playerInfo.id() == playerId) {\r\n\t                return playerInfo;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    TeamInfo.prototype.length = function () {\r\n\t        return this.playerInfoArr.length;\r\n\t    };\r\n\t    TeamInfo.prototype.push = function (playerInfo) {\r\n\t        this.playerInfoArr.push(playerInfo);\r\n\t    };\r\n\t    TeamInfo.prototype.setScore = function (score) {\r\n\t        this.score = score;\r\n\t    };\r\n\t    TeamInfo.prototype.setName = function (name) {\r\n\t        this.name = name;\r\n\t    };\r\n\t    TeamInfo.prototype.clear = function () {\r\n\t        this.score = 0;\r\n\t    };\r\n\t    TeamInfo.prototype.setPlayerArr = function (playerArr) {\r\n\t        this.playerInfoArr.length = 0;\r\n\t        this.playerInfoArr = this.playerInfoArr.concat(playerArr);\r\n\t        this.score = 0;\r\n\t        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n\t            var player = this.playerInfoArr[i];\r\n\t            this.score += player.eloScore();\r\n\t        }\r\n\t        this.score /= this.playerInfoArr.length;\r\n\t        console.log(this, \"player score:\", this.score);\r\n\t    };\r\n\t    TeamInfo.prototype.beat = function (loserTeam) {\r\n\t        var win = EloUtil_1.EloUtil.classicMethod(this.score, loserTeam.score);\r\n\t        this.saveScore(win, true);\r\n\t        loserTeam.saveScore(-win, false);\r\n\t    };\r\n\t    TeamInfo.prototype.beat2 = function (loserTeam, mvpPlayerId) {\r\n\t        var winTeamScore = this.score;\r\n\t        var loseTeamScore = loserTeam.score;\r\n\t        function getScoreArr(playerInArr, teamScore, isWin, mvpId) {\r\n\t            if (mvpId === void 0) { mvpId = -1; }\r\n\t            var scoreArr = [];\r\n\t            for (var i = 0; i < playerInArr.length; i++) {\r\n\t                var playerInfo = playerInArr[i];\r\n\t                var score = EloUtil_1.EloUtil.classicMethod(playerInfo.eloScore(), teamScore);\r\n\t                if (playerInfo.id() == mvpId) {\r\n\t                    var teamWinScore = EloUtil_1.EloUtil.classicMethod(winTeamScore, loseTeamScore);\r\n\t                    score += Math.floor(0.25 * teamWinScore);\r\n\t                }\r\n\t                if (!isWin)\r\n\t                    score = -score;\r\n\t                scoreArr.push(score);\r\n\t            }\r\n\t            return scoreArr;\r\n\t        }\r\n\t        var winScoreArr = getScoreArr(this.playerInfoArr, loseTeamScore, true, mvpPlayerId);\r\n\t        var loseScoreArr = getScoreArr(loserTeam.playerInfoArr, winTeamScore, false);\r\n\t        this.saveScoreArr(winScoreArr, true);\r\n\t        loserTeam.saveScoreArr(loseScoreArr, false);\r\n\t    };\r\n\t    TeamInfo.prototype.mix2 = function (teamInfo) {\r\n\t        var tmp;\r\n\t        tmp = this.playerInfoArr[1];\r\n\t        this.playerInfoArr[1] = teamInfo.playerInfoArr[3];\r\n\t        teamInfo.playerInfoArr[3] = tmp;\r\n\t        tmp = this.playerInfoArr[3];\r\n\t        this.playerInfoArr[3] = teamInfo.playerInfoArr[2];\r\n\t        teamInfo.playerInfoArr[2] = tmp;\r\n\t    };\r\n\t    TeamInfo.prototype.getPercentage = function () {\r\n\t    };\r\n\t    TeamInfo.prototype.saveScore = function (score, isWin) {\r\n\t        this.score += score;\r\n\t        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n\t            var player = this.playerInfoArr[i];\r\n\t            player.saveScore(score, isWin);\r\n\t        }\r\n\t    };\r\n\t    TeamInfo.prototype.saveScoreArr = function (scoreArr, isWin) {\r\n\t        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n\t            var score = scoreArr[i];\r\n\t            this.score += score;\r\n\t            var player = this.playerInfoArr[i];\r\n\t            player.saveScore(score, isWin);\r\n\t        }\r\n\t    };\r\n\t    TeamInfo.prototype.getNewPlayerDataArr = function () {\r\n\t        var a = [];\r\n\t        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n\t            var playerInfo = this.playerInfoArr[i];\r\n\t            a.push(playerInfo.getPlayerData());\r\n\t        }\r\n\t        return a;\r\n\t    };\r\n\t    TeamInfo.prototype.getWinningPercent = function () {\r\n\t        var wp;\r\n\t        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n\t            var player = this.playerInfoArr[i];\r\n\t            wp += player.getCurWinningPercent();\r\n\t        }\r\n\t        wp /= this.playerInfoArr.length;\r\n\t        return wp;\r\n\t    };\r\n\t    return TeamInfo;\r\n\t}());\r\n\texports.TeamInfo = TeamInfo;\r\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.EloConf = {\r\n\t    score: 2000,\r\n\t    K: 32\r\n\t};\r\n\tvar EloUtil = (function () {\r\n\t    function EloUtil() {\r\n\t    }\r\n\t    EloUtil.classicMethod = function (winEloScore, loseEloScore) {\r\n\t        var Elo1 = winEloScore;\r\n\t        var Elo2 = loseEloScore;\r\n\t        var K = exports.EloConf.K;\r\n\t        var EloDifference = Elo2 - Elo1;\r\n\t        var percentage = 1 / (1 + Math.pow(10, EloDifference / 400));\r\n\t        var win = Math.round(K * (1 - percentage));\r\n\t        return win;\r\n\t    };\r\n\t    EloUtil.playerToWinMethod = function (winEloScore, loseEloScore) {\r\n\t    };\r\n\t    return EloUtil;\r\n\t}());\r\n\texports.EloUtil = EloUtil;\r\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<style>\\r\\n    #stage-panel {\\r\\n        position: absolute;\\r\\n        width: 950px;\\r\\n        left: 100px;\\r\\n        top: 80px;\\r\\n        opacity: .8;\\r\\n    }\\r\\n</style>\\r\\n<div id=\\\"stage-panel\\\" class=\\\"card-panel grey lighten-3\\\" v-if=\\\"op\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\" v-for=\\\"playerInfo in playerInfoArr\\\">\\r\\n            <div class=\\\"col\\\" style=\\\"width: 85px\\\">\\r\\n                <img src=\\\"/img/panel/stage/blue.png\\\" id=\\\"playerImg{{$index}}\\\" style=\\\"width: 80px\\\">\\r\\n                <input id=\\\"player{{$index}}\\\" type=\\\"text\\\" @keyup.enter=\\\"onQueryPlayer($index)\\\" style=\\\"width: 75px\\\">\\r\\n                <input id=\\\"playerNum{{$index}}\\\" type=\\\"text\\\" @keyup.enter=\\\"onUpdatePlayerNum($index)\\\"\\r\\n                       style=\\\"width: 35px\\\">\\r\\n                <a class=\\\"waves-effect waves-light btn\\\" style=\\\"width: 75px;height: 25px\\\"\\r\\n                   @click=\\\"onUpdatePlayer($index)\\\">↓</a>\\r\\n                <p>\\r\\n                    <input name=\\\"mvp\\\" type=\\\"radio\\\" id=\\\"mvp{{$index}}\\\" value=\\\"{{$index}}\\\" v-model=\\\"mvpIdx\\\"/>\\r\\n                    <label for=\\\"mvp{{$index}}\\\">mvp{{$index}}</label>\\r\\n                    <!--<input id=\\\"eloScore{{$index}}\\\" type=\\\"text\\\" @keyup.enter=\\\"onSetEloScore($index)\\\" style=\\\"width: 75px\\\">-->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        game id:{{gameId}}\\r\\n        ````````````````````````````````````````\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onStarting\\\">starting line</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onUpdateBackNum\\\">back num</a>\\r\\n        ````````````````````````````````````````\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"display: inline-flex\\\">\\r\\n        <div class=\\\"switch\\\">\\r\\n            <label>\\r\\n                pause\\r\\n                <input type=\\\"checkbox\\\" @click=\\\"onToggleTimer\\\">\\r\\n                <span class=\\\"lever\\\"></span>\\r\\n                start::::::::\\r\\n            </label>\\r\\n        </div>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onResetTimer\\\" style=\\\"height: 35px\\\">Reset</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddLeftScore\\\">Left++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinLeftScore\\\">Left--</a>\\r\\n        <input type=\\\"checkbox\\\" id=\\\"test5\\\"/>\\r\\n        <label for=\\\"test5\\\">///////不限制分数\\\\\\\\\\\\\\\\\\\\\\\\\\\\</label>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinRightScore\\\">Right--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddRightScore\\\">Right++</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onShowWin\\\">Show Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onHideWin\\\">Hide Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onSubmitGame\\\">Submit Game</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onRefresh\\\">Refresh</a>\\r\\n    </div>\\r\\n</div>\\r\\n<div style=\\\"display: none\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinBlue.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinBlueMvp.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinRed.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinRedMvp.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/winPanelTitleBlue.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/winPanelTitleRed.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/fengWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/huoWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/shanWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/linWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/newPlayer.png\\\">\\r\\n</div>\";\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t})\n\t\n\tvar Vue = __webpack_require__(4)\n\t\n\tvar internalHooks = [\n\t  'data',\n\t  'el',\n\t  'init',\n\t  'created',\n\t  'ready',\n\t  'beforeCompile',\n\t  'compiled',\n\t  'beforeDestroy',\n\t  'destroyed',\n\t  'attached',\n\t  'detached',\n\t  'activate'\n\t]\n\t\n\tfunction componentFactory (Component, options) {\n\t  if (!options) {\n\t    options = {}\n\t  }\n\t  options.name = options.name || Component.name\n\t  // prototype props.\n\t  var proto = Component.prototype\n\t  Object.getOwnPropertyNames(proto).forEach(function (key) {\n\t    if (key === 'constructor') {\n\t      return\n\t    }\n\t    // hooks\n\t    if (internalHooks.indexOf(key) > -1) {\n\t      options[key] = proto[key]\n\t      return\n\t    }\n\t    var descriptor = Object.getOwnPropertyDescriptor(proto, key)\n\t    if (typeof descriptor.value === 'function') {\n\t      // methods\n\t      (options.methods || (options.methods = {}))[key] = descriptor.value\n\t    } else if (descriptor.get || descriptor.set) {\n\t      // computed properties\n\t      (options.computed || (options.computed = {}))[key] = {\n\t        get: descriptor.get,\n\t        set: descriptor.set\n\t      }\n\t    }\n\t  })\n\t  // find super\n\t  var superProto = Object.getPrototypeOf(Component.prototype)\n\t  var Super = superProto instanceof Vue\n\t    ? superProto.constructor\n\t    : Vue\n\t  return Super.extend(options)\n\t}\n\t\n\tfunction decorator (options) {\n\t  if (typeof options === 'function') {\n\t    return componentFactory(options)\n\t  }\n\t  return function (Component) {\n\t    return componentFactory(Component, options)\n\t  }\n\t}\n\t\n\texports.default = decorator\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PanelId = {\r\n\t    stagePanel: 'stage',\r\n\t    winPanel: 'win',\r\n\t    actPanel: 'act',\r\n\t    screenPanel: 'screen',\r\n\t    playerPanel: 'player'\r\n\t};\r\n\texports.ServerConst = {\r\n\t    SEND_ASYNC: true,\r\n\t    DEF_AVATAR: '/img/panel/stage/blue.png'\r\n\t};\r\n\texports.ViewConst = {\r\n\t    STAGE_WIDTH: 1920,\r\n\t    STAGE_HEIGHT: 1080\r\n\t};\r\n\texports.TimerState = {\r\n\t    START_STR: 'start',\r\n\t    PAUSE_STR: 'pause',\r\n\t    PAUSE: 0,\r\n\t    RUNNING: 1\r\n\t};\r\n\texports.ViewEvent = {\r\n\t    PLAYER_EDIT: 'edit player',\r\n\t    STRAIGHT3_LEFT: 'STRAIGHT3_LEFT',\r\n\t    STRAIGHT3_RIGHT: 'STRAIGHT3_RIGHT'\r\n\t};\r\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar EventDispatcher_1 = __webpack_require__(10);\r\n\t(function (CommandId) {\r\n\t    CommandId[CommandId[\"ShowConsoleWin\"] = 100000] = \"ShowConsoleWin\";\r\n\t    CommandId[CommandId[\"toggleTracker\"] = 100001] = \"toggleTracker\";\r\n\t    CommandId[CommandId[\"toggleBallRolling\"] = 100002] = \"toggleBallRolling\";\r\n\t    CommandId[CommandId[\"toggleTimer\"] = 100003] = \"toggleTimer\";\r\n\t    CommandId[CommandId[\"cs_toggleTimer\"] = 100004] = \"cs_toggleTimer\";\r\n\t    CommandId[CommandId[\"resetTimer\"] = 100005] = \"resetTimer\";\r\n\t    CommandId[CommandId[\"cs_resetTimer\"] = 100006] = \"cs_resetTimer\";\r\n\t    CommandId[CommandId[\"disableTracker\"] = 100007] = \"disableTracker\";\r\n\t    CommandId[CommandId[\"updateLeftScore\"] = 100008] = \"updateLeftScore\";\r\n\t    CommandId[CommandId[\"cs_addLeftScore\"] = 100009] = \"cs_addLeftScore\";\r\n\t    CommandId[CommandId[\"updateRightScore\"] = 100010] = \"updateRightScore\";\r\n\t    CommandId[CommandId[\"cs_addRightScore\"] = 100011] = \"cs_addRightScore\";\r\n\t    CommandId[CommandId[\"minLeftScore\"] = 100012] = \"minLeftScore\";\r\n\t    CommandId[CommandId[\"cs_minLeftScore\"] = 100013] = \"cs_minLeftScore\";\r\n\t    CommandId[CommandId[\"minRightScore\"] = 100014] = \"minRightScore\";\r\n\t    CommandId[CommandId[\"cs_minRightScore\"] = 100015] = \"cs_minRightScore\";\r\n\t    CommandId[CommandId[\"updateLeftFoul\"] = 100016] = \"updateLeftFoul\";\r\n\t    CommandId[CommandId[\"cs_addLeftFoul\"] = 100017] = \"cs_addLeftFoul\";\r\n\t    CommandId[CommandId[\"cs_minLeftFoul\"] = 100018] = \"cs_minLeftFoul\";\r\n\t    CommandId[CommandId[\"updateRightFoul\"] = 100019] = \"updateRightFoul\";\r\n\t    CommandId[CommandId[\"cs_addRightFoul\"] = 100020] = \"cs_addRightFoul\";\r\n\t    CommandId[CommandId[\"cs_minRightFoul\"] = 100021] = \"cs_minRightFoul\";\r\n\t    CommandId[CommandId[\"stageFadeOut\"] = 100022] = \"stageFadeOut\";\r\n\t    CommandId[CommandId[\"cs_fadeOut\"] = 100023] = \"cs_fadeOut\";\r\n\t    CommandId[CommandId[\"playerScore\"] = 100024] = \"playerScore\";\r\n\t    CommandId[CommandId[\"cs_playerScore\"] = 100025] = \"cs_playerScore\";\r\n\t    CommandId[CommandId[\"stageFadeIn\"] = 100026] = \"stageFadeIn\";\r\n\t    CommandId[CommandId[\"cs_stageFadeIn\"] = 100027] = \"cs_stageFadeIn\";\r\n\t    CommandId[CommandId[\"moveStagePanel\"] = 100028] = \"moveStagePanel\";\r\n\t    CommandId[CommandId[\"cs_moveStagePanel\"] = 100029] = \"cs_moveStagePanel\";\r\n\t    CommandId[CommandId[\"updatePlayer\"] = 100030] = \"updatePlayer\";\r\n\t    CommandId[CommandId[\"cs_updatePlayer\"] = 100031] = \"cs_updatePlayer\";\r\n\t    CommandId[CommandId[\"updatePlayerAll\"] = 100032] = \"updatePlayerAll\";\r\n\t    CommandId[CommandId[\"cs_updatePlayerAll\"] = 100033] = \"cs_updatePlayerAll\";\r\n\t    CommandId[CommandId[\"cs_updatePlayerBackNum\"] = 100034] = \"cs_updatePlayerBackNum\";\r\n\t    CommandId[CommandId[\"updatePlayerBackNum\"] = 100035] = \"updatePlayerBackNum\";\r\n\t    CommandId[CommandId[\"fadeInNotice\"] = 100036] = \"fadeInNotice\";\r\n\t    CommandId[CommandId[\"cs_fadeInNotice\"] = 100037] = \"cs_fadeInNotice\";\r\n\t    CommandId[CommandId[\"cs_resetGame\"] = 100038] = \"cs_resetGame\";\r\n\t    CommandId[CommandId[\"cs_unLimitScore\"] = 100039] = \"cs_unLimitScore\";\r\n\t    CommandId[CommandId[\"unLimitScore\"] = 100040] = \"unLimitScore\";\r\n\t    CommandId[CommandId[\"fadeInWinPanel\"] = 100041] = \"fadeInWinPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInWinPanel\"] = 100042] = \"cs_fadeInWinPanel\";\r\n\t    CommandId[CommandId[\"fadeOutWinPanel\"] = 100043] = \"fadeOutWinPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeOutWinPanel\"] = 100044] = \"cs_fadeOutWinPanel\";\r\n\t    CommandId[CommandId[\"saveGameRec\"] = 100045] = \"saveGameRec\";\r\n\t    CommandId[CommandId[\"cs_saveGameRec\"] = 100046] = \"cs_saveGameRec\";\r\n\t    CommandId[CommandId[\"cs_queryPlayerByPos\"] = 100047] = \"cs_queryPlayerByPos\";\r\n\t    CommandId[CommandId[\"fadeInPlayerPanel\"] = 100048] = \"fadeInPlayerPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInPlayerPanel\"] = 100049] = \"cs_fadeInPlayerPanel\";\r\n\t    CommandId[CommandId[\"fadeOutPlayerPanel\"] = 100050] = \"fadeOutPlayerPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeOutPlayerPanel\"] = 100051] = \"cs_fadeOutPlayerPanel\";\r\n\t    CommandId[CommandId[\"movePlayerPanel\"] = 100052] = \"movePlayerPanel\";\r\n\t    CommandId[CommandId[\"cs_movePlayerPanel\"] = 100053] = \"cs_movePlayerPanel\";\r\n\t    CommandId[CommandId[\"straightScore3\"] = 100054] = \"straightScore3\";\r\n\t    CommandId[CommandId[\"straightScore5\"] = 100055] = \"straightScore5\";\r\n\t    CommandId[CommandId[\"initPanel\"] = 100056] = \"initPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInActivityPanel\"] = 100057] = \"cs_fadeInActivityPanel\";\r\n\t    CommandId[CommandId[\"fadeInActivityPanel\"] = 100058] = \"fadeInActivityPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInNextActivity\"] = 100059] = \"cs_fadeInNextActivity\";\r\n\t    CommandId[CommandId[\"fadeInNextActivity\"] = 100060] = \"fadeInNextActivity\";\r\n\t    CommandId[CommandId[\"cs_fadeInActivityExGame\"] = 100061] = \"cs_fadeInActivityExGame\";\r\n\t    CommandId[CommandId[\"fadeInActivityExGame\"] = 100062] = \"fadeInActivityExGame\";\r\n\t    CommandId[CommandId[\"cs_fadeOutActivityPanel\"] = 100063] = \"cs_fadeOutActivityPanel\";\r\n\t    CommandId[CommandId[\"fadeOutActivityPanel\"] = 100064] = \"fadeOutActivityPanel\";\r\n\t    CommandId[CommandId[\"cs_startGame\"] = 100065] = \"cs_startGame\";\r\n\t    CommandId[CommandId[\"cs_restartGame\"] = 100066] = \"cs_restartGame\";\r\n\t    CommandId[CommandId[\"cs_fadeInRankPanel\"] = 100067] = \"cs_fadeInRankPanel\";\r\n\t    CommandId[CommandId[\"fadeInRankPanel\"] = 100068] = \"fadeInRankPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInNextRank\"] = 100069] = \"cs_fadeInNextRank\";\r\n\t    CommandId[CommandId[\"fadeInNextRank\"] = 100070] = \"fadeInNextRank\";\r\n\t    CommandId[CommandId[\"cs_setGameComing\"] = 100071] = \"cs_setGameComing\";\r\n\t    CommandId[CommandId[\"setGameComing\"] = 100072] = \"setGameComing\";\r\n\t    CommandId[CommandId[\"cs_fadeOutRankPanel\"] = 100073] = \"cs_fadeOutRankPanel\";\r\n\t    CommandId[CommandId[\"fadeOutRankPanel\"] = 100074] = \"fadeOutRankPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInCountDown\"] = 100075] = \"cs_fadeInCountDown\";\r\n\t    CommandId[CommandId[\"fadeInCountDown\"] = 100076] = \"fadeInCountDown\";\r\n\t    CommandId[CommandId[\"cs_fadeOutCountDown\"] = 100077] = \"cs_fadeOutCountDown\";\r\n\t    CommandId[CommandId[\"fadeOutCountDown\"] = 100078] = \"fadeOutCountDown\";\r\n\t    CommandId[CommandId[\"cs_inScreenScore\"] = 100079] = \"cs_inScreenScore\";\r\n\t    CommandId[CommandId[\"inScreenScore\"] = 100080] = \"inScreenScore\";\r\n\t    CommandId[CommandId[\"cs_findPlayerData\"] = 100081] = \"cs_findPlayerData\";\r\n\t})(exports.CommandId || (exports.CommandId = {}));\r\n\tvar CommandId = exports.CommandId;\r\n\tvar CommandItem = (function () {\r\n\t    function CommandItem(id) {\r\n\t        this.id = id;\r\n\t    }\r\n\t    return CommandItem;\r\n\t}());\r\n\tvar Command = (function (_super) {\r\n\t    __extends(Command, _super);\r\n\t    function Command() {\r\n\t        _super.call(this);\r\n\t        this.cmdArr = [];\r\n\t        this.newCmd(CommandId.updateLeftScore, \"addLeftScore\");\r\n\t        this.newCmd(CommandId.updateRightScore, \"addRightScore\");\r\n\t        this.newCmd(CommandId.toggleTracker, \"toggleTracker\");\r\n\t        this.newCmd(CommandId.toggleTimer, \"toggleTimer\");\r\n\t        this.newCmd(CommandId.toggleBallRolling, \"toggleBallRolling\");\r\n\t        this.newCmd(CommandId.disableTracker, \"disableTracker\");\r\n\t    }\r\n\t    Command.prototype.newCmd = function (id, name, desc) {\r\n\t        var ci = new CommandItem(id);\r\n\t        ci.name = name;\r\n\t        ci.desc = desc;\r\n\t        this.cmdArr.push(ci);\r\n\t    };\r\n\t    return Command;\r\n\t}(EventDispatcher_1.EventDispatcher));\r\n\texports.Command = Command;\r\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<style>\\r\\n    #stage-panel {\\r\\n        /*position: absolute;*/\\r\\n        /*width: 950px;*/\\r\\n        /*left: 100px;*/\\r\\n        /*top: 80px;*/\\r\\n        /*opacity: .8;*/\\r\\n        /*zoom: 2;*/\\r\\n    }\\r\\n</style>\\r\\n<div id=\\\"stage-panel\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        game id:{{gameId}}\\r\\n        ````````````````````````````````````````\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onStarting\\\">starting line</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onUpdateBackNum\\\">back num</a>\\r\\n        ````````````````````````````````````````\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"display: inline-flex\\\">\\r\\n        <div class=\\\"switch\\\">\\r\\n            <label>\\r\\n                pause\\r\\n                <input type=\\\"checkbox\\\" @click=\\\"onToggleTimer\\\">\\r\\n                <span class=\\\"lever\\\"></span>\\r\\n                start::::::::\\r\\n            </label>\\r\\n        </div>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onResetTimer\\\" style=\\\"height: 35px\\\">Reset</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddLeftScore\\\">Left++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinLeftScore\\\">Left--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddLeftFoul\\\">Foul++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinLeftFoul\\\">Foul--</a>\\r\\n        <input type=\\\"checkbox\\\" id=\\\"test5\\\"/>\\r\\n        <label for=\\\"test5\\\">///////不限制分数\\\\\\\\\\\\\\\\\\\\\\\\\\\\</label>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinRightScore\\\">Right--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddRightScore\\\">Right++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinRightFoul\\\">Foul--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddRightFoul\\\">Foul++</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onShowWin\\\">Show Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onHideWin\\\">Hide Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onSubmitGame\\\">Submit Game</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onRefresh\\\">Refresh</a>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onComingActivity\\\">Coming Act</a>\\r\\n    </div>\\r\\n</div>\";\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** js/mobile.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1a82a0f15e03d7a0da26\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Vue = require('vue');\r\nvar StagePanelViewMobile_1 = require(\"./StagePanelViewMobile\");\r\nvar MobileView = (function (_super) {\r\n    __extends(MobileView, _super);\r\n    function MobileView() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    MobileView.prototype.ready = function () {\r\n        console.log('mobile ready');\r\n    };\r\n    MobileView.prototype.connect = function () {\r\n    };\r\n    return MobileView;\r\n}(Vue));\r\nexports.MobileView = MobileView;\r\nVue.use(require('vue-resource'));\r\nvar VueRouter = require('vue-router');\r\nVue.use(VueRouter);\r\nvar router = new VueRouter();\r\nrouter.map({\r\n    '/': {\r\n        component: StagePanelViewMobile_1.StagePanelViewMobile,\r\n        name: 'home'\r\n    },\r\n    '/panel/stage/op': {\r\n        component: StagePanelViewMobile_1.StagePanelViewMobile,\r\n        name: 'stage'\r\n    },\r\n});\r\nrouter.afterEach(function (transition) {\r\n    var toPath = transition.to.path;\r\n    router.app.isOp = /\\/op/.test(toPath);\r\n    console.log('after each!!!', toPath);\r\n});\r\nfunction onDeviceReady() {\r\n    console.log('onDeviceReady');\r\n    router.start(MobileView, '#app');\r\n}\r\ndocument.addEventListener('deviceready', onDeviceReady, false);\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/mobile/index.ts\n ** module id = 0\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.24\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tisWechat: isWechat,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if (isA || isO) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.24';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/~/vue/dist/vue.common.js\n ** module id = 2\n ** module chunks = 0\n **/","Object.defineProperty(exports, '__esModule', {\n  value: true\n})\n\nvar Vue = require('vue')\n\nvar internalHooks = [\n  'data',\n  'el',\n  'init',\n  'created',\n  'ready',\n  'beforeCompile',\n  'compiled',\n  'beforeDestroy',\n  'destroyed',\n  'attached',\n  'detached',\n  'activate'\n]\n\nfunction componentFactory (Component, options) {\n  if (!options) {\n    options = {}\n  }\n  options.name = options.name || Component.name\n  // prototype props.\n  var proto = Component.prototype\n  Object.getOwnPropertyNames(proto).forEach(function (key) {\n    if (key === 'constructor') {\n      return\n    }\n    // hooks\n    if (internalHooks.indexOf(key) > -1) {\n      options[key] = proto[key]\n      return\n    }\n    var descriptor = Object.getOwnPropertyDescriptor(proto, key)\n    if (typeof descriptor.value === 'function') {\n      // methods\n      (options.methods || (options.methods = {}))[key] = descriptor.value\n    } else if (descriptor.get || descriptor.set) {\n      // computed properties\n      (options.computed || (options.computed = {}))[key] = {\n        get: descriptor.get,\n        set: descriptor.set\n      }\n    }\n  })\n  // find super\n  var superProto = Object.getPrototypeOf(Component.prototype)\n  var Super = superProto instanceof Vue\n    ? superProto.constructor\n    : Vue\n  return Super.extend(options)\n}\n\nfunction decorator (options) {\n  if (typeof options === 'function') {\n    return componentFactory(options)\n  }\n  return function (Component) {\n    return componentFactory(Component, options)\n  }\n}\n\nexports.default = decorator\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/~/vue-class-component/index.js\n ** module id = 3\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 4\n ** module chunks = 0\n **/","/*!\n * vue-resource v0.9.1\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$2(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$2.reject = function (r) {\n    return new Promise$2(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$2.resolve = function (x) {\n    return new Promise$2(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$2.all = function all(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$2.race = function race(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$2.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$2(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nvar PromiseObj = window.Promise || Promise$2;\n\nfunction Promise$1(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise$1.all = function (iterable, context) {\n    return new Promise$1(PromiseObj.all(iterable), context);\n};\n\nPromise$1.resolve = function (value, context) {\n    return new Promise$1(PromiseObj.resolve(value), context);\n};\n\nPromise$1.reject = function (reason, context) {\n    return new Promise$1(PromiseObj.reject(reason), context);\n};\n\nPromise$1.race = function (iterable, context) {\n    return new Promise$1(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise$1.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return PromiseObj.reject(reason);\n    });\n};\n\nvar debug = false;\nvar util = {};\nvar array = [];\nfunction Util (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n}\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isBoolean(val) {\n    return val === true || val === false;\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise$1.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nfunction xdrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith(xdr.responseText, {\n                status: xdr.status,\n                statusText: xdr.statusText\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xdr.abort();\n        };\n\n        xdr.open(request.method, request.getUrl(), true);\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n}\n\nvar ORIGIN_URL = Url.parse(location.href);\nvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\nfunction cors (request, next) {\n\n    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n        request.crossOrigin = true;\n    }\n\n    if (request.crossOrigin) {\n\n        if (!SUPPORTS_CORS) {\n            request.client = xdrClient;\n        }\n\n        delete request.emulateHTTP;\n    }\n\n    next();\n}\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n}\n\nfunction body (request, next) {\n\n    if (request.emulateJSON && isPlainObject(request.body)) {\n        request.body = Url.params(request.body);\n        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n\n    if (isFormData(request.body)) {\n        delete request.headers['Content-Type'];\n    }\n\n    if (isPlainObject(request.body)) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        var contentType = response.headers['Content-Type'];\n\n        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\n            try {\n                response.data = response.json();\n            } catch (e) {\n                response.data = null;\n            }\n        } else {\n            response.data = response.text();\n        }\n    });\n}\n\nfunction jsonpClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var name = request.jsonp || 'callback',\n            callback = '_jsonp' + Math.random().toString(36).substr(2),\n            body = null,\n            handler,\n            script;\n\n        handler = function (event) {\n\n            var status = 0;\n\n            if (event.type === 'load' && body !== null) {\n                status = 200;\n            } else if (event.type === 'error') {\n                status = 404;\n            }\n\n            resolve(request.respondWith(body, { status: status }));\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        request.params[name] = callback;\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\nfunction jsonp (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next(function (response) {\n\n        if (request.method == 'JSONP') {\n            response.data = response.json();\n        }\n    });\n}\n\nfunction before (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n}\n\n/**\n * HTTP method override Interceptor.\n */\n\nfunction method (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers['X-HTTP-Method-Override'] = request.method;\n        request.method = 'POST';\n    }\n\n    next();\n}\n\nfunction header (request, next) {\n\n    request.method = request.method.toUpperCase();\n    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\n    next();\n}\n\n/**\n * Timeout Interceptor.\n */\n\nfunction timeout (request, next) {\n\n    var timeout;\n\n    if (request.timeout) {\n        timeout = setTimeout(function () {\n            request.cancel();\n        }, request.timeout);\n    }\n\n    next(function (response) {\n\n        clearTimeout(timeout);\n    });\n}\n\nfunction xhrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n                headers: parseHeaders(xhr.getAllResponseHeaders())\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xhr.abort();\n        };\n\n        xhr.open(request.method, request.getUrl(), true);\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onerror = handler;\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        if (request.credentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.getBody());\n    });\n}\n\nfunction parseHeaders(str) {\n\n    var headers = {},\n        value,\n        name,\n        i;\n\n    each(trim(str).split('\\n'), function (row) {\n\n        i = row.indexOf(':');\n        name = trim(row.slice(0, i));\n        value = trim(row.slice(i + 1));\n\n        if (headers[name]) {\n\n            if (isArray(headers[name])) {\n                headers[name].push(value);\n            } else {\n                headers[name] = [headers[name], value];\n            }\n        } else {\n\n            headers[name] = value;\n        }\n    });\n\n    return headers;\n}\n\nfunction Client (context) {\n\n    var reqHandlers = [sendRequest],\n        resHandlers = [],\n        handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new Promise$1(function (resolve) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n                    next();\n                }\n            }\n\n            function next(response) {\n                when(response, function (response) {\n\n                    if (isFunction(response)) {\n\n                        resHandlers.unshift(response);\n                    } else if (isObject(response)) {\n\n                        resHandlers.forEach(function (handler) {\n                            handler.call(context, response);\n                        });\n\n                        resolve(response);\n\n                        return;\n                    }\n\n                    exec();\n                });\n            }\n\n            exec();\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n}\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || xhrClient;\n\n    resolve(client(request));\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/**\n * HTTP Response.\n */\n\nvar Response = function () {\n    function Response(body, _ref) {\n        var url = _ref.url;\n        var headers = _ref.headers;\n        var status = _ref.status;\n        var statusText = _ref.statusText;\n        classCallCheck(this, Response);\n\n\n        this.url = url;\n        this.body = body;\n        this.headers = headers || {};\n        this.status = status || 0;\n        this.statusText = statusText || '';\n        this.ok = status >= 200 && status < 300;\n    }\n\n    Response.prototype.text = function text() {\n        return this.body;\n    };\n\n    Response.prototype.blob = function blob() {\n        return new Blob([this.body]);\n    };\n\n    Response.prototype.json = function json() {\n        return JSON.parse(this.body);\n    };\n\n    return Response;\n}();\n\nvar Request = function () {\n    function Request(options) {\n        classCallCheck(this, Request);\n\n\n        this.method = 'GET';\n        this.body = null;\n        this.params = {};\n        this.headers = {};\n\n        assign(this, options);\n    }\n\n    Request.prototype.getUrl = function getUrl() {\n        return Url(this);\n    };\n\n    Request.prototype.getBody = function getBody() {\n        return this.body;\n    };\n\n    Request.prototype.respondWith = function respondWith(body, options) {\n        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n    };\n\n    return Request;\n}();\n\n/**\n * Service for sending network requests.\n */\n\nvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\nvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\nvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\nfunction Http(options) {\n\n    var self = this || {},\n        client = Client(self.$vm);\n\n    defaults(options || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    return client(new Request(options)).then(function (response) {\n\n        return response.ok ? response : Promise$1.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return Promise$1.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    custom: CUSTOM_HEADERS,\n    common: COMMON_HEADERS\n};\n\nHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, options) {\n        return this(assign(options || {}, { url: url, method: method }));\n    };\n});\n\n['post', 'put', 'patch'].forEach(function (method) {\n\n    Http[method] = function (url, body, options) {\n        return this(assign(options || {}, { url: url, method: method, body: body }));\n    };\n});\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = assign({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: params || {} }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = assign({}, action),\n        params = {},\n        body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options.body = body;\n    options.params = assign({}, options.params, params);\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = Promise$1;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/dist/vue-resource.common.js\n ** module id = 5\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 6\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar StagePanelView_1 = require(\"../../../YuanTV3/src/view/panel/stage/StagePanelView\");\r\nvar vue_class_component_1 = require(\"vue-class-component\");\r\nvar Const_1 = require(\"../../../YuanTV3/src/event/Const\");\r\nvar Command_1 = require(\"../../../YuanTV3/src/event/Command\");\r\nvar StagePanelViewMobile = (function (_super) {\r\n    __extends(StagePanelViewMobile, _super);\r\n    function StagePanelViewMobile() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    StagePanelViewMobile.prototype.ready = function () {\r\n        _super.prototype.ready.call(this, Const_1.PanelId.stagePanel, false);\r\n    };\r\n    StagePanelViewMobile.prototype.initIO = function (io) {\r\n        console.log('init io!!!');\r\n    };\r\n    StagePanelViewMobile.prototype.onAddLeftFoul = function () {\r\n        console.log('onAddLeftFoul');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_addLeftFoul);\r\n    };\r\n    StagePanelViewMobile.prototype.onMinLeftFoul = function () {\r\n        console.log('onMinLeftFoul');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_minLeftFoul);\r\n    };\r\n    StagePanelViewMobile.prototype.onMinRightFoul = function () {\r\n        console.log('onMinRightFoul');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_minRightFoul);\r\n    };\r\n    StagePanelViewMobile.prototype.onAddRightFoul = function () {\r\n        console.log('onAddRightFoul');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_addRightFoul);\r\n    };\r\n    StagePanelViewMobile.prototype.onComingActivity = function () {\r\n        console.log('onComingActivity');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_setGameComing);\r\n    };\r\n    StagePanelViewMobile = __decorate([\r\n        vue_class_component_1.default({\r\n            template: require('./stage-panel-mobile.html'),\r\n            props: {\r\n                op: {\r\n                    type: Boolean,\r\n                    required: true,\r\n                    default: false\r\n                },\r\n                timerName: {\r\n                    type: String,\r\n                    default: \"start\"\r\n                },\r\n                mvpIdx: {\r\n                    type: Number,\r\n                    required: true,\r\n                    default: 0\r\n                },\r\n                gameId: {\r\n                    type: Number,\r\n                    required: true,\r\n                    default: 0\r\n                },\r\n                playerInfoArr: {\r\n                    type: Array,\r\n                    default: [1, 2, 3, 4, 5, 6, 7, 8]\r\n                }\r\n            }\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], StagePanelViewMobile);\r\n    return StagePanelViewMobile;\r\n}(StagePanelView_1.StagePanelView));\r\nexports.StagePanelViewMobile = StagePanelViewMobile;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/mobile/StagePanelViewMobile.ts\n ** module id = 7\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar Command_1 = require(\"../../../event/Command\");\r\nvar vue_class_component_1 = require(\"vue-class-component\");\r\nvar BasePanelView_1 = require(\"../BasePanelView\");\r\nvar Const_1 = require(\"../../../event/Const\");\r\nvar PlayerInfo_1 = require(\"../../../model/PlayerInfo\");\r\nvar PlayerPanel_1 = require(\"./PlayerPanel\");\r\nvar EventPanel_1 = require(\"./EventPanel\");\r\nvar ScorePanel_1 = require(\"./ScorePanel\");\r\nvar StagePanelView = (function (_super) {\r\n    __extends(StagePanelView, _super);\r\n    function StagePanelView() {\r\n        _super.apply(this, arguments);\r\n        this.isSubmited = false;\r\n    }\r\n    StagePanelView.prototype.ready = function (pid, isInitCanvas) {\r\n        if (isInitCanvas === void 0) { isInitCanvas = true; }\r\n        if (!pid)\r\n            pid = Const_1.PanelId.stagePanel;\r\n        var io = _super.prototype.ready.call(this, pid, isInitCanvas);\r\n        this.initIO(io);\r\n    };\r\n    StagePanelView.prototype.initIO = function (io) {\r\n        var _this = this;\r\n        io.on(\"\" + Command_1.CommandId.initPanel, function (data) {\r\n            console.log(\"\" + Command_1.CommandId.initPanel, data);\r\n            if (!_this.isInit && _this.isInitCanvas)\r\n                _this.initStage(data.gameInfo);\r\n        });\r\n        io\r\n            .on(\"\" + Command_1.CommandId.updateLeftScore, function (data) {\r\n            console.log(\"\" + Command_1.CommandId.updateLeftScore, data);\r\n            _this.scorePanel.setLeftScore(data.leftScore);\r\n        })\r\n            .on(\"\" + Command_1.CommandId.updateRightScore, function (data) {\r\n            _this.scorePanel.setRightScore(data.rightScore);\r\n        })\r\n            .on(\"\" + Command_1.CommandId.straightScore3, function (param) {\r\n            if (param.team === Const_1.ViewEvent.STRAIGHT3_LEFT) {\r\n                _this.eventPanel.fadeInStraight3(false);\r\n            }\r\n            else if (param.team === Const_1.ViewEvent.STRAIGHT3_RIGHT) {\r\n                _this.eventPanel.fadeInStraight3(true);\r\n            }\r\n        })\r\n            .on(\"\" + Command_1.CommandId.toggleTimer, function (data) {\r\n            if (_this.timerName === Const_1.TimerState.START_STR)\r\n                _this.timerName = Const_1.TimerState.PAUSE_STR;\r\n            else\r\n                _this.timerName = Const_1.TimerState.START_STR;\r\n            _this.scorePanel.toggleTimer1();\r\n        })\r\n            .on(\"\" + Command_1.CommandId.resetTimer, function (data) {\r\n            _this.timerName = Const_1.TimerState.START_STR;\r\n            _this.scorePanel.resetTimer();\r\n        })\r\n            .on(\"\" + Command_1.CommandId.updatePlayer, function (data) {\r\n            _this.playerPanel.setPlayer(data.idx, new PlayerInfo_1.PlayerInfo(data.playerDoc));\r\n            _this.scorePanel.setAvgEloScore(data.avgEloScore);\r\n        })\r\n            .on(\"\" + Command_1.CommandId.updatePlayerAll, function (param) {\r\n            for (var i = 0; i < param.playerInfoArr.length; i++) {\r\n                var playerInfo = new PlayerInfo_1.PlayerInfo(param.playerInfoArr[i]);\r\n                _this.playerPanel.setPlayer(i, playerInfo);\r\n            }\r\n            _this.scorePanel.setLeftScore(0);\r\n            _this.scorePanel.setRightScore(0);\r\n            _this.scorePanel.setAvgEloScore(param.avgEloScore);\r\n        })\r\n            .on(\"\" + Command_1.CommandId.fadeInWinPanel, function (param) {\r\n            var teamInfo = param.teamInfo;\r\n            var mvpIdx = param.mvpIdx;\r\n            var mvpId = param.mvpId;\r\n            _this.eventPanel.fadeInWinPanel(teamInfo, mvpIdx, mvpId);\r\n        })\r\n            .on(\"\" + Command_1.CommandId.fadeOutWinPanel, function (param) {\r\n            _this.eventPanel.fadeOutWinPanel();\r\n        })\r\n            .on(\"\" + Command_1.CommandId.updatePlayerBackNum, function (param) {\r\n            _this.playerPanel.playerCardArr[param.idx].setBackNumber(param.backNum);\r\n        });\r\n    };\r\n    StagePanelView.prototype.initStage = function (gameDoc) {\r\n        this.isInit = true;\r\n        this.scorePanel = new ScorePanel_1.ScorePanel(this);\r\n        this.scorePanel.init(gameDoc);\r\n        this.playerPanel = new PlayerPanel_1.PlayerPanel(this);\r\n        this.playerPanel.init(gameDoc);\r\n        this.gameId = gameDoc.id;\r\n        this.eventPanel = new EventPanel_1.EventPanel(this);\r\n        console.log('initStage', gameDoc);\r\n        if (this.op) {\r\n            for (var i = 0; i < gameDoc.playerInfoArr.length; i++) {\r\n                var playerInfo = gameDoc.playerInfoArr[i];\r\n                if (playerInfo)\r\n                    this.getElem(\"#player\" + i).value = playerInfo.playerData.id;\r\n            }\r\n        }\r\n    };\r\n    StagePanelView.prototype.onToggleTimer = function () {\r\n        this.opReq(\"\" + Command_1.CommandId.cs_toggleTimer);\r\n        console.log('onToggleTimer');\r\n    };\r\n    StagePanelView.prototype.onResetTimer = function () {\r\n        console.log('onResetTimer');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_resetTimer);\r\n    };\r\n    StagePanelView.prototype.onAddLeftScore = function () {\r\n        console.log('onAddLeftScore');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_addLeftScore, { param: 'addLeftScore' });\r\n    };\r\n    StagePanelView.prototype.onAddRightScore = function () {\r\n        console.log('onAddRightScore');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_addRightScore);\r\n    };\r\n    StagePanelView.prototype.onQueryPlayer = function (idx) {\r\n        var _this = this;\r\n        var queryId = this.getElem(\"#player\" + idx).value;\r\n        console.log('onQueryPlayer', idx, queryId);\r\n        this.post(\"/db/player/\" + queryId, function (data) {\r\n            console.log('res: ', data);\r\n            var playerDoc = data.playerDoc;\r\n            _this.getElem('#playerImg' + idx).src = playerDoc.avatar;\r\n        });\r\n    };\r\n    StagePanelView.prototype.onUpdatePlayerNum = function (idx) {\r\n        var backNum = this.getElem(\"#playerNum\" + idx).value;\r\n        console.log('onUpdatePlayerNum', idx, backNum);\r\n        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerBackNum, { idx: idx, backNum: backNum });\r\n    };\r\n    StagePanelView.prototype.onStarting = function () {\r\n        console.log('onStarting');\r\n        var playerIdArr = [];\r\n        var backNumArr = [];\r\n        for (var i = 0; i < 8; i++) {\r\n            var queryId = Number(this.getElem(\"#player\" + i).value);\r\n            playerIdArr.push(queryId);\r\n            backNumArr.push(Number(this.getElem(\"#playerNum\" + i).value));\r\n        }\r\n        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerAll, { playerIdArr: playerIdArr, backNumArr: backNumArr });\r\n    };\r\n    StagePanelView.prototype.onSetEloScore = function (idx) {\r\n        var eloScore = Number(this.getElem(\"#eloScore\" + idx).value);\r\n        this.playerPanel.setEloScore(idx, eloScore);\r\n    };\r\n    StagePanelView.prototype.onUpdateBackNum = function () {\r\n        for (var idx = 0; idx < 8; idx++) {\r\n            var backNum = this.getElem(\"#playerNum\" + idx).value;\r\n            console.log('onUpdatePlayerNum', idx, backNum);\r\n            this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerBackNum, { idx: idx, backNum: backNum });\r\n        }\r\n    };\r\n    StagePanelView.prototype.onUpdatePlayer = function (idx) {\r\n        console.log('onUpdatePlayer', idx);\r\n        var queryId = Number(this.getElem(\"#player\" + idx).value);\r\n        console.log('onQueryPlayer', idx, queryId);\r\n        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayer, { idx: idx, playerId: queryId });\r\n    };\r\n    StagePanelView.prototype.onMinRightScore = function () {\r\n        console.log('onMinRightScore');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_minRightScore);\r\n    };\r\n    StagePanelView.prototype.onMinLeftScore = function () {\r\n        console.log('onMinLeftScore');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_minLeftScore);\r\n    };\r\n    StagePanelView.prototype.onShowWin = function () {\r\n        console.log('onShowWin mvp ', this.mvpIdx);\r\n        var isBlueMvp = this.mvpIdx < 4;\r\n        if (this.scorePanel.isBlueWin != isBlueMvp) {\r\n            alert('比赛结果与mvp不符');\r\n        }\r\n        else {\r\n            this.opReq(\"\" + Command_1.CommandId.cs_toggleTimer, { state: Const_1.TimerState.PAUSE });\r\n            this.opReq(\"\" + Command_1.CommandId.cs_fadeInWinPanel, { mvpIdx: this.mvpIdx });\r\n        }\r\n    };\r\n    StagePanelView.prototype.onHideWin = function () {\r\n        console.log('onHideWin mvp ');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_fadeOutWinPanel);\r\n    };\r\n    StagePanelView.prototype.onSubmitGame = function () {\r\n        var _this = this;\r\n        var isBlueMvp = this.mvpIdx < 4;\r\n        if (this.scorePanel.isBlueWin != isBlueMvp) {\r\n            alert('比赛结果与mvp不符');\r\n        }\r\n        else {\r\n            var date = new Date();\r\n            var dateTime = date.getTime();\r\n            console.log('onSubmitGame', dateTime);\r\n            this.opReq(\"\" + Command_1.CommandId.cs_saveGameRec, { date: dateTime }, function (res) {\r\n                console.log(res);\r\n                _this.isSubmited = true;\r\n                if (res) {\r\n                    alert('比赛结果提交成功');\r\n                }\r\n                else {\r\n                    alert('比赛结果已经提交过了');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    StagePanelView.prototype.onRefresh = function () {\r\n        console.log('onRefresh');\r\n        if (this.isSubmited)\r\n            window.location.reload();\r\n        else\r\n            alert('还没提交比赛结果');\r\n    };\r\n    StagePanelView = __decorate([\r\n        vue_class_component_1.default({\r\n            template: require('./stage-panel.html'),\r\n            props: {\r\n                op: {\r\n                    type: Boolean,\r\n                    required: true,\r\n                    default: false\r\n                },\r\n                timerName: {\r\n                    type: String,\r\n                    default: \"start\"\r\n                },\r\n                mvpIdx: {\r\n                    type: Number,\r\n                    required: true,\r\n                    default: 0\r\n                },\r\n                gameId: {\r\n                    type: Number,\r\n                    required: true,\r\n                    default: 0\r\n                },\r\n                playerInfoArr: {\r\n                    type: Array,\r\n                    default: [1, 2, 3, 4, 5, 6, 7, 8]\r\n                }\r\n            }\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], StagePanelView);\r\n    return StagePanelView;\r\n}(BasePanelView_1.BasePanelView));\r\nexports.StagePanelView = StagePanelView;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/stage/StagePanelView.ts\n ** module id = 8\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventDispatcher_1 = require(\"./EventDispatcher\");\r\n(function (CommandId) {\r\n    CommandId[CommandId[\"ShowConsoleWin\"] = 100000] = \"ShowConsoleWin\";\r\n    CommandId[CommandId[\"toggleTracker\"] = 100001] = \"toggleTracker\";\r\n    CommandId[CommandId[\"toggleBallRolling\"] = 100002] = \"toggleBallRolling\";\r\n    CommandId[CommandId[\"toggleTimer\"] = 100003] = \"toggleTimer\";\r\n    CommandId[CommandId[\"cs_toggleTimer\"] = 100004] = \"cs_toggleTimer\";\r\n    CommandId[CommandId[\"resetTimer\"] = 100005] = \"resetTimer\";\r\n    CommandId[CommandId[\"cs_resetTimer\"] = 100006] = \"cs_resetTimer\";\r\n    CommandId[CommandId[\"disableTracker\"] = 100007] = \"disableTracker\";\r\n    CommandId[CommandId[\"updateLeftScore\"] = 100008] = \"updateLeftScore\";\r\n    CommandId[CommandId[\"cs_addLeftScore\"] = 100009] = \"cs_addLeftScore\";\r\n    CommandId[CommandId[\"updateRightScore\"] = 100010] = \"updateRightScore\";\r\n    CommandId[CommandId[\"cs_addRightScore\"] = 100011] = \"cs_addRightScore\";\r\n    CommandId[CommandId[\"minLeftScore\"] = 100012] = \"minLeftScore\";\r\n    CommandId[CommandId[\"cs_minLeftScore\"] = 100013] = \"cs_minLeftScore\";\r\n    CommandId[CommandId[\"minRightScore\"] = 100014] = \"minRightScore\";\r\n    CommandId[CommandId[\"cs_minRightScore\"] = 100015] = \"cs_minRightScore\";\r\n    CommandId[CommandId[\"updateLeftFoul\"] = 100016] = \"updateLeftFoul\";\r\n    CommandId[CommandId[\"cs_addLeftFoul\"] = 100017] = \"cs_addLeftFoul\";\r\n    CommandId[CommandId[\"cs_minLeftFoul\"] = 100018] = \"cs_minLeftFoul\";\r\n    CommandId[CommandId[\"updateRightFoul\"] = 100019] = \"updateRightFoul\";\r\n    CommandId[CommandId[\"cs_addRightFoul\"] = 100020] = \"cs_addRightFoul\";\r\n    CommandId[CommandId[\"cs_minRightFoul\"] = 100021] = \"cs_minRightFoul\";\r\n    CommandId[CommandId[\"stageFadeOut\"] = 100022] = \"stageFadeOut\";\r\n    CommandId[CommandId[\"cs_fadeOut\"] = 100023] = \"cs_fadeOut\";\r\n    CommandId[CommandId[\"playerScore\"] = 100024] = \"playerScore\";\r\n    CommandId[CommandId[\"cs_playerScore\"] = 100025] = \"cs_playerScore\";\r\n    CommandId[CommandId[\"stageFadeIn\"] = 100026] = \"stageFadeIn\";\r\n    CommandId[CommandId[\"cs_stageFadeIn\"] = 100027] = \"cs_stageFadeIn\";\r\n    CommandId[CommandId[\"moveStagePanel\"] = 100028] = \"moveStagePanel\";\r\n    CommandId[CommandId[\"cs_moveStagePanel\"] = 100029] = \"cs_moveStagePanel\";\r\n    CommandId[CommandId[\"updatePlayer\"] = 100030] = \"updatePlayer\";\r\n    CommandId[CommandId[\"cs_updatePlayer\"] = 100031] = \"cs_updatePlayer\";\r\n    CommandId[CommandId[\"updatePlayerAll\"] = 100032] = \"updatePlayerAll\";\r\n    CommandId[CommandId[\"cs_updatePlayerAll\"] = 100033] = \"cs_updatePlayerAll\";\r\n    CommandId[CommandId[\"cs_updatePlayerBackNum\"] = 100034] = \"cs_updatePlayerBackNum\";\r\n    CommandId[CommandId[\"updatePlayerBackNum\"] = 100035] = \"updatePlayerBackNum\";\r\n    CommandId[CommandId[\"fadeInNotice\"] = 100036] = \"fadeInNotice\";\r\n    CommandId[CommandId[\"cs_fadeInNotice\"] = 100037] = \"cs_fadeInNotice\";\r\n    CommandId[CommandId[\"cs_resetGame\"] = 100038] = \"cs_resetGame\";\r\n    CommandId[CommandId[\"cs_unLimitScore\"] = 100039] = \"cs_unLimitScore\";\r\n    CommandId[CommandId[\"unLimitScore\"] = 100040] = \"unLimitScore\";\r\n    CommandId[CommandId[\"fadeInWinPanel\"] = 100041] = \"fadeInWinPanel\";\r\n    CommandId[CommandId[\"cs_fadeInWinPanel\"] = 100042] = \"cs_fadeInWinPanel\";\r\n    CommandId[CommandId[\"fadeOutWinPanel\"] = 100043] = \"fadeOutWinPanel\";\r\n    CommandId[CommandId[\"cs_fadeOutWinPanel\"] = 100044] = \"cs_fadeOutWinPanel\";\r\n    CommandId[CommandId[\"saveGameRec\"] = 100045] = \"saveGameRec\";\r\n    CommandId[CommandId[\"cs_saveGameRec\"] = 100046] = \"cs_saveGameRec\";\r\n    CommandId[CommandId[\"cs_queryPlayerByPos\"] = 100047] = \"cs_queryPlayerByPos\";\r\n    CommandId[CommandId[\"fadeInPlayerPanel\"] = 100048] = \"fadeInPlayerPanel\";\r\n    CommandId[CommandId[\"cs_fadeInPlayerPanel\"] = 100049] = \"cs_fadeInPlayerPanel\";\r\n    CommandId[CommandId[\"fadeOutPlayerPanel\"] = 100050] = \"fadeOutPlayerPanel\";\r\n    CommandId[CommandId[\"cs_fadeOutPlayerPanel\"] = 100051] = \"cs_fadeOutPlayerPanel\";\r\n    CommandId[CommandId[\"movePlayerPanel\"] = 100052] = \"movePlayerPanel\";\r\n    CommandId[CommandId[\"cs_movePlayerPanel\"] = 100053] = \"cs_movePlayerPanel\";\r\n    CommandId[CommandId[\"straightScore3\"] = 100054] = \"straightScore3\";\r\n    CommandId[CommandId[\"straightScore5\"] = 100055] = \"straightScore5\";\r\n    CommandId[CommandId[\"initPanel\"] = 100056] = \"initPanel\";\r\n    CommandId[CommandId[\"cs_fadeInActivityPanel\"] = 100057] = \"cs_fadeInActivityPanel\";\r\n    CommandId[CommandId[\"fadeInActivityPanel\"] = 100058] = \"fadeInActivityPanel\";\r\n    CommandId[CommandId[\"cs_fadeInNextActivity\"] = 100059] = \"cs_fadeInNextActivity\";\r\n    CommandId[CommandId[\"fadeInNextActivity\"] = 100060] = \"fadeInNextActivity\";\r\n    CommandId[CommandId[\"cs_fadeInActivityExGame\"] = 100061] = \"cs_fadeInActivityExGame\";\r\n    CommandId[CommandId[\"fadeInActivityExGame\"] = 100062] = \"fadeInActivityExGame\";\r\n    CommandId[CommandId[\"cs_fadeOutActivityPanel\"] = 100063] = \"cs_fadeOutActivityPanel\";\r\n    CommandId[CommandId[\"fadeOutActivityPanel\"] = 100064] = \"fadeOutActivityPanel\";\r\n    CommandId[CommandId[\"cs_startGame\"] = 100065] = \"cs_startGame\";\r\n    CommandId[CommandId[\"cs_restartGame\"] = 100066] = \"cs_restartGame\";\r\n    CommandId[CommandId[\"cs_fadeInRankPanel\"] = 100067] = \"cs_fadeInRankPanel\";\r\n    CommandId[CommandId[\"fadeInRankPanel\"] = 100068] = \"fadeInRankPanel\";\r\n    CommandId[CommandId[\"cs_fadeInNextRank\"] = 100069] = \"cs_fadeInNextRank\";\r\n    CommandId[CommandId[\"fadeInNextRank\"] = 100070] = \"fadeInNextRank\";\r\n    CommandId[CommandId[\"cs_setGameComing\"] = 100071] = \"cs_setGameComing\";\r\n    CommandId[CommandId[\"setGameComing\"] = 100072] = \"setGameComing\";\r\n    CommandId[CommandId[\"cs_fadeOutRankPanel\"] = 100073] = \"cs_fadeOutRankPanel\";\r\n    CommandId[CommandId[\"fadeOutRankPanel\"] = 100074] = \"fadeOutRankPanel\";\r\n    CommandId[CommandId[\"cs_fadeInCountDown\"] = 100075] = \"cs_fadeInCountDown\";\r\n    CommandId[CommandId[\"fadeInCountDown\"] = 100076] = \"fadeInCountDown\";\r\n    CommandId[CommandId[\"cs_fadeOutCountDown\"] = 100077] = \"cs_fadeOutCountDown\";\r\n    CommandId[CommandId[\"fadeOutCountDown\"] = 100078] = \"fadeOutCountDown\";\r\n    CommandId[CommandId[\"cs_inScreenScore\"] = 100079] = \"cs_inScreenScore\";\r\n    CommandId[CommandId[\"inScreenScore\"] = 100080] = \"inScreenScore\";\r\n    CommandId[CommandId[\"cs_findPlayerData\"] = 100081] = \"cs_findPlayerData\";\r\n})(exports.CommandId || (exports.CommandId = {}));\r\nvar CommandId = exports.CommandId;\r\nvar CommandItem = (function () {\r\n    function CommandItem(id) {\r\n        this.id = id;\r\n    }\r\n    return CommandItem;\r\n}());\r\nvar Command = (function (_super) {\r\n    __extends(Command, _super);\r\n    function Command() {\r\n        _super.call(this);\r\n        this.cmdArr = [];\r\n        this.newCmd(CommandId.updateLeftScore, \"addLeftScore\");\r\n        this.newCmd(CommandId.updateRightScore, \"addRightScore\");\r\n        this.newCmd(CommandId.toggleTracker, \"toggleTracker\");\r\n        this.newCmd(CommandId.toggleTimer, \"toggleTimer\");\r\n        this.newCmd(CommandId.toggleBallRolling, \"toggleBallRolling\");\r\n        this.newCmd(CommandId.disableTracker, \"disableTracker\");\r\n    }\r\n    Command.prototype.newCmd = function (id, name, desc) {\r\n        var ci = new CommandItem(id);\r\n        ci.name = name;\r\n        ci.desc = desc;\r\n        this.cmdArr.push(ci);\r\n    };\r\n    return Command;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.Command = Command;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/event/Command.ts\n ** module id = 9\n ** module chunks = 0\n **/","\"use strict\";\r\nvar EventDispatcher = (function () {\r\n    function EventDispatcher() {\r\n        this._func = {};\r\n        this._funcId = 0;\r\n    }\r\n    EventDispatcher.prototype.on = function (type, func) {\r\n        if (!this._func[type])\r\n            this._func[type] = [];\r\n        this._funcId++;\r\n        this._func[type].push({ func: func, id: this._funcId });\r\n    };\r\n    EventDispatcher.prototype.emit = function (type, param, broadcastId) {\r\n        if (param === void 0) { param = null; }\r\n        if (broadcastId === void 0) { broadcastId = null; }\r\n        if (this._func[type]) {\r\n            for (var i = 0; i < this._func[type].length; ++i) {\r\n                var f = this._func[type][i];\r\n                if (f)\r\n                    f.func(param);\r\n            }\r\n        }\r\n        if (this.broadcast && broadcastId)\r\n            this.broadcast(broadcastId, type, param);\r\n    };\r\n    EventDispatcher.prototype.proxy = function () {\r\n        var param = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            param[_i - 0] = arguments[_i];\r\n        }\r\n        throw new Error(\"no proxy method!!!\");\r\n    };\r\n    ;\r\n    EventDispatcher.prototype.broadcast = function () {\r\n        var param = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            param[_i - 0] = arguments[_i];\r\n        }\r\n        throw new Error(\"no broadcast method!!!\");\r\n    };\r\n    ;\r\n    EventDispatcher.prototype.del = function (type, funcId) {\r\n        if (funcId === void 0) { funcId = -1; }\r\n        if (this._func[type])\r\n            if (funcId < 0) {\r\n                this._func[type] = [];\r\n            }\r\n            else {\r\n                for (var i = 0; i < this._func[type].length; ++i) {\r\n                    var f = this._func[type][i];\r\n                    if (f) {\r\n                        if (f.id == funcId) {\r\n                            delete this._func[type][i];\r\n                            console.log('del event', type, funcId);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    };\r\n    EventDispatcher.prototype.removeAll = function () {\r\n        this._func = {};\r\n    };\r\n    return EventDispatcher;\r\n}());\r\nexports.EventDispatcher = EventDispatcher;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/event/EventDispatcher.ts\n ** module id = 10\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar VueEx_1 = require(\"../VueEx\");\r\nvar Const_1 = require(\"../../event/Const\");\r\nvar BasePanelView = (function (_super) {\r\n    __extends(BasePanelView, _super);\r\n    function BasePanelView() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    BasePanelView.prototype.initCanvas = function () {\r\n        this.stageWidth = Const_1.ViewConst.STAGE_WIDTH;\r\n        this.stageHeight = Const_1.ViewConst.STAGE_HEIGHT;\r\n        var canvas = document.getElementById(\"stage\");\r\n        if (canvas) {\r\n            canvas.setAttribute(\"width\", this.stageWidth + \"\");\r\n            canvas.setAttribute(\"height\", this.stageHeight + \"\");\r\n            var stage = new createjs.Stage(canvas);\r\n            stage.autoClear = true;\r\n            createjs.Ticker.framerate = 60;\r\n            createjs.Ticker.addEventListener(\"tick\", function () {\r\n                stage.update();\r\n            });\r\n            this.ctn = new createjs.Container();\r\n            stage.addChild(this.ctn);\r\n            this.stage = stage;\r\n        }\r\n    };\r\n    BasePanelView.prototype.ready = function (pid, isInitCanvas) {\r\n        var _this = this;\r\n        if (isInitCanvas === void 0) { isInitCanvas = true; }\r\n        this.isInitCanvas = isInitCanvas;\r\n        if (isInitCanvas)\r\n            this.initCanvas();\r\n        this.opReq = function (cmdId, param, callback) {\r\n            _this.$http.post(\"/panel/\" + pid + \"/\" + cmdId, param, callback);\r\n        };\r\n        var panel = this.$parent;\r\n        this.op = panel.isOp;\r\n        console.log(\"BasePanelView.ready\", panel.isOp);\r\n        return panel.connect();\r\n    };\r\n    return BasePanelView;\r\n}(VueEx_1.VueEx));\r\nexports.BasePanelView = BasePanelView;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/BasePanelView.ts\n ** module id = 11\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Vue = require('vue');\r\nvar vue_class_component_1 = require(\"vue-class-component\");\r\nexports.Component = vue_class_component_1.default;\r\nvar VueEx = (function (_super) {\r\n    __extends(VueEx, _super);\r\n    function VueEx() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    VueEx.prototype.ready = function () {\r\n        this.$parentMethods = this.$parent.$options.methods;\r\n    };\r\n    VueEx.prototype.getAttr = function (e, propName) {\r\n        var str = e.target.attributes[propName];\r\n        var a = str.split('=');\r\n        if (a.length === 2) {\r\n            return a[1];\r\n        }\r\n        return null;\r\n    };\r\n    VueEx.prototype.post = function (url, data, option) {\r\n        if (data)\r\n            this.$http.post(url, data, option);\r\n        else\r\n            this.$http.post(url, option);\r\n    };\r\n    VueEx.prototype.getElem = function (val) {\r\n        var _0 = val[0];\r\n        if (_0 == \"#\") {\r\n            return document.getElementById(val.substr(1));\r\n        }\r\n    };\r\n    return VueEx;\r\n}(Vue));\r\nexports.VueEx = VueEx;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/VueEx.ts\n ** module id = 12\n ** module chunks = 0\n **/","\"use strict\";\r\nexports.PanelId = {\r\n    stagePanel: 'stage',\r\n    winPanel: 'win',\r\n    actPanel: 'act',\r\n    screenPanel: 'screen',\r\n    playerPanel: 'player'\r\n};\r\nexports.ServerConst = {\r\n    SEND_ASYNC: true,\r\n    DEF_AVATAR: '/img/panel/stage/blue.png'\r\n};\r\nexports.ViewConst = {\r\n    STAGE_WIDTH: 1920,\r\n    STAGE_HEIGHT: 1080\r\n};\r\nexports.TimerState = {\r\n    START_STR: 'start',\r\n    PAUSE_STR: 'pause',\r\n    PAUSE: 0,\r\n    RUNNING: 1\r\n};\r\nexports.ViewEvent = {\r\n    PLAYER_EDIT: 'edit player',\r\n    STRAIGHT3_LEFT: 'STRAIGHT3_LEFT',\r\n    STRAIGHT3_RIGHT: 'STRAIGHT3_RIGHT'\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/event/Const.ts\n ** module id = 13\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar BaseInfo_1 = require(\"./BaseInfo\");\r\nvar PlayerDoc = (function () {\r\n    function PlayerDoc() {\r\n        this.id = 0;\r\n        this.name = '';\r\n        this.phone = 0;\r\n        this.eloScore = 0;\r\n        this.style = 0;\r\n        this.avatar = \"\";\r\n        this.height = 0;\r\n        this.weight = 0;\r\n        this.dtScore = 0;\r\n        this.activityId = 0;\r\n        this.gameRec = [];\r\n        this.loseGameCount = 0;\r\n        this.winGameCount = 0;\r\n    }\r\n    return PlayerDoc;\r\n}());\r\nvar PlayerInfo = (function (_super) {\r\n    __extends(PlayerInfo, _super);\r\n    function PlayerInfo(playerData) {\r\n        _super.call(this);\r\n        this.playerData = new PlayerDoc();\r\n        this.isRed = true;\r\n        this.isMvp = false;\r\n        this.backNumber = 0;\r\n        if (playerData) {\r\n            if (playerData['playerData'] != null) {\r\n                this.playerData = BaseInfo_1.obj2Class(playerData.playerData, PlayerDoc);\r\n                this.setPlayerInfoFromData(playerData);\r\n            }\r\n            else {\r\n                this.playerData = BaseInfo_1.obj2Class(playerData, PlayerDoc);\r\n                this.setPlayerInfoFromData(playerData);\r\n            }\r\n        }\r\n    }\r\n    PlayerInfo.prototype.setPlayerInfoFromData = function (data) {\r\n        if (data['isRed'] != null)\r\n            this.isRed = data.isRed;\r\n        if (data['isMvp'] != null)\r\n            this.isMvp = data.isMvp;\r\n        if (data['backNumber'] != null)\r\n            this.backNumber = data.backNumber;\r\n    };\r\n    PlayerInfo.prototype.getPlayerData = function () {\r\n        this.playerData['isRed'] = this.isRed;\r\n        this.playerData['isMvp'] = this.isMvp;\r\n        this.playerData['backNumber'] = this.backNumber;\r\n        return this.playerData;\r\n    };\r\n    PlayerInfo.prototype.id = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"id\", val);\r\n    };\r\n    PlayerInfo.prototype.phone = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"phone\", val);\r\n    };\r\n    PlayerInfo.prototype.name = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"name\", val);\r\n    };\r\n    PlayerInfo.prototype.activityId = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"activityId\", val);\r\n    };\r\n    PlayerInfo.prototype.eloScore = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"eloScore\", val);\r\n    };\r\n    PlayerInfo.prototype.dtScore = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"dtScore\", val);\r\n    };\r\n    PlayerInfo.prototype.style = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"style\", val);\r\n    };\r\n    PlayerInfo.prototype.avatar = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"avatar\", val);\r\n    };\r\n    PlayerInfo.prototype.gameRec = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"gameRec\", val);\r\n    };\r\n    PlayerInfo.winPercent = function (playerDoc) {\r\n        var p = playerDoc.winGameCount / PlayerInfo.gameCount(playerDoc);\r\n        if (!p)\r\n            p = 0;\r\n        return p;\r\n    };\r\n    PlayerInfo.winPercentStr = function (playerDoc) {\r\n        return (PlayerInfo.winPercent(playerDoc) * 100).toFixed(1) + \"%\";\r\n    };\r\n    PlayerInfo.prototype.winpercent = function (val) {\r\n        return this.winGameCount() / this.gameCount();\r\n    };\r\n    PlayerInfo.gameCount = function (playerDoc) {\r\n        return (playerDoc.loseGameCount + playerDoc.winGameCount) || 0;\r\n    };\r\n    PlayerInfo.prototype.gameCount = function () {\r\n        return this.loseGameCount() + this.winGameCount();\r\n    };\r\n    PlayerInfo.prototype.winGameCount = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"winGameCount\", val);\r\n    };\r\n    PlayerInfo.prototype.loseGameCount = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"loseGameCount\", val);\r\n    };\r\n    PlayerInfo.prototype.getWinPercent = function () {\r\n        return (this.winpercent() * 100).toFixed(1) + \"%\";\r\n    };\r\n    PlayerInfo.getStyleIcon = function (style) {\r\n        var path = '/img/panel/stage/';\r\n        if (style === 1) {\r\n            path += 'feng.png';\r\n        }\r\n        else if (style === 2) {\r\n            path += 'lin.png';\r\n        }\r\n        else if (style === 3) {\r\n            path += 'huo.png';\r\n        }\r\n        else if (style === 4) {\r\n            path += 'shan.png';\r\n        }\r\n        return path;\r\n    };\r\n    PlayerInfo.prototype.getWinStyleIcon = function () {\r\n        var path = '/img/panel/stage/win/';\r\n        if (this.style() == 1) {\r\n            path += 'fengWin.png';\r\n        }\r\n        else if (this.style() == 2) {\r\n            path += 'linWin.png';\r\n        }\r\n        else if (this.style() == 3) {\r\n            path += 'huoWin.png';\r\n        }\r\n        else if (this.style() == 4) {\r\n            path += 'shanWin.png';\r\n        }\r\n        return path;\r\n    };\r\n    PlayerInfo.prototype.getRec = function () {\r\n        return { id: this.id(), eloScore: this.eloScore(), dtScore: this.dtScore() };\r\n    };\r\n    PlayerInfo.prototype.saveScore = function (dtScore, isWin) {\r\n        this.dtScore(dtScore);\r\n        this.eloScore(this.eloScore() + dtScore);\r\n        if (isWin) {\r\n            this.winGameCount(this.winGameCount() + 1);\r\n        }\r\n        else\r\n            this.loseGameCount(this.loseGameCount() + 1);\r\n    };\r\n    PlayerInfo.prototype.getCurWinningPercent = function () {\r\n        return this.winGameCount() / (this.loseGameCount() + this.winGameCount());\r\n    };\r\n    return PlayerInfo;\r\n}(BaseInfo_1.BaseInfo));\r\nexports.PlayerInfo = PlayerInfo;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/model/PlayerInfo.ts\n ** module id = 14\n ** module chunks = 0\n **/","\"use strict\";\r\nexports.isdef = function (val) {\r\n    return val != undefined;\r\n};\r\nexports.prop = function (obj, paramName, v, callback) {\r\n    if (exports.isdef(v)) {\r\n        obj[paramName] = v;\r\n        if (callback)\r\n            callback();\r\n    }\r\n    else\r\n        return obj[paramName];\r\n};\r\nexports.obj2Class = function (obj, cls) {\r\n    var c = new cls;\r\n    for (var paramName in obj) {\r\n        c[paramName] = obj[paramName];\r\n    }\r\n    return c;\r\n};\r\nfunction setPropTo(data, obj) {\r\n    for (var key in data) {\r\n        if (obj.hasOwnProperty(key))\r\n            obj[key] = data[key];\r\n    }\r\n}\r\nexports.setPropTo = setPropTo;\r\nvar BaseDoc = (function () {\r\n    function BaseDoc() {\r\n    }\r\n    return BaseDoc;\r\n}());\r\nexports.BaseDoc = BaseDoc;\r\nvar BaseInfo = (function () {\r\n    function BaseInfo() {\r\n    }\r\n    return BaseInfo;\r\n}());\r\nexports.BaseInfo = BaseInfo;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/model/BaseInfo.ts\n ** module id = 15\n ** module chunks = 0\n **/","\"use strict\";\r\nvar PlayerInfo_1 = require(\"../../../model/PlayerInfo\");\r\nvar PlayerRender_1 = require(\"../render/PlayerRender\");\r\nvar PlayerPanel = (function () {\r\n    function PlayerPanel(parent) {\r\n        this.playerCardArr = [];\r\n        var ctn = parent.scorePanel.ctn;\r\n        var playerInfo = new PlayerInfo_1.PlayerInfo();\r\n        var px = 24;\r\n        var py = 12;\r\n        var invert = 150;\r\n        for (var i = 0; i < 4; i++) {\r\n            var playerCard = new PlayerRender_1.StagePlayerCard(playerInfo, 1, true, true);\r\n            playerCard.delayShow(i * 600);\r\n            playerCard.x = px + i * invert;\r\n            playerCard.y = py;\r\n            this.playerCardArr.push(playerCard);\r\n            ctn.addChild(playerCard);\r\n        }\r\n        px = 1247;\r\n        for (var i = 0; i < 4; i++) {\r\n            var playerCard = new PlayerRender_1.StagePlayerCard(playerInfo, 1, false, true);\r\n            playerCard.delayShow((3 - i) * 600);\r\n            playerCard.x = px + i * invert;\r\n            playerCard.y = py;\r\n            this.playerCardArr.push(playerCard);\r\n            ctn.addChild(playerCard);\r\n        }\r\n    }\r\n    PlayerPanel.prototype.setEloScore = function (idx, eloScore) {\r\n        this.playerCardArr[idx].setEloScore(eloScore);\r\n    };\r\n    PlayerPanel.prototype.setPlayer = function (idx, playerInfo) {\r\n        var playerCard = this.playerCardArr[idx];\r\n        playerCard.setPlayerInfo(playerInfo, 1, playerCard.isBlue);\r\n    };\r\n    PlayerPanel.prototype.init = function (gameDoc) {\r\n        for (var i = 0; i < gameDoc.playerInfoArr.length; i++) {\r\n            if (gameDoc.playerInfoArr[i]) {\r\n                this.setPlayer(i, new PlayerInfo_1.PlayerInfo(gameDoc.playerInfoArr[i]));\r\n            }\r\n        }\r\n    };\r\n    return PlayerPanel;\r\n}());\r\nexports.PlayerPanel = PlayerPanel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/stage/PlayerPanel.ts\n ** module id = 16\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar JsFunc_1 = require(\"../../../utils/JsFunc\");\r\nvar PlayerInfo_1 = require(\"../../../model/PlayerInfo\");\r\nvar Fx_1 = require(\"../../../utils/Fx\");\r\nvar Container = createjs.Container;\r\nvar StagePlayerCard = (function (_super) {\r\n    __extends(StagePlayerCard, _super);\r\n    function StagePlayerCard(playerInfo, scale, isBlue, isDelayShow) {\r\n        if (scale === void 0) { scale = 1; }\r\n        if (isBlue === void 0) { isBlue = true; }\r\n        if (isDelayShow === void 0) { isDelayShow = false; }\r\n        _super.call(this);\r\n        this._delayShowEnd = false;\r\n        this.isDelayShow = isDelayShow;\r\n        this.setPlayerInfo(playerInfo, scale, isBlue);\r\n    }\r\n    StagePlayerCard.prototype.setName = function (name) {\r\n        this.nameText.text = name;\r\n    };\r\n    StagePlayerCard.prototype.setEloScore = function (eloScore) {\r\n        this.eloScoreText.text = eloScore.toString();\r\n    };\r\n    StagePlayerCard.prototype.setBackNumber = function (backNumber) {\r\n        this.backNumText.text = backNumber.toString();\r\n    };\r\n    StagePlayerCard.prototype.setStyle = function (style) {\r\n        this._styleCtn.removeAllChildren();\r\n        var styleIcon = new createjs.Bitmap(PlayerInfo_1.PlayerInfo.getStyleIcon(style));\r\n        this._styleCtn.addChild(styleIcon);\r\n    };\r\n    StagePlayerCard.prototype.setPlayerInfo = function (playerInfo, scale, isBlue) {\r\n        var _this = this;\r\n        if (scale === void 0) { scale = 1; }\r\n        if (isBlue === void 0) { isBlue = true; }\r\n        this.isBlue = isBlue;\r\n        var ctn = this;\r\n        this.removeAllChildren();\r\n        function _isBluePath(p) {\r\n            if (isBlue)\r\n                return p + \"Blue.png\";\r\n            return p + \"Red.png\";\r\n        }\r\n        var avatarFrame = new createjs.Bitmap(_isBluePath('/img/panel/stage/avatarFrame'));\r\n        var avatarCtn = new createjs.Container();\r\n        this.avatarCtn = avatarCtn;\r\n        if (isBlue) {\r\n            avatarCtn.x = 19;\r\n            avatarCtn.y = 1;\r\n        }\r\n        else {\r\n            avatarCtn.x = 3;\r\n            avatarCtn.y = 1;\r\n        }\r\n        var avatarMask = new createjs.Shape();\r\n        var sx = 44;\r\n        if (isBlue)\r\n            avatarMask.graphics.beginFill(\"#000000\")\r\n                .moveTo(sx, 0)\r\n                .lineTo(0, 76)\r\n                .lineTo(180 - sx, 76)\r\n                .lineTo(180, 0)\r\n                .lineTo(sx, 0);\r\n        else {\r\n            avatarMask.graphics.beginFill(\"#000000\")\r\n                .moveTo(0, 0)\r\n                .lineTo(sx, 76)\r\n                .lineTo(180, 76)\r\n                .lineTo(180 - sx, 0)\r\n                .lineTo(0, 0);\r\n        }\r\n        var avatarPath;\r\n        if (isBlue)\r\n            avatarPath = '/img/panel/stage/blue.png';\r\n        else\r\n            avatarPath = '/img/panel/stage/red.png';\r\n        avatarPath = playerInfo.avatar() || avatarPath;\r\n        JsFunc_1.loadImg(avatarPath, function () {\r\n            var avatarBmp = new createjs.Bitmap(avatarPath);\r\n            avatarBmp.mask = avatarMask;\r\n            avatarCtn.addChild(avatarMask);\r\n            avatarCtn.addChild(avatarBmp);\r\n            _this.avatarBmp = avatarBmp;\r\n            if (_this.isDelayShow) {\r\n                if (_this._delayShowEnd) {\r\n                    Fx_1.blink(avatarBmp);\r\n                }\r\n                else {\r\n                    avatarBmp.alpha = 0;\r\n                }\r\n            }\r\n            avatarBmp.scaleX = avatarBmp.scaleY = 180 / avatarBmp.getBounds().width;\r\n        });\r\n        ctn.addChild(avatarCtn);\r\n        ctn.addChild(avatarFrame);\r\n        var backNumText = new createjs.Text(playerInfo.backNumber + \"\", \"18px Arial\", \"#fff\");\r\n        backNumText.y = 5;\r\n        this.backNumText = backNumText;\r\n        if (isBlue) {\r\n            backNumText.textAlign = \"right\";\r\n            backNumText.x = 182;\r\n        }\r\n        else {\r\n            backNumText.textAlign = \"left\";\r\n            backNumText.x = 15;\r\n        }\r\n        ctn.addChild(backNumText);\r\n        var eloText = '';\r\n        if (playerInfo.gameRec().length >= 3)\r\n            eloText = playerInfo.eloScore();\r\n        else {\r\n            var newPlayerIcon = new createjs.Bitmap('/img/panel/stage/newPlayer.png');\r\n            if (isBlue)\r\n                newPlayerIcon.x = 37;\r\n            else\r\n                newPlayerIcon.x = 139;\r\n            newPlayerIcon.y = 61;\r\n            ctn.addChild(newPlayerIcon);\r\n        }\r\n        console.log(\"player\" + playerInfo.name() + \"game Count\", playerInfo.gameCount());\r\n        var eloScoreText = new createjs.Text(eloText, \"18px Arial\", \"#fff\");\r\n        eloScoreText.y = 59;\r\n        this.eloScoreText = eloScoreText;\r\n        if (isBlue) {\r\n            eloScoreText.textAlign = \"left\";\r\n            eloScoreText.x = 31;\r\n        }\r\n        else {\r\n            eloScoreText.textAlign = \"right\";\r\n            eloScoreText.x = 172;\r\n        }\r\n        ctn.addChild(eloScoreText);\r\n        var styleCtn = new createjs.Container();\r\n        this._styleCtn = styleCtn;\r\n        var styleIcon = new createjs.Bitmap(PlayerInfo_1.PlayerInfo.getStyleIcon(playerInfo.style()));\r\n        if (isBlue) {\r\n            styleCtn.x = 110;\r\n        }\r\n        else {\r\n            styleCtn.x = 52;\r\n        }\r\n        styleCtn.y = 75;\r\n        Fx_1.blink(styleIcon);\r\n        styleCtn.addChild(styleIcon);\r\n        ctn.addChild(styleCtn);\r\n        var nameText = new createjs.Text(playerInfo.name(), \"bold 18px Arial\", \"#fff\");\r\n        this.nameText = nameText;\r\n        nameText.y = 84;\r\n        if (isBlue) {\r\n            nameText.textAlign = \"left\";\r\n            nameText.x = 16;\r\n        }\r\n        else {\r\n            nameText.textAlign = \"right\";\r\n            nameText.x = 185;\r\n        }\r\n        ctn.addChild(nameText);\r\n        return ctn;\r\n    };\r\n    StagePlayerCard.prototype.delayShow = function (delay) {\r\n        var _this = this;\r\n        console.log('delay show', delay);\r\n        this._delayShowEnd = false;\r\n        createjs.Tween.get(this.avatarCtn).wait(delay).call(function () {\r\n            _this._delayShowEnd = true;\r\n            if (_this.avatarBmp) {\r\n                Fx_1.blink(_this.avatarBmp);\r\n            }\r\n            if (_this._styleCtn) {\r\n                Fx_1.blink(_this._styleCtn);\r\n            }\r\n        });\r\n        Fx_1.delayCall(delay, function () {\r\n            _this.avatarBmp.alpha = 0;\r\n        });\r\n    };\r\n    StagePlayerCard.newScoreText = function () {\r\n        var sheet = new createjs.SpriteSheet({\r\n            animations: {\r\n                \"0\": 1,\r\n                \"1\": 2,\r\n                \"2\": 3,\r\n                \"3\": 4,\r\n                \"4\": 5,\r\n                \"5\": 6,\r\n                \"6\": 7,\r\n                \"7\": 8,\r\n                \"8\": 9,\r\n                \"9\": 0\r\n            },\r\n            images: [\"/img/panel/stage/scoreNum.png\"],\r\n            frames: [[0, 0, 40, 54],\r\n                [41, 0, 40, 54],\r\n                [0, 55, 40, 54],\r\n                [41, 55, 40, 54],\r\n                [82, 0, 40, 54],\r\n                [82, 55, 40, 54],\r\n                [123, 0, 40, 54],\r\n                [123, 55, 40, 54],\r\n                [0, 110, 40, 54],\r\n                [41, 110, 40, 54]]\r\n        });\r\n        return new createjs.BitmapText(\"0\", sheet);\r\n    };\r\n    return StagePlayerCard;\r\n}(Container));\r\nexports.StagePlayerCard = StagePlayerCard;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/render/PlayerRender.ts\n ** module id = 17\n ** module chunks = 0\n **/","\"use strict\";\r\nfunction ascendingProp(prop) {\r\n    return function (a, b) {\r\n        return a[prop] - b[prop];\r\n    };\r\n}\r\nexports.ascendingProp = ascendingProp;\r\nfunction descendingProp(prop) {\r\n    return function (a, b) {\r\n        return b[prop] - a[prop];\r\n    };\r\n}\r\nexports.descendingProp = descendingProp;\r\nfunction mapToSortArray(map, prop, sortFunc) {\r\n    var arr = [];\r\n    for (var k in map) {\r\n        arr.push(map[k]);\r\n    }\r\n    arr.sort(sortFunc(prop));\r\n    return arr;\r\n}\r\nexports.mapToSortArray = mapToSortArray;\r\nfunction mapToArr(map) {\r\n    var a = [];\r\n    for (var k in map) {\r\n        a.push(map[k]);\r\n    }\r\n    return a;\r\n}\r\nexports.mapToArr = mapToArr;\r\nfunction arrCountSame(arrA, arrB) {\r\n    var n = 0;\r\n    for (var i = 0; i < arrB.length; i++) {\r\n        var obj = arrB[i];\r\n        if (arrA.indexOf(obj) > -1) {\r\n            n++;\r\n        }\r\n    }\r\n    return n;\r\n}\r\nexports.arrCountSame = arrCountSame;\r\nfunction arrUniqueFilter(el, i, a) {\r\n    return i == a.indexOf(el);\r\n}\r\nexports.arrUniqueFilter = arrUniqueFilter;\r\nfunction loadImg(path1, callback) {\r\n    var img = new Image();\r\n    img.onload = callback;\r\n    img.src = path1;\r\n}\r\nexports.loadImg = loadImg;\r\nfunction loadImgArr(pathArr, callback) {\r\n    var count = pathArr.length;\r\n    function onLoadImg() {\r\n        count--;\r\n        if (count === 0)\r\n            callback();\r\n    }\r\n    for (var i = 0; i < pathArr.length; i++) {\r\n        var p = pathArr[i];\r\n        var img = new Image();\r\n        img.onload = onLoadImg;\r\n        img.src = p;\r\n    }\r\n}\r\nexports.loadImgArr = loadImgArr;\r\nfunction combineArr(arr, num) {\r\n    var r = [];\r\n    (function f(t, a, n) {\r\n        if (n == 0) {\r\n            return r.push(t);\r\n        }\r\n        for (var i = 0, l = a.length; i <= l - n; i++) {\r\n            f(t.concat(a[i]), a.slice(i + 1), n - 1);\r\n        }\r\n    })([], arr, num);\r\n    return r;\r\n}\r\nexports.combineArr = combineArr;\r\nfunction formatSecond(sec, minStr, secStr) {\r\n    if (minStr === void 0) { minStr = \":\"; }\r\n    if (secStr === void 0) { secStr = \"\"; }\r\n    var min = Math.floor(sec / 60);\r\n    var s = sec % 60;\r\n    var strMin = min + \"\";\r\n    var strSec = s + \"\";\r\n    if (min < 10)\r\n        strMin = \"0\" + strMin;\r\n    if (s < 10)\r\n        strSec = \"0\" + strSec;\r\n    return strMin + minStr + strSec + secStr;\r\n}\r\nexports.formatSecond = formatSecond;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/utils/JsFunc.ts\n ** module id = 18\n ** module chunks = 0\n **/","\"use strict\";\r\nfunction delayCall(delay, callback) {\r\n    createjs.Tween.get(this).wait(delay).call(callback);\r\n}\r\nexports.delayCall = delayCall;\r\nfunction blink(target, time, loop) {\r\n    if (time === void 0) { time = 80; }\r\n    if (loop === void 0) { loop = false; }\r\n    var blink = time;\r\n    createjs.Tween.get(target, { loop: loop })\r\n        .to({ alpha: 1 }, blink)\r\n        .to({ alpha: 0 }, blink)\r\n        .to({ alpha: 1 }, blink)\r\n        .to({ alpha: 0 }, blink)\r\n        .to({ alpha: 1 }, blink);\r\n}\r\nexports.blink = blink;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/utils/Fx.ts\n ** module id = 19\n ** module chunks = 0\n **/","\"use strict\";\r\nvar JsFunc_1 = require(\"../../../utils/JsFunc\");\r\nvar Const_1 = require(\"../../../event/Const\");\r\nvar PlayerInfo_1 = require(\"../../../model/PlayerInfo\");\r\nvar EventPanel = (function () {\r\n    function EventPanel(parent) {\r\n        var ctn = new createjs.Container();\r\n        parent.stage.addChild(ctn);\r\n        this.ctn = ctn;\r\n    }\r\n    EventPanel.prototype.fadeInStraight3 = function (isRed) {\r\n        var _this = this;\r\n        console.log(\"straight score 3 isRed:\", isRed);\r\n        var isBusy = false;\r\n        isBusy = true;\r\n        this.ctn.removeAllChildren();\r\n        var ctn = new createjs.Container();\r\n        var basePath = '/img/panel/stage/straight3';\r\n        if (isRed)\r\n            basePath += 'Red.png';\r\n        else\r\n            basePath += 'Blue.png';\r\n        JsFunc_1.loadImg(basePath, function () {\r\n            var txt3 = new createjs.Bitmap(basePath);\r\n            var bound = txt3.getBounds();\r\n            txt3.x = -bound.width;\r\n            txt3.y = -bound.height;\r\n            ctn.addChild(txt3);\r\n            ctn.x = 1920 / 2 + 200;\r\n            ctn.y = 200;\r\n            ctn.alpha = 1;\r\n            ctn.scaleX = ctn.scaleY = 5;\r\n            _this.ctn.addChild(ctn);\r\n            createjs.Tween.get(ctn)\r\n                .to({ scaleX: 1, scaleY: 1 }, 150)\r\n                .wait(4000)\r\n                .to({ alpha: 0 }, 200).call(function () {\r\n                isBusy = false;\r\n            });\r\n        });\r\n    };\r\n    EventPanel.prototype.fadeInWinPanel = function (teamInfo, mvpIdx, mpvId) {\r\n        var mvp = Number(mvpIdx);\r\n        console.log(this, \"show fadeInWinPanel mvp:\", mvp);\r\n        var ctn = this.ctn;\r\n        var modal = new createjs.Shape();\r\n        modal.graphics.beginFill('#000').drawRect(0, 0, Const_1.ViewConst.STAGE_WIDTH, Const_1.ViewConst.STAGE_HEIGHT);\r\n        modal.alpha = .3;\r\n        ctn.addChild(modal);\r\n        var playerCtn = new createjs.Container();\r\n        ctn.addChild(playerCtn);\r\n        var isRedWin = (mvp > 3);\r\n        var isBlue = (mvp < 4);\r\n        var titlePath = \"/img/panel/stage/win/winPanelTitle\";\r\n        if (isRedWin)\r\n            titlePath += 'Red.png';\r\n        else\r\n            titlePath += 'Blue.png';\r\n        var titleCtn = new createjs.Container();\r\n        JsFunc_1.loadImg(titlePath, function () {\r\n            var title = new createjs.Bitmap(titlePath);\r\n            title.x = -419;\r\n            title.y = -158;\r\n            titleCtn.x = (Const_1.ViewConst.STAGE_WIDTH) * .5;\r\n            titleCtn.y = 198;\r\n            titleCtn.scaleX = titleCtn.scaleY = 5;\r\n            titleCtn.alpha = 0;\r\n            createjs.Tween.get(titleCtn).to({ scaleX: 1, scaleY: 1, alpha: 1 }, 150);\r\n            titleCtn.addChild(title);\r\n        });\r\n        ctn.addChild(titleCtn);\r\n        var prePlayerIsMvp = false;\r\n        playerCtn.x = (Const_1.ViewConst.STAGE_WIDTH - 4 * 390) * .5;\r\n        playerCtn.y = 300;\r\n        var start = 0;\r\n        if (!isBlue) {\r\n        }\r\n        for (var i = start; i < start + 4; i++) {\r\n            var pInfo;\r\n            pInfo = new PlayerInfo_1.PlayerInfo(teamInfo.playerInfoArr[i].playerData);\r\n            pInfo.isRed = teamInfo.playerInfoArr[i].isRed;\r\n            pInfo.isBlue = isBlue;\r\n            pInfo.isMvp = pInfo.id() == mpvId;\r\n            var playerCard = this.getWinPlayerCard(pInfo, function () {\r\n                var bound = playerCard.getBounds();\r\n                if (bound)\r\n                    playerCard.cache(bound.x, bound.y, bound.width, bound.height);\r\n            });\r\n            playerCard.x = i * 390;\r\n            if (pInfo.isMvp)\r\n                playerCard.y = -30;\r\n            else\r\n                playerCard.y = 0;\r\n            playerCard.px = playerCard.x;\r\n            playerCard.py = playerCard.y;\r\n            playerCard.x = 500;\r\n            playerCard.scaleX = playerCard.scaleY = 0.01;\r\n            createjs.Tween.get(playerCard)\r\n                .to({ x: playerCard.px, scaleX: 1.1, scaleY: 1.1 }, 200)\r\n                .to({ scaleX: 1, scaleY: 1 }, 60);\r\n            playerCtn.addChild(playerCard);\r\n            prePlayerIsMvp = pInfo.isMvp;\r\n        }\r\n    };\r\n    EventPanel.prototype.getWinPlayerCard = function (p, callback) {\r\n        var isMvp = p.isMvp;\r\n        var ctn = new createjs.Container();\r\n        console.log(\"playerCard=======:\", p.avatar());\r\n        JsFunc_1.loadImg(p.avatar(), function () {\r\n            var avatar = new createjs.Bitmap(p.avatar());\r\n            var scale = 80 / avatar.getBounds().height;\r\n            if (isMvp) {\r\n                avatar.scaleX = avatar.scaleY = 1.5 * scale;\r\n                avatar.x = (180 - 180 * 1.2) * .5 + 60;\r\n                avatar.y = 45 + 30;\r\n            }\r\n            else {\r\n                avatar.scaleX = avatar.scaleY = 1.2 * scale;\r\n                avatar.x = (180 - 180 * 1.2) * .5 + 60;\r\n                avatar.y = 50 + 30;\r\n            }\r\n            ctn.addChild(avatar);\r\n            var bgPath = '/img/panel/stage/win/playerBgWin';\r\n            if (p.isBlue)\r\n                bgPath += \"Blue\";\r\n            else\r\n                bgPath += \"Red\";\r\n            if (p.isMvp)\r\n                bgPath += \"Mvp\";\r\n            bgPath += '.png';\r\n            var bg = new createjs.Bitmap(bgPath);\r\n            if (p.isMvp) {\r\n                bg.x = -132;\r\n                bg.y = -105;\r\n            }\r\n            else {\r\n                bg.x = -116;\r\n                bg.y = -80;\r\n            }\r\n            ctn.addChild(bg);\r\n            var col;\r\n            if (p.isRed)\r\n                col = \"#e23f6b\";\r\n            else\r\n                col = \"#1ac3fa\";\r\n            var nameCol = \"#ddd\";\r\n            if (isMvp)\r\n                nameCol = \"#f1c236\";\r\n            var name;\r\n            if (isMvp)\r\n                name = new createjs.Text(p.name(), \"30px Arial\", nameCol);\r\n            else\r\n                name = new createjs.Text(p.name(), \"30px Arial\", col);\r\n            name.textAlign = 'center';\r\n            name.x = 90 + 60;\r\n            name.y = 200;\r\n            if (isMvp) {\r\n                name.x += 20;\r\n                name.y = 215;\r\n            }\r\n            ctn.addChild(name);\r\n            var eloScore;\r\n            var eloScoreText = '新秀';\r\n            if (p.gameCount() >= 3) {\r\n                eloScoreText = p.eloScore();\r\n            }\r\n            eloScore = new createjs.Text(eloScoreText, \"bold 32px Arial\", nameCol);\r\n            eloScore.textAlign = 'center';\r\n            eloScore.x = name.x;\r\n            eloScore.y = 245 + 30;\r\n            if (isMvp)\r\n                eloScore.y += 30;\r\n            ctn.addChild(eloScore);\r\n            var eloScoreDt = new createjs.Text(\"+\" + p.dtScore(), \"12px Arial\", col);\r\n            eloScoreDt.textAlign = 'left';\r\n            eloScoreDt.x = 140 + 60;\r\n            eloScoreDt.y = 260 + 30;\r\n            if (isMvp) {\r\n                eloScoreDt.x += 30;\r\n                eloScoreDt.y += 30;\r\n            }\r\n            ctn.addChild(eloScoreDt);\r\n            var winpercent = new createjs.Text(\"胜率\" + p.getWinPercent(), \"18px Arial\", col);\r\n            winpercent.textAlign = 'center';\r\n            winpercent.x = name.x;\r\n            winpercent.y = 320;\r\n            if (isMvp)\r\n                winpercent.y += 35;\r\n            ctn.addChild(winpercent);\r\n            var gameCount = new createjs.Text(\"场数\" + p.gameCount(), \"18px Arial\", col);\r\n            gameCount.textAlign = 'center';\r\n            gameCount.x = name.x;\r\n            gameCount.y = 350;\r\n            if (isMvp)\r\n                gameCount.y += 35;\r\n            ctn.addChild(gameCount);\r\n            var style = new createjs.Bitmap(p.getWinStyleIcon());\r\n            style.x = 110;\r\n            style.y = 370;\r\n            if (isMvp) {\r\n                style.x += 20;\r\n                style.y += 45;\r\n            }\r\n            ctn.addChild(style);\r\n            callback();\r\n        });\r\n        return ctn;\r\n    };\r\n    EventPanel.prototype.fadeOutWinPanel = function () {\r\n        console.log(this, \"show fade Out WinPanel\");\r\n        var ctn = this.ctn;\r\n        createjs.Tween.get(ctn).to({ alpha: 0 }, 200)\r\n            .call(function () {\r\n            ctn.alpha = 1;\r\n            ctn.removeAllChildren();\r\n        });\r\n    };\r\n    return EventPanel;\r\n}());\r\nexports.EventPanel = EventPanel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/stage/EventPanel.ts\n ** module id = 20\n ** module chunks = 0\n **/","\"use strict\";\r\nvar JsFunc_1 = require(\"../../../utils/JsFunc\");\r\nvar GameInfo_1 = require(\"../../../model/GameInfo\");\r\nvar Fx_1 = require(\"../../../utils/Fx\");\r\nvar Const_1 = require(\"../../../event/Const\");\r\nvar ScorePanel = (function () {\r\n    function ScorePanel(parent) {\r\n        this.timeOnSec = 0;\r\n        var scoreCtn = new createjs.Container();\r\n        this.ctn = scoreCtn;\r\n        scoreCtn.y = parent.stageHeight - 132;\r\n        parent.stage.addChild(scoreCtn);\r\n        var bg = new createjs.Bitmap('/img/panel/stage/scoreBg.png');\r\n        bg.x = 1;\r\n        scoreCtn.addChild(bg);\r\n        var timeText = new createjs.Text(\"99:99\", \"28px Arial\", \"#fff\");\r\n        timeText.x = parent.stageWidth * .5 - 31;\r\n        timeText.y = 100;\r\n        this.timeText = timeText;\r\n        scoreCtn.addChild(timeText);\r\n        var sheet = new createjs.SpriteSheet({\r\n            animations: {\r\n                \"0\": 1, \"1\": 2, \"2\": 3, \"3\": 4, \"4\": 5,\r\n                \"5\": 6, \"6\": 7, \"7\": 8, \"8\": 9, \"9\": 0\r\n            },\r\n            images: [\"/img/panel/stage/scoreNum.png\"],\r\n            frames: [[0, 0, 40, 54],\r\n                [41, 0, 40, 54],\r\n                [0, 55, 40, 54],\r\n                [41, 55, 40, 54],\r\n                [82, 0, 40, 54],\r\n                [82, 55, 40, 54],\r\n                [123, 0, 40, 54],\r\n                [123, 55, 40, 54],\r\n                [0, 110, 40, 54],\r\n                [41, 110, 40, 54]]\r\n        });\r\n        var px = 865;\r\n        var leftScoreNum = new createjs.BitmapText(\"0\", sheet);\r\n        leftScoreNum.letterSpacing = -2;\r\n        leftScoreNum.x = px;\r\n        leftScoreNum.y = 60;\r\n        this.leftScoreText = leftScoreNum;\r\n        this.leftScoreTextX = leftScoreNum.x;\r\n        scoreCtn.addChild(leftScoreNum);\r\n        var rightScoreNum = new createjs.BitmapText(\"0\", sheet);\r\n        rightScoreNum.letterSpacing = -2;\r\n        rightScoreNum.x = px + 160;\r\n        rightScoreNum.y = leftScoreNum.y;\r\n        this.rightScoreText = rightScoreNum;\r\n        this.rightScoreTextX = rightScoreNum.x;\r\n        scoreCtn.addChild(rightScoreNum);\r\n        this.leftCircleArr = [];\r\n        this.rightCircleArr = [];\r\n        var px = 675;\r\n        var py = 88;\r\n        for (var i = 0; i < 7; i++) {\r\n            var leftScoreBg = new createjs.Bitmap(\"/img/panel/stage/leftScoreBg.png\");\r\n            leftScoreBg.x = px + i * 20;\r\n            leftScoreBg.y = py;\r\n            scoreCtn.addChild(leftScoreBg);\r\n            var leftScore = new createjs.Bitmap(\"/img/panel/stage/leftScore.png\");\r\n            leftScore.x = leftScoreBg.x;\r\n            leftScore.y = leftScoreBg.y;\r\n            scoreCtn.addChild(leftScore);\r\n            this.leftCircleArr.push(leftScore);\r\n        }\r\n        px = 1090;\r\n        for (var i = 0; i < 7; i++) {\r\n            var rightScoreBg = new createjs.Bitmap(\"/img/panel/stage/rightScoreBg.png\");\r\n            rightScoreBg.x = px + i * 20;\r\n            rightScoreBg.y = py;\r\n            scoreCtn.addChild(rightScoreBg);\r\n            var rightScore = new createjs.Bitmap(\"/img/panel/stage/rightScore.png\");\r\n            rightScore.x = rightScoreBg.x;\r\n            rightScore.y = rightScoreBg.y;\r\n            scoreCtn.addChild(rightScore);\r\n            this.rightCircleArr.push(rightScore);\r\n        }\r\n        px = 770;\r\n        var lTxt = new createjs.Text(\"\", \"28px Arial\", \"#fff\");\r\n        lTxt.text = '0';\r\n        lTxt.textAlign = 'center';\r\n        lTxt.x = px;\r\n        lTxt.y = 22;\r\n        this.leftAvgEloScoreText = lTxt;\r\n        scoreCtn.addChild(lTxt);\r\n        var rTxt = new createjs.Text(\"\", \"28px Arial\", \"#fff\");\r\n        rTxt.text = '0';\r\n        rTxt.textAlign = 'center';\r\n        rTxt.x = lTxt.x + 385;\r\n        rTxt.y = lTxt.y;\r\n        this.rightAvgEloScoreText = rTxt;\r\n        scoreCtn.addChild(rTxt);\r\n    }\r\n    Object.defineProperty(ScorePanel.prototype, \"isBlueWin\", {\r\n        get: function () {\r\n            return Number(this.leftScoreText.text) > Number(this.rightScoreText.text);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScorePanel.prototype.setLeftScore = function (leftScore) {\r\n        this.leftScoreText.text = leftScore + \"\";\r\n        if (leftScore > 9)\r\n            this.leftScoreText.x = this.leftScoreTextX - 18;\r\n        else\r\n            this.leftScoreText.x = this.leftScoreTextX;\r\n        var len = this.leftCircleArr.length;\r\n        for (var i = 0; i < this.leftCircleArr.length; i++) {\r\n            if (i < leftScore) {\r\n                if (this.leftCircleArr[len - 1 - i].alpha == 0)\r\n                    Fx_1.blink(this.leftCircleArr[len - 1 - i]);\r\n            }\r\n            else {\r\n                createjs.Tween.get(this.leftCircleArr[len - 1 - i]).to({ alpha: 0 }, 200);\r\n            }\r\n        }\r\n    };\r\n    ScorePanel.prototype.setRightScore = function (rightScore) {\r\n        if (rightScore > 9)\r\n            this.rightScoreText.x = this.rightScoreTextX - 18;\r\n        else\r\n            this.rightScoreText.x = this.rightScoreTextX;\r\n        this.rightScoreText.text = rightScore + \"\";\r\n        var len = this.rightCircleArr.length;\r\n        for (var i = 0; i < len; i++) {\r\n            if (i < rightScore) {\r\n                if (this.rightCircleArr[i].alpha == 0)\r\n                    Fx_1.blink(this.rightCircleArr[i]);\r\n            }\r\n            else {\r\n                createjs.Tween.get(this.rightCircleArr[i]).to({ alpha: 0 }, 200);\r\n            }\r\n        }\r\n    };\r\n    ScorePanel.prototype.setAvgEloScore = function (data) {\r\n        this.leftAvgEloScoreText.text = data.left + \"\";\r\n        this.rightAvgEloScoreText.text = data.right + \"\";\r\n    };\r\n    ScorePanel.prototype.resetTimer = function () {\r\n        this.timeOnSec = 0;\r\n        this.timerState = Const_1.TimerState.PAUSE;\r\n        this.timeText.text = JsFunc_1.formatSecond(this.timeOnSec);\r\n    };\r\n    ScorePanel.prototype.toggleTimer1 = function () {\r\n        var _this = this;\r\n        if (this.timerId) {\r\n            clearInterval(this.timerId);\r\n            this.timerId = 0;\r\n            this.timerState = Const_1.TimerState.PAUSE;\r\n        }\r\n        else {\r\n            this.timerId = setInterval(function () {\r\n                _this.timeOnSec++;\r\n                _this.timeText.text = JsFunc_1.formatSecond(_this.timeOnSec);\r\n            }, 1000);\r\n            this.timerState = Const_1.TimerState.RUNNING;\r\n        }\r\n    };\r\n    ScorePanel.prototype.setTime = function (time, state) {\r\n        this.timeText.text = JsFunc_1.formatSecond(time);\r\n        this.timeOnSec = time;\r\n        if (state) {\r\n            this.toggleTimer1();\r\n        }\r\n    };\r\n    ScorePanel.prototype.init = function (gameInfo) {\r\n        this.setLeftScore(gameInfo.leftScore);\r\n        this.setRightScore(gameInfo.rightScore);\r\n        var gameInfoClone = new GameInfo_1.GameInfo(gameInfo);\r\n        this.setAvgEloScore(gameInfoClone.getAvgEloScore());\r\n    };\r\n    return ScorePanel;\r\n}());\r\nexports.ScorePanel = ScorePanel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/stage/ScorePanel.ts\n ** module id = 21\n ** module chunks = 0\n **/","\"use strict\";\r\nvar TeamInfo_1 = require(\"./TeamInfo\");\r\nvar PlayerInfo_1 = require(\"./PlayerInfo\");\r\nvar BaseInfo_1 = require(\"./BaseInfo\");\r\nvar Const_1 = require(\"../event/Const\");\r\nvar GameDoc = (function () {\r\n    function GameDoc() {\r\n        this.id = -1;\r\n        this.blueScore = 0;\r\n        this.redScore = 0;\r\n        this.mvp = 0;\r\n    }\r\n    return GameDoc;\r\n}());\r\nexports.GameDoc = GameDoc;\r\nvar GameInfo = (function () {\r\n    function GameInfo(gameDoc) {\r\n        this.id = 0;\r\n        this.winScore = 7;\r\n        this.leftScore = 0;\r\n        this.rightScore = 0;\r\n        this.leftFoul = 0;\r\n        this.rightFoul = 0;\r\n        this.time = 0;\r\n        this.timerState = 0;\r\n        this.straightScoreLeft = 0;\r\n        this.straightScoreStack = [];\r\n        this.straightScoreRight = 0;\r\n        this.playerInfoArr = new Array(8);\r\n        this.playerRecArr = [];\r\n        this._timer = null;\r\n        this.gameState = 0;\r\n        this.unLimitScore = 0;\r\n        if (gameDoc) {\r\n            BaseInfo_1.setPropTo(gameDoc, this);\r\n            var playerDocArr = this.playerInfoArr;\r\n            this.playerInfoArr = [];\r\n            for (var i = 0; i < playerDocArr.length; i++) {\r\n                this.playerInfoArr.push(new PlayerInfo_1.PlayerInfo(playerDocArr[i]));\r\n            }\r\n        }\r\n    }\r\n    GameInfo.prototype.getAvgEloScore = function () {\r\n        var sum = 0;\r\n        var count = 0;\r\n        var leftPlayerArr = this.getLeftTeam();\r\n        for (var i = 0; i < leftPlayerArr.length; i++) {\r\n            var obj = leftPlayerArr[i];\r\n            if (obj) {\r\n                count++;\r\n                sum += obj.eloScore();\r\n            }\r\n        }\r\n        var left = Math.floor(sum / count);\r\n        sum = 0;\r\n        count = 0;\r\n        var playerArr = this.getRightTeam();\r\n        for (var i = 0; i < playerArr.length; i++) {\r\n            var obj = playerArr[i];\r\n            if (obj) {\r\n                count++;\r\n                sum += obj.eloScore();\r\n            }\r\n        }\r\n        var right = Math.floor(sum / count);\r\n        return { left: left, right: right };\r\n    };\r\n    GameInfo.prototype.addLeftScore = function () {\r\n        if (this.unLimitScore === 1)\r\n            this.leftScore += 1;\r\n        else\r\n            this.leftScore = (this.leftScore + 1) % (this.winScore + 1);\r\n        this.pushStraightScore();\r\n        this.straightScoreRight = 0;\r\n        this.straightScoreLeft++;\r\n        if (this.leftScore == 0)\r\n            this.straightScoreLeft = 0;\r\n        return this.straightScoreLeft;\r\n    };\r\n    GameInfo.prototype.minLeftScore = function () {\r\n        if (this.unLimitScore === 1)\r\n            this.leftScore -= 1;\r\n        else\r\n            this.leftScore = (this.leftScore - 1) % (this.winScore + 1);\r\n        this.popStraightScore();\r\n    };\r\n    GameInfo.prototype.pushStraightScore = function () {\r\n        this.straightScoreStack.push({ left: this.straightScoreLeft, right: this.straightScoreRight });\r\n    };\r\n    GameInfo.prototype.popStraightScore = function () {\r\n        var stack = this.straightScoreStack.pop();\r\n        this.straightScoreLeft = stack.left;\r\n        this.straightScoreRight = stack.right;\r\n    };\r\n    GameInfo.prototype.minRightScore = function () {\r\n        if (this.unLimitScore === 1)\r\n            this.rightScore -= 1;\r\n        else\r\n            this.rightScore = (this.rightScore - 1) % (this.winScore + 1);\r\n        this.popStraightScore();\r\n    };\r\n    GameInfo.prototype.addRightScore = function () {\r\n        if (this.unLimitScore === 1)\r\n            this.rightScore += 1;\r\n        else\r\n            this.rightScore = (this.rightScore + 1) % (this.winScore + 1);\r\n        this.pushStraightScore();\r\n        this.straightScoreLeft = 0;\r\n        this.straightScoreRight++;\r\n        if (this.rightScore == 0)\r\n            this.straightScoreRight = 0;\r\n        return this.straightScoreRight;\r\n    };\r\n    GameInfo.prototype.getGameId = function () {\r\n        return this.id;\r\n    };\r\n    GameInfo.prototype.toggleTimer = function (state) {\r\n        var _this = this;\r\n        if (state) {\r\n            if (state === Const_1.TimerState.PAUSE) {\r\n                this.resetTimer();\r\n            }\r\n        }\r\n        else {\r\n            if (this._timer) {\r\n                this.resetTimer();\r\n            }\r\n            else {\r\n                this._timer = setInterval(function () {\r\n                    _this.time++;\r\n                }, 1000);\r\n                this.timerState = 1;\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(GameInfo.prototype, \"isFinish\", {\r\n        get: function () {\r\n            return this.gameState === GameInfo.GAME_STATE_SAVE;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GameInfo.prototype.resetTimer = function () {\r\n        clearInterval(this._timer);\r\n        this._timer = 0;\r\n        this.timerState = 0;\r\n    };\r\n    GameInfo.prototype.setPlayerInfoByIdx = function (pos, playerInfo) {\r\n        playerInfo.isBlue = (pos < 4);\r\n        playerInfo.isRed = !playerInfo.isBlue;\r\n        this.playerInfoArr[pos] = playerInfo;\r\n        return playerInfo;\r\n    };\r\n    GameInfo.prototype.setWinByMvpIdx = function (mvpIdx) {\r\n        var isBlueWin = (mvpIdx < 4);\r\n        this.mvpPlayerId = this.playerInfoArr[mvpIdx].id();\r\n        if (isBlueWin) {\r\n            return this.setLeftTeamWin();\r\n        }\r\n        else {\r\n            return this.setRightTeamWin();\r\n        }\r\n    };\r\n    GameInfo.prototype._setGameResult = function (isLeftWin) {\r\n        if (this.gameState === 0) {\r\n            var teamLeft = new TeamInfo_1.TeamInfo();\r\n            teamLeft.setPlayerArr(this.getLeftTeam());\r\n            var teamRight = new TeamInfo_1.TeamInfo();\r\n            teamRight.setPlayerArr(this.getRightTeam());\r\n            if (isLeftWin) {\r\n                teamLeft.beat2(teamRight, this.mvpPlayerId);\r\n                this._winTeam = teamLeft;\r\n                this._loseTeam = teamRight;\r\n            }\r\n            else {\r\n                teamRight.beat2(teamLeft, this.mvpPlayerId);\r\n                this._winTeam = teamRight;\r\n                this._loseTeam = teamLeft;\r\n            }\r\n            this.gameState = 1;\r\n        }\r\n        return this._winTeam;\r\n    };\r\n    GameInfo.prototype.getGameDoc = function () {\r\n        return {};\r\n    };\r\n    GameInfo.prototype.setLeftTeamWin = function () {\r\n        return this._setGameResult(true);\r\n    };\r\n    GameInfo.prototype.setRightTeamWin = function () {\r\n        return this._setGameResult(false);\r\n    };\r\n    GameInfo.prototype.getLeftTeam = function (start) {\r\n        if (start === void 0) { start = 0; }\r\n        var team = [];\r\n        for (var i = start; i < 4 + start; i++) {\r\n            var pInfo = this.playerInfoArr[i];\r\n            team.push(pInfo);\r\n            pInfo.isRed = (start > 0);\r\n        }\r\n        return team;\r\n    };\r\n    Object.defineProperty(GameInfo.prototype, \"isBlueWin\", {\r\n        get: function () {\r\n            return this.leftScore > this.rightScore;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GameInfo.prototype.getRightTeam = function () {\r\n        return this.getLeftTeam(4);\r\n    };\r\n    GameInfo.prototype.addRightFoul = function () {\r\n        this.rightFoul++;\r\n        return this.rightFoul;\r\n    };\r\n    GameInfo.prototype.minRightFoul = function () {\r\n        this.rightFoul--;\r\n        return this.rightFoul;\r\n    };\r\n    GameInfo.prototype.addLeftFoul = function () {\r\n        this.leftFoul++;\r\n        return this.leftFoul;\r\n    };\r\n    GameInfo.prototype.minLeftFoul = function () {\r\n        this.leftFoul--;\r\n        return this.leftFoul;\r\n    };\r\n    GameInfo.GAME_STATE_ING = 0;\r\n    GameInfo.GAME_STATE_FIN = 1;\r\n    GameInfo.GAME_STATE_SAVE = 2;\r\n    return GameInfo;\r\n}());\r\nexports.GameInfo = GameInfo;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/model/GameInfo.ts\n ** module id = 22\n ** module chunks = 0\n **/","\"use strict\";\r\nvar EloUtil_1 = require(\"../utils/EloUtil\");\r\nvar TeamInfo = (function () {\r\n    function TeamInfo() {\r\n        this.playerInfoArr = [];\r\n    }\r\n    TeamInfo.prototype.setPlayer = function (player, pos) {\r\n    };\r\n    TeamInfo.prototype.getPlayerInfoById = function (playerId) {\r\n        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n            var playerInfo = this.playerInfoArr[i];\r\n            if (playerInfo.id() == playerId) {\r\n                return playerInfo;\r\n            }\r\n        }\r\n    };\r\n    TeamInfo.prototype.length = function () {\r\n        return this.playerInfoArr.length;\r\n    };\r\n    TeamInfo.prototype.push = function (playerInfo) {\r\n        this.playerInfoArr.push(playerInfo);\r\n    };\r\n    TeamInfo.prototype.setScore = function (score) {\r\n        this.score = score;\r\n    };\r\n    TeamInfo.prototype.setName = function (name) {\r\n        this.name = name;\r\n    };\r\n    TeamInfo.prototype.clear = function () {\r\n        this.score = 0;\r\n    };\r\n    TeamInfo.prototype.setPlayerArr = function (playerArr) {\r\n        this.playerInfoArr.length = 0;\r\n        this.playerInfoArr = this.playerInfoArr.concat(playerArr);\r\n        this.score = 0;\r\n        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n            var player = this.playerInfoArr[i];\r\n            this.score += player.eloScore();\r\n        }\r\n        this.score /= this.playerInfoArr.length;\r\n        console.log(this, \"player score:\", this.score);\r\n    };\r\n    TeamInfo.prototype.beat = function (loserTeam) {\r\n        var win = EloUtil_1.EloUtil.classicMethod(this.score, loserTeam.score);\r\n        this.saveScore(win, true);\r\n        loserTeam.saveScore(-win, false);\r\n    };\r\n    TeamInfo.prototype.beat2 = function (loserTeam, mvpPlayerId) {\r\n        var winTeamScore = this.score;\r\n        var loseTeamScore = loserTeam.score;\r\n        function getScoreArr(playerInArr, teamScore, isWin, mvpId) {\r\n            if (mvpId === void 0) { mvpId = -1; }\r\n            var scoreArr = [];\r\n            for (var i = 0; i < playerInArr.length; i++) {\r\n                var playerInfo = playerInArr[i];\r\n                var score = EloUtil_1.EloUtil.classicMethod(playerInfo.eloScore(), teamScore);\r\n                if (playerInfo.id() == mvpId) {\r\n                    var teamWinScore = EloUtil_1.EloUtil.classicMethod(winTeamScore, loseTeamScore);\r\n                    score += Math.floor(0.25 * teamWinScore);\r\n                }\r\n                if (!isWin)\r\n                    score = -score;\r\n                scoreArr.push(score);\r\n            }\r\n            return scoreArr;\r\n        }\r\n        var winScoreArr = getScoreArr(this.playerInfoArr, loseTeamScore, true, mvpPlayerId);\r\n        var loseScoreArr = getScoreArr(loserTeam.playerInfoArr, winTeamScore, false);\r\n        this.saveScoreArr(winScoreArr, true);\r\n        loserTeam.saveScoreArr(loseScoreArr, false);\r\n    };\r\n    TeamInfo.prototype.mix2 = function (teamInfo) {\r\n        var tmp;\r\n        tmp = this.playerInfoArr[1];\r\n        this.playerInfoArr[1] = teamInfo.playerInfoArr[3];\r\n        teamInfo.playerInfoArr[3] = tmp;\r\n        tmp = this.playerInfoArr[3];\r\n        this.playerInfoArr[3] = teamInfo.playerInfoArr[2];\r\n        teamInfo.playerInfoArr[2] = tmp;\r\n    };\r\n    TeamInfo.prototype.getPercentage = function () {\r\n    };\r\n    TeamInfo.prototype.saveScore = function (score, isWin) {\r\n        this.score += score;\r\n        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n            var player = this.playerInfoArr[i];\r\n            player.saveScore(score, isWin);\r\n        }\r\n    };\r\n    TeamInfo.prototype.saveScoreArr = function (scoreArr, isWin) {\r\n        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n            var score = scoreArr[i];\r\n            this.score += score;\r\n            var player = this.playerInfoArr[i];\r\n            player.saveScore(score, isWin);\r\n        }\r\n    };\r\n    TeamInfo.prototype.getNewPlayerDataArr = function () {\r\n        var a = [];\r\n        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n            var playerInfo = this.playerInfoArr[i];\r\n            a.push(playerInfo.getPlayerData());\r\n        }\r\n        return a;\r\n    };\r\n    TeamInfo.prototype.getWinningPercent = function () {\r\n        var wp;\r\n        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n            var player = this.playerInfoArr[i];\r\n            wp += player.getCurWinningPercent();\r\n        }\r\n        wp /= this.playerInfoArr.length;\r\n        return wp;\r\n    };\r\n    return TeamInfo;\r\n}());\r\nexports.TeamInfo = TeamInfo;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/model/TeamInfo.ts\n ** module id = 23\n ** module chunks = 0\n **/","\"use strict\";\r\nexports.EloConf = {\r\n    score: 2000,\r\n    K: 32\r\n};\r\nvar EloUtil = (function () {\r\n    function EloUtil() {\r\n    }\r\n    EloUtil.classicMethod = function (winEloScore, loseEloScore) {\r\n        var Elo1 = winEloScore;\r\n        var Elo2 = loseEloScore;\r\n        var K = exports.EloConf.K;\r\n        var EloDifference = Elo2 - Elo1;\r\n        var percentage = 1 / (1 + Math.pow(10, EloDifference / 400));\r\n        var win = Math.round(K * (1 - percentage));\r\n        return win;\r\n    };\r\n    EloUtil.playerToWinMethod = function (winEloScore, loseEloScore) {\r\n    };\r\n    return EloUtil;\r\n}());\r\nexports.EloUtil = EloUtil;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/utils/EloUtil.ts\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = \"<style>\\r\\n    #stage-panel {\\r\\n        position: absolute;\\r\\n        width: 950px;\\r\\n        left: 100px;\\r\\n        top: 80px;\\r\\n        opacity: .8;\\r\\n    }\\r\\n</style>\\r\\n<div id=\\\"stage-panel\\\" class=\\\"card-panel grey lighten-3\\\" v-if=\\\"op\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\" v-for=\\\"playerInfo in playerInfoArr\\\">\\r\\n            <div class=\\\"col\\\" style=\\\"width: 85px\\\">\\r\\n                <img src=\\\"/img/panel/stage/blue.png\\\" id=\\\"playerImg{{$index}}\\\" style=\\\"width: 80px\\\">\\r\\n                <input id=\\\"player{{$index}}\\\" type=\\\"text\\\" @keyup.enter=\\\"onQueryPlayer($index)\\\" style=\\\"width: 75px\\\">\\r\\n                <input id=\\\"playerNum{{$index}}\\\" type=\\\"text\\\" @keyup.enter=\\\"onUpdatePlayerNum($index)\\\"\\r\\n                       style=\\\"width: 35px\\\">\\r\\n                <a class=\\\"waves-effect waves-light btn\\\" style=\\\"width: 75px;height: 25px\\\"\\r\\n                   @click=\\\"onUpdatePlayer($index)\\\">↓</a>\\r\\n                <p>\\r\\n                    <input name=\\\"mvp\\\" type=\\\"radio\\\" id=\\\"mvp{{$index}}\\\" value=\\\"{{$index}}\\\" v-model=\\\"mvpIdx\\\"/>\\r\\n                    <label for=\\\"mvp{{$index}}\\\">mvp{{$index}}</label>\\r\\n                    <!--<input id=\\\"eloScore{{$index}}\\\" type=\\\"text\\\" @keyup.enter=\\\"onSetEloScore($index)\\\" style=\\\"width: 75px\\\">-->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        game id:{{gameId}}\\r\\n        ````````````````````````````````````````\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onStarting\\\">starting line</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onUpdateBackNum\\\">back num</a>\\r\\n        ````````````````````````````````````````\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"display: inline-flex\\\">\\r\\n        <div class=\\\"switch\\\">\\r\\n            <label>\\r\\n                pause\\r\\n                <input type=\\\"checkbox\\\" @click=\\\"onToggleTimer\\\">\\r\\n                <span class=\\\"lever\\\"></span>\\r\\n                start::::::::\\r\\n            </label>\\r\\n        </div>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onResetTimer\\\" style=\\\"height: 35px\\\">Reset</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddLeftScore\\\">Left++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinLeftScore\\\">Left--</a>\\r\\n        <input type=\\\"checkbox\\\" id=\\\"test5\\\"/>\\r\\n        <label for=\\\"test5\\\">///////不限制分数\\\\\\\\\\\\\\\\\\\\\\\\\\\\</label>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinRightScore\\\">Right--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddRightScore\\\">Right++</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onShowWin\\\">Show Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onHideWin\\\">Hide Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onSubmitGame\\\">Submit Game</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onRefresh\\\">Refresh</a>\\r\\n    </div>\\r\\n</div>\\r\\n<div style=\\\"display: none\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinBlue.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinBlueMvp.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinRed.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinRedMvp.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/winPanelTitleBlue.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/winPanelTitleRed.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/fengWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/huoWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/shanWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/linWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/newPlayer.png\\\">\\r\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/stage/stage-panel.html\n ** module id = 25\n ** module chunks = 0\n **/","Object.defineProperty(exports, '__esModule', {\n  value: true\n})\n\nvar Vue = require('vue')\n\nvar internalHooks = [\n  'data',\n  'el',\n  'init',\n  'created',\n  'ready',\n  'beforeCompile',\n  'compiled',\n  'beforeDestroy',\n  'destroyed',\n  'attached',\n  'detached',\n  'activate'\n]\n\nfunction componentFactory (Component, options) {\n  if (!options) {\n    options = {}\n  }\n  options.name = options.name || Component.name\n  // prototype props.\n  var proto = Component.prototype\n  Object.getOwnPropertyNames(proto).forEach(function (key) {\n    if (key === 'constructor') {\n      return\n    }\n    // hooks\n    if (internalHooks.indexOf(key) > -1) {\n      options[key] = proto[key]\n      return\n    }\n    var descriptor = Object.getOwnPropertyDescriptor(proto, key)\n    if (typeof descriptor.value === 'function') {\n      // methods\n      (options.methods || (options.methods = {}))[key] = descriptor.value\n    } else if (descriptor.get || descriptor.set) {\n      // computed properties\n      (options.computed || (options.computed = {}))[key] = {\n        get: descriptor.get,\n        set: descriptor.set\n      }\n    }\n  })\n  // find super\n  var superProto = Object.getPrototypeOf(Component.prototype)\n  var Super = superProto instanceof Vue\n    ? superProto.constructor\n    : Vue\n  return Super.extend(options)\n}\n\nfunction decorator (options) {\n  if (typeof options === 'function') {\n    return componentFactory(options)\n  }\n  return function (Component) {\n    return componentFactory(Component, options)\n  }\n}\n\nexports.default = decorator\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-class-component/index.js\n ** module id = 26\n ** module chunks = 0\n **/","\"use strict\";\r\nexports.PanelId = {\r\n    stagePanel: 'stage',\r\n    winPanel: 'win',\r\n    actPanel: 'act',\r\n    screenPanel: 'screen',\r\n    playerPanel: 'player'\r\n};\r\nexports.ServerConst = {\r\n    SEND_ASYNC: true,\r\n    DEF_AVATAR: '/img/panel/stage/blue.png'\r\n};\r\nexports.ViewConst = {\r\n    STAGE_WIDTH: 1920,\r\n    STAGE_HEIGHT: 1080\r\n};\r\nexports.TimerState = {\r\n    START_STR: 'start',\r\n    PAUSE_STR: 'pause',\r\n    PAUSE: 0,\r\n    RUNNING: 1\r\n};\r\nexports.ViewEvent = {\r\n    PLAYER_EDIT: 'edit player',\r\n    STRAIGHT3_LEFT: 'STRAIGHT3_LEFT',\r\n    STRAIGHT3_RIGHT: 'STRAIGHT3_RIGHT'\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/event/Const.ts\n ** module id = 27\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventDispatcher_1 = require(\"./EventDispatcher\");\r\n(function (CommandId) {\r\n    CommandId[CommandId[\"ShowConsoleWin\"] = 100000] = \"ShowConsoleWin\";\r\n    CommandId[CommandId[\"toggleTracker\"] = 100001] = \"toggleTracker\";\r\n    CommandId[CommandId[\"toggleBallRolling\"] = 100002] = \"toggleBallRolling\";\r\n    CommandId[CommandId[\"toggleTimer\"] = 100003] = \"toggleTimer\";\r\n    CommandId[CommandId[\"cs_toggleTimer\"] = 100004] = \"cs_toggleTimer\";\r\n    CommandId[CommandId[\"resetTimer\"] = 100005] = \"resetTimer\";\r\n    CommandId[CommandId[\"cs_resetTimer\"] = 100006] = \"cs_resetTimer\";\r\n    CommandId[CommandId[\"disableTracker\"] = 100007] = \"disableTracker\";\r\n    CommandId[CommandId[\"updateLeftScore\"] = 100008] = \"updateLeftScore\";\r\n    CommandId[CommandId[\"cs_addLeftScore\"] = 100009] = \"cs_addLeftScore\";\r\n    CommandId[CommandId[\"updateRightScore\"] = 100010] = \"updateRightScore\";\r\n    CommandId[CommandId[\"cs_addRightScore\"] = 100011] = \"cs_addRightScore\";\r\n    CommandId[CommandId[\"minLeftScore\"] = 100012] = \"minLeftScore\";\r\n    CommandId[CommandId[\"cs_minLeftScore\"] = 100013] = \"cs_minLeftScore\";\r\n    CommandId[CommandId[\"minRightScore\"] = 100014] = \"minRightScore\";\r\n    CommandId[CommandId[\"cs_minRightScore\"] = 100015] = \"cs_minRightScore\";\r\n    CommandId[CommandId[\"updateLeftFoul\"] = 100016] = \"updateLeftFoul\";\r\n    CommandId[CommandId[\"cs_addLeftFoul\"] = 100017] = \"cs_addLeftFoul\";\r\n    CommandId[CommandId[\"cs_minLeftFoul\"] = 100018] = \"cs_minLeftFoul\";\r\n    CommandId[CommandId[\"updateRightFoul\"] = 100019] = \"updateRightFoul\";\r\n    CommandId[CommandId[\"cs_addRightFoul\"] = 100020] = \"cs_addRightFoul\";\r\n    CommandId[CommandId[\"cs_minRightFoul\"] = 100021] = \"cs_minRightFoul\";\r\n    CommandId[CommandId[\"stageFadeOut\"] = 100022] = \"stageFadeOut\";\r\n    CommandId[CommandId[\"cs_fadeOut\"] = 100023] = \"cs_fadeOut\";\r\n    CommandId[CommandId[\"playerScore\"] = 100024] = \"playerScore\";\r\n    CommandId[CommandId[\"cs_playerScore\"] = 100025] = \"cs_playerScore\";\r\n    CommandId[CommandId[\"stageFadeIn\"] = 100026] = \"stageFadeIn\";\r\n    CommandId[CommandId[\"cs_stageFadeIn\"] = 100027] = \"cs_stageFadeIn\";\r\n    CommandId[CommandId[\"moveStagePanel\"] = 100028] = \"moveStagePanel\";\r\n    CommandId[CommandId[\"cs_moveStagePanel\"] = 100029] = \"cs_moveStagePanel\";\r\n    CommandId[CommandId[\"updatePlayer\"] = 100030] = \"updatePlayer\";\r\n    CommandId[CommandId[\"cs_updatePlayer\"] = 100031] = \"cs_updatePlayer\";\r\n    CommandId[CommandId[\"updatePlayerAll\"] = 100032] = \"updatePlayerAll\";\r\n    CommandId[CommandId[\"cs_updatePlayerAll\"] = 100033] = \"cs_updatePlayerAll\";\r\n    CommandId[CommandId[\"cs_updatePlayerBackNum\"] = 100034] = \"cs_updatePlayerBackNum\";\r\n    CommandId[CommandId[\"updatePlayerBackNum\"] = 100035] = \"updatePlayerBackNum\";\r\n    CommandId[CommandId[\"fadeInNotice\"] = 100036] = \"fadeInNotice\";\r\n    CommandId[CommandId[\"cs_fadeInNotice\"] = 100037] = \"cs_fadeInNotice\";\r\n    CommandId[CommandId[\"cs_resetGame\"] = 100038] = \"cs_resetGame\";\r\n    CommandId[CommandId[\"cs_unLimitScore\"] = 100039] = \"cs_unLimitScore\";\r\n    CommandId[CommandId[\"unLimitScore\"] = 100040] = \"unLimitScore\";\r\n    CommandId[CommandId[\"fadeInWinPanel\"] = 100041] = \"fadeInWinPanel\";\r\n    CommandId[CommandId[\"cs_fadeInWinPanel\"] = 100042] = \"cs_fadeInWinPanel\";\r\n    CommandId[CommandId[\"fadeOutWinPanel\"] = 100043] = \"fadeOutWinPanel\";\r\n    CommandId[CommandId[\"cs_fadeOutWinPanel\"] = 100044] = \"cs_fadeOutWinPanel\";\r\n    CommandId[CommandId[\"saveGameRec\"] = 100045] = \"saveGameRec\";\r\n    CommandId[CommandId[\"cs_saveGameRec\"] = 100046] = \"cs_saveGameRec\";\r\n    CommandId[CommandId[\"cs_queryPlayerByPos\"] = 100047] = \"cs_queryPlayerByPos\";\r\n    CommandId[CommandId[\"fadeInPlayerPanel\"] = 100048] = \"fadeInPlayerPanel\";\r\n    CommandId[CommandId[\"cs_fadeInPlayerPanel\"] = 100049] = \"cs_fadeInPlayerPanel\";\r\n    CommandId[CommandId[\"fadeOutPlayerPanel\"] = 100050] = \"fadeOutPlayerPanel\";\r\n    CommandId[CommandId[\"cs_fadeOutPlayerPanel\"] = 100051] = \"cs_fadeOutPlayerPanel\";\r\n    CommandId[CommandId[\"movePlayerPanel\"] = 100052] = \"movePlayerPanel\";\r\n    CommandId[CommandId[\"cs_movePlayerPanel\"] = 100053] = \"cs_movePlayerPanel\";\r\n    CommandId[CommandId[\"straightScore3\"] = 100054] = \"straightScore3\";\r\n    CommandId[CommandId[\"straightScore5\"] = 100055] = \"straightScore5\";\r\n    CommandId[CommandId[\"initPanel\"] = 100056] = \"initPanel\";\r\n    CommandId[CommandId[\"cs_fadeInActivityPanel\"] = 100057] = \"cs_fadeInActivityPanel\";\r\n    CommandId[CommandId[\"fadeInActivityPanel\"] = 100058] = \"fadeInActivityPanel\";\r\n    CommandId[CommandId[\"cs_fadeInNextActivity\"] = 100059] = \"cs_fadeInNextActivity\";\r\n    CommandId[CommandId[\"fadeInNextActivity\"] = 100060] = \"fadeInNextActivity\";\r\n    CommandId[CommandId[\"cs_fadeInActivityExGame\"] = 100061] = \"cs_fadeInActivityExGame\";\r\n    CommandId[CommandId[\"fadeInActivityExGame\"] = 100062] = \"fadeInActivityExGame\";\r\n    CommandId[CommandId[\"cs_fadeOutActivityPanel\"] = 100063] = \"cs_fadeOutActivityPanel\";\r\n    CommandId[CommandId[\"fadeOutActivityPanel\"] = 100064] = \"fadeOutActivityPanel\";\r\n    CommandId[CommandId[\"cs_startGame\"] = 100065] = \"cs_startGame\";\r\n    CommandId[CommandId[\"cs_restartGame\"] = 100066] = \"cs_restartGame\";\r\n    CommandId[CommandId[\"cs_fadeInRankPanel\"] = 100067] = \"cs_fadeInRankPanel\";\r\n    CommandId[CommandId[\"fadeInRankPanel\"] = 100068] = \"fadeInRankPanel\";\r\n    CommandId[CommandId[\"cs_fadeInNextRank\"] = 100069] = \"cs_fadeInNextRank\";\r\n    CommandId[CommandId[\"fadeInNextRank\"] = 100070] = \"fadeInNextRank\";\r\n    CommandId[CommandId[\"cs_setGameComing\"] = 100071] = \"cs_setGameComing\";\r\n    CommandId[CommandId[\"setGameComing\"] = 100072] = \"setGameComing\";\r\n    CommandId[CommandId[\"cs_fadeOutRankPanel\"] = 100073] = \"cs_fadeOutRankPanel\";\r\n    CommandId[CommandId[\"fadeOutRankPanel\"] = 100074] = \"fadeOutRankPanel\";\r\n    CommandId[CommandId[\"cs_fadeInCountDown\"] = 100075] = \"cs_fadeInCountDown\";\r\n    CommandId[CommandId[\"fadeInCountDown\"] = 100076] = \"fadeInCountDown\";\r\n    CommandId[CommandId[\"cs_fadeOutCountDown\"] = 100077] = \"cs_fadeOutCountDown\";\r\n    CommandId[CommandId[\"fadeOutCountDown\"] = 100078] = \"fadeOutCountDown\";\r\n    CommandId[CommandId[\"cs_inScreenScore\"] = 100079] = \"cs_inScreenScore\";\r\n    CommandId[CommandId[\"inScreenScore\"] = 100080] = \"inScreenScore\";\r\n    CommandId[CommandId[\"cs_findPlayerData\"] = 100081] = \"cs_findPlayerData\";\r\n})(exports.CommandId || (exports.CommandId = {}));\r\nvar CommandId = exports.CommandId;\r\nvar CommandItem = (function () {\r\n    function CommandItem(id) {\r\n        this.id = id;\r\n    }\r\n    return CommandItem;\r\n}());\r\nvar Command = (function (_super) {\r\n    __extends(Command, _super);\r\n    function Command() {\r\n        _super.call(this);\r\n        this.cmdArr = [];\r\n        this.newCmd(CommandId.updateLeftScore, \"addLeftScore\");\r\n        this.newCmd(CommandId.updateRightScore, \"addRightScore\");\r\n        this.newCmd(CommandId.toggleTracker, \"toggleTracker\");\r\n        this.newCmd(CommandId.toggleTimer, \"toggleTimer\");\r\n        this.newCmd(CommandId.toggleBallRolling, \"toggleBallRolling\");\r\n        this.newCmd(CommandId.disableTracker, \"disableTracker\");\r\n    }\r\n    Command.prototype.newCmd = function (id, name, desc) {\r\n        var ci = new CommandItem(id);\r\n        ci.name = name;\r\n        ci.desc = desc;\r\n        this.cmdArr.push(ci);\r\n    };\r\n    return Command;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.Command = Command;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/event/Command.ts\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = \"<style>\\r\\n    #stage-panel {\\r\\n        /*position: absolute;*/\\r\\n        /*width: 950px;*/\\r\\n        /*left: 100px;*/\\r\\n        /*top: 80px;*/\\r\\n        /*opacity: .8;*/\\r\\n        /*zoom: 2;*/\\r\\n    }\\r\\n</style>\\r\\n<div id=\\\"stage-panel\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        game id:{{gameId}}\\r\\n        ````````````````````````````````````````\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onStarting\\\">starting line</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onUpdateBackNum\\\">back num</a>\\r\\n        ````````````````````````````````````````\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"display: inline-flex\\\">\\r\\n        <div class=\\\"switch\\\">\\r\\n            <label>\\r\\n                pause\\r\\n                <input type=\\\"checkbox\\\" @click=\\\"onToggleTimer\\\">\\r\\n                <span class=\\\"lever\\\"></span>\\r\\n                start::::::::\\r\\n            </label>\\r\\n        </div>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onResetTimer\\\" style=\\\"height: 35px\\\">Reset</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddLeftScore\\\">Left++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinLeftScore\\\">Left--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddLeftFoul\\\">Foul++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinLeftFoul\\\">Foul--</a>\\r\\n        <input type=\\\"checkbox\\\" id=\\\"test5\\\"/>\\r\\n        <label for=\\\"test5\\\">///////不限制分数\\\\\\\\\\\\\\\\\\\\\\\\\\\\</label>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinRightScore\\\">Right--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddRightScore\\\">Right++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinRightFoul\\\">Foul--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddRightFoul\\\">Foul++</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onShowWin\\\">Show Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onHideWin\\\">Hide Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onSubmitGame\\\">Submit Game</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onRefresh\\\">Refresh</a>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onComingActivity\\\">Coming Act</a>\\r\\n    </div>\\r\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/mobile/stage-panel-mobile.html\n ** module id = 29\n ** module chunks = 0\n **/"],"sourceRoot":""}