{"version":3,"sources":["webpack:///js/mobile.js","webpack:///webpack/bootstrap da1dd0a2ce8ddd7dfb64","webpack:///./src/mobile/index.ts","webpack:///../YuanTV3/src/view/VueEx.ts","webpack:///../YuanTV3/~/vue/dist/vue.common.js","webpack:///../YuanTV3/~/vue-class-component/index.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/vue-resource/dist/vue-resource.common.js","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./src/mobile/StagePanelViewMobile.ts","webpack:///../YuanTV3/src/view/panel/stage/StagePanelView.ts","webpack:///../YuanTV3/src/event/Command.ts?d522","webpack:///../YuanTV3/src/event/EventDispatcher.ts","webpack:///../YuanTV3/src/view/panel/BasePanelView.ts","webpack:///../YuanTV3/src/view/VueEx.ts?b6a8","webpack:///../YuanTV3/src/event/Const.ts?6aa7","webpack:///../YuanTV3/src/model/PlayerInfo.ts","webpack:///../YuanTV3/src/model/BaseInfo.ts","webpack:///../YuanTV3/src/view/panel/stage/PlayerPanel.ts","webpack:///../YuanTV3/src/view/panel/render/PlayerRender.ts","webpack:///../YuanTV3/src/utils/JsFunc.ts","webpack:///../YuanTV3/src/utils/Fx.ts","webpack:///../YuanTV3/src/view/panel/stage/EventPanel.ts","webpack:///../YuanTV3/src/view/panel/stage/ScorePanel.ts","webpack:///../YuanTV3/src/model/GameInfo.ts","webpack:///../YuanTV3/src/model/TeamInfo.ts","webpack:///../YuanTV3/src/utils/EloUtil.ts","webpack:///../YuanTV3/src/view/panel/stage/stage-panel.html","webpack:///./~/vue-class-component/index.js","webpack:///../YuanTV3/src/event/Const.ts","webpack:///../YuanTV3/src/event/Command.ts","webpack:///./src/mobile/stage-panel-mobile.html","webpack:///./src/mobile/setting/Setting.ts","webpack:///./src/mobile/setting/setting.html","webpack:///./src/model/Const.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","onDeviceReady","console","log","router","start","MobileView","__extends","this","d","b","__","constructor","hasOwnProperty","prototype","Object","create","StagePanelViewMobile_1","Setting_1","Vue","_super","apply","arguments","ready","connect","use","VueRouter","Const_1","map","/","component","Setting","name","/panel/stage/op","StagePanelViewMobile","/setting","afterEach","transition","toPath","to","path","app","isOp","test","$on","EventId","setting_serverIPChanged","ip","document","addEventListener","vue_class_component_1","Component","VueEx","$parentMethods","$parent","$options","methods","getAttr","e","propName","str","target","attributes","a","split","length","post","url","data","option","$http","getElem","val","_0","getElementById","substr","global","set","obj","key","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","i","vm","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","charCodeAt","_toString","value","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","ctx","l","toArray","list","ret","Array","extend","from","keys","isObject","isPlainObject","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","indexOf","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","undefined","_keymap","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","processFilterArg","dir","filters","push","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","el","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","__v_trans","hooks","transitionEndEvent","_isCompiled","action","query","querySelector","inDoc","node","doc","ownerDocument","documentElement","parent","parentNode","nodeType","contains","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","event","useCapture","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","guardProps","props","isArray","type","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","Math","floor","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","forEach","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","update","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","some","$broadcast","source","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","search","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","unshift","install","mixin","definition","inBrowser","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","isIos","isWechat","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","shift","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","_this","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version","componentFactory","proto","internalHooks","superProto","getPrototypeOf","decorator","mixinOptions","literalValueRE$1","commentMatch","commentRE","noop$1","isIE","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","Promise$2","executor","state","PENDING","deferred","promise","x","resolve","r","reject","Promise$1","PromiseObj","Util","msg","error","isBoolean","isFunction","isFormData","FormData","when","fulfilled","rejected","then","opts","merge","$vm","each","array","_merge","defaults","_assign","root","urlParams","Url","expand","variables","tmpl","expanded","vars","operators","operator","values","variable","getValues","separator","encodeReserved","modifier","isDefined","substring","encodeValue","isKeyOperator","encodeURIComponent","part","encodeURI","transform","transforms","serialize","plain","xdrClient","request","xdr","XDomainRequest","response","respondWith","responseText","status","statusText","abort","getUrl","onload","onerror","ontimeout","onprogress","send","getBody","cors","crossOrigin","SUPPORTS_CORS","client","emulateHTTP","requestUrl","protocol","ORIGIN_URL","emulateJSON","headers","contentType","jsonpClient","script","jsonp","callback","random","header","assign","Http","common","custom","clearTimeout","xhrClient","xhr","XMLHttpRequest","parseHeaders","getAllResponseHeaders","progress","upload","credentials","withCredentials","setRequestHeader","row","Client","reqHandlers","pop","resHandlers","sendRequest","interceptors","Request","ok","Error","Resource","resource","http","Promise","$url","$resource","$promise","RESOLVED","REJECTED","all","iterable","resolver","race","TypeError","onResolved","onRejected","ie","documentMode","escape","href","port","hostname","pathname","location","classCallCheck","instance","Constructor","Response","blob","Blob","CUSTOM_HEADERS","X-Requested-With","COMMON_HEADERS","Accept","JSON_CONTENT_TYPE","Content-Type","patch","Target","matcher","delegate","Matcher","routes","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","len","route","eachRoute","baseRoute","binding","addRouteCallback","noWarning","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","recognizeChar","RecognizeResults","queryParams","findHandler","regex","captures","currentCapture","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","warn$1","resolvePath","base","relative","stack","isPromise","getRouteConfig","resolveAsyncComponent","exports$1","mapParams","genQuery","canReuse","view","canReuseFn","canDeactivate","fromComponent","expectBoolean","canActivate","aborted","deactivate","callHooks","reuse","activateQueue","saveChildView","activateHook","dataHook","waitForData","activated","loading","$loadingRouteData","_routerView","cachedChildView","_keepAliveRouterView","childView","_rendered","_transitionOnLoad","setCurrent","afterData","afterActivate","loadData","postActivate","processData","promises","resolvedVal","isPlainOjbect","applyOverride","_Vue$util","_parent","$router","$route","_children","_defineMeta","hooksToMergeRE","View","componentDef","viewDef","_isDynamicLiteral","parentView","_rootView","_currentTransition","elementDirective","Link","sameOrigin","link","toggleClasses","onPriority","LINK_UPDATE","activeId","childLinks","existingId","activeIds","updateClasses","onRouteUpdate","onClick","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","go","history","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","queryStringRE","isAbsolute","formatPath","_linkActiveClass","dest","trailingSlashRE","guardComponent","comp","babelHelpers","willAddRoute","addChild","contextEntered","specials","validChars","generate","invalidChars","repeat","isEqual","chars","returned","oCreate","F","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","solutions","hashRE","HTML5History","onChange","baseEl","replaceState","pos","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","formattedPath","isAbsoloute","AbstractHistory","currentPath","RouteTransition","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","reverse","reuseQueue","runQueue","_onTransitionValidated","_view","step","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","nextWithData","exposed","internalKeysRE","Route","_recognizer","_notFoundHandler","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","_addAlias","beforeEach","App","_appContainer","Ctor","_appConstructor","_location","generatedPath","currentParams","targetParams","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","scrollX","offsetTop","externalVue","__decorate","decorators","desc","Reflect","decorate","__metadata","v","metadata","StagePanelView_1","Command_1","Const_2","opReq","cmdId","param","appModel","PanelId","stagePanel","initIO","io","onToggleTimer","CommandId","cs_toggleTimer","onResetTimer","cs_resetTimer","onAddLeftScore","cs_addLeftScore","onAddRightScore","cs_addRightScore","onQueryPlayer","idx","queryId","playerDoc","avatar","onUpdatePlayerNum","backNum","cs_updatePlayerBackNum","onStarting","playerIdArr","backNumArr","cs_updatePlayerAll","onSetEloScore","eloScore","playerPanel","setEloScore","onUpdateBackNum","onUpdatePlayer","cs_updatePlayer","playerId","onMinRightScore","cs_minRightScore","onMinLeftScore","cs_minLeftScore","onShowWin","mvpIdx","isBlueMvp","scorePanel","isBlueWin","alert","TimerState","PAUSE","cs_fadeInWinPanel","onHideWin","cs_fadeOutWinPanel","onSubmitGame","date","dateTime","getTime","cs_saveGameRec","isSubmited","onAddLeftFoul","cs_addLeftFoul","onMinLeftFoul","cs_minLeftFoul","onMinRightFoul","cs_minRightFoul","onAddRightFoul","cs_addRightFoul","onComingActivity","cs_setGameComing","default","timerName","gameId","playerInfoArr","StagePanelView","BasePanelView_1","PlayerInfo_1","PlayerPanel_1","EventPanel_1","ScorePanel_1","pid","isInitCanvas","initPanel","isInit","initStage","gameInfo","updateLeftScore","setLeftScore","leftScore","updateRightScore","setRightScore","rightScore","straightScore3","team","ViewEvent","STRAIGHT3_LEFT","eventPanel","fadeInStraight3","STRAIGHT3_RIGHT","toggleTimer","START_STR","PAUSE_STR","toggleTimer1","resetTimer","updatePlayer","setPlayer","PlayerInfo","setAvgEloScore","avgEloScore","updatePlayerAll","playerInfo","fadeInWinPanel","teamInfo","mvpId","fadeOutWinPanel","updatePlayerBackNum","playerCardArr","setBackNumber","gameDoc","ScorePanel","PlayerPanel","EventPanel","playerData","onRefresh","reload","BasePanelView","EventDispatcher_1","CommandItem","Command","cmdArr","newCmd","toggleTracker","toggleBallRolling","disableTracker","ci","EventDispatcher","_func","_funcId","broadcastId","broadcast","proxy","_i","funcId","removeAll","VueEx_1","initCanvas","stageWidth","ViewConst","STAGE_WIDTH","stageHeight","STAGE_HEIGHT","canvas","stage","createjs","Stage","autoClear","Ticker","framerate","ctn","Container","panel","winPanel","actPanel","screenPanel","ServerConst","SEND_ASYNC","DEF_AVATAR","RUNNING","PLAYER_EDIT","BaseInfo_1","PlayerDoc","phone","weight","dtScore","activityId","gameRec","loseGameCount","winGameCount","isRed","isMvp","backNumber","obj2Class","setPlayerInfoFromData","getPlayerData","winPercent","gameCount","winPercentStr","winpercent","getWinPercent","getStyleIcon","getWinStyleIcon","getRec","saveScore","isWin","getCurWinningPercent","BaseInfo","setPropTo","isdef","paramName","BaseDoc","PlayerRender_1","px","py","invert","playerCard","StagePlayerCard","delayShow","setPlayerInfo","isBlue","JsFunc_1","Fx_1","scale","isDelayShow","_delayShowEnd","setName","nameText","eloScoreText","backNumText","setStyle","_styleCtn","removeAllChildren","styleIcon","Bitmap","_isBluePath","avatarFrame","avatarCtn","avatarMask","Shape","sx","graphics","beginFill","moveTo","lineTo","avatarPath","loadImg","avatarBmp","mask","blink","alpha","scaleX","scaleY","getBounds","Text","textAlign","eloText","newPlayerIcon","styleCtn","Tween","delayCall","newScoreText","sheet","SpriteSheet","animations","1","2","3","4","5","6","7","8","9","images","frames","BitmapText","ascendingProp","descendingProp","mapToSortArray","sortFunc","mapToArr","arrCountSame","arrA","arrB","arrUniqueFilter","path1","img","Image","loadImgArr","pathArr","onLoadImg","combineArr","num","formatSecond","sec","minStr","secStr","min","strMin","strSec","time","loop","isBusy","basePath","txt3","bound","mpvId","mvp","modal","drawRect","playerCtn","isRedWin","titlePath","titleCtn","title","prePlayerIsMvp","pInfo","getWinPlayerCard","bgPath","bg","nameCol","eloScoreDt","GameInfo_1","timeOnSec","scoreCtn","timeText","leftScoreNum","letterSpacing","leftScoreText","leftScoreTextX","rightScoreNum","rightScoreText","rightScoreTextX","leftCircleArr","rightCircleArr","leftScoreBg","rightScoreBg","lTxt","leftAvgEloScoreText","rTxt","rightAvgEloScoreText","timerState","timerId","clearInterval","setInterval","setTime","gameInfoClone","GameInfo","getAvgEloScore","TeamInfo_1","GameDoc","blueScore","redScore","winScore","leftFoul","rightFoul","straightScoreLeft","straightScoreStack","straightScoreRight","playerRecArr","_timer","gameState","unLimitScore","playerDocArr","sum","leftPlayerArr","getLeftTeam","playerArr","getRightTeam","addLeftScore","pushStraightScore","minLeftScore","popStraightScore","minRightScore","addRightScore","getGameId","GAME_STATE_SAVE","setPlayerInfoByIdx","setWinByMvpIdx","mvpPlayerId","setLeftTeamWin","setRightTeamWin","_setGameResult","isLeftWin","teamLeft","TeamInfo","setPlayerArr","teamRight","beat2","_winTeam","_loseTeam","getGameDoc","addRightFoul","minRightFoul","addLeftFoul","minLeftFoul","GAME_STATE_ING","GAME_STATE_FIN","EloUtil_1","player","getPlayerInfoById","setScore","score","beat","loserTeam","win","EloUtil","classicMethod","getScoreArr","playerInArr","teamScore","scoreArr","teamWinScore","winTeamScore","loseTeamScore","winScoreArr","loseScoreArr","saveScoreArr","mix2","getPercentage","getNewPlayerDataArr","getWinningPercent","wp","EloConf","K","winEloScore","loseEloScore","Elo1","Elo2","EloDifference","percentage","pow","round","playerToWinMethod","onServerIP","serverIP","AppModel"],"mappings":"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","file":"js/mobile.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar StagePanelViewMobile_1 = __webpack_require__(7);\r\n\tvar Setting_1 = __webpack_require__(30);\r\n\tvar Vue = __webpack_require__(4);\r\n\tvar MobileView = (function (_super) {\r\n\t    __extends(MobileView, _super);\r\n\t    function MobileView() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    MobileView.prototype.ready = function () {\r\n\t        console.log('mobile ready');\r\n\t    };\r\n\t    MobileView.prototype.connect = function () {\r\n\t    };\r\n\t    return MobileView;\r\n\t}(Vue));\r\n\texports.MobileView = MobileView;\r\n\tVue.use(__webpack_require__(5));\r\n\tvar VueRouter = __webpack_require__(6);\r\n\tvar Const_1 = __webpack_require__(32);\r\n\tVue.use(VueRouter);\r\n\tvar router = new VueRouter();\r\n\trouter.map({\r\n\t    '/': {\r\n\t        component: Setting_1.Setting,\r\n\t        name: 'home'\r\n\t    },\r\n\t    '/panel/stage/op': {\r\n\t        component: StagePanelViewMobile_1.StagePanelViewMobile,\r\n\t        name: 'stage'\r\n\t    },\r\n\t    '/setting': {\r\n\t        component: Setting_1.Setting,\r\n\t        name: 'setting'\r\n\t    },\r\n\t});\r\n\trouter.afterEach(function (transition) {\r\n\t    var toPath = transition.to.path;\r\n\t    router.app.isOp = /\\/op/.test(toPath);\r\n\t    router.app.$on(\"\" + Const_1.EventId.setting_serverIPChanged, function (ip) {\r\n\t        console.log(ip);\r\n\t    });\r\n\t    console.log('after each!!!', toPath);\r\n\t});\r\n\tfunction onDeviceReady() {\r\n\t    console.log('onDeviceReady');\r\n\t    router.start(MobileView, '#app');\r\n\t}\r\n\tdocument.addEventListener('deviceready', onDeviceReady, false);\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Vue = __webpack_require__(2);\r\n\tvar vue_class_component_1 = __webpack_require__(3);\r\n\texports.Component = vue_class_component_1.default;\r\n\tvar VueEx = (function (_super) {\r\n\t    __extends(VueEx, _super);\r\n\t    function VueEx() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    VueEx.prototype.ready = function () {\r\n\t        this.$parentMethods = this.$parent.$options.methods;\r\n\t    };\r\n\t    VueEx.prototype.getAttr = function (e, propName) {\r\n\t        var str = e.target.attributes[propName];\r\n\t        var a = str.split('=');\r\n\t        if (a.length === 2) {\r\n\t            return a[1];\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    VueEx.prototype.post = function (url, data, option) {\r\n\t        if (data)\r\n\t            this.$http.post(url, data, option);\r\n\t        else\r\n\t            this.$http.post(url, option);\r\n\t    };\r\n\t    VueEx.prototype.getElem = function (val) {\r\n\t        var _0 = val[0];\r\n\t        if (_0 == \"#\") {\r\n\t            return document.getElementById(val.substr(1));\r\n\t        }\r\n\t    };\r\n\t    return VueEx;\r\n\t}(Vue));\r\n\texports.VueEx = VueEx;\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.24\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tisWechat: isWechat,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if (isA || isO) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.24';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t})\n\t\n\tvar Vue = __webpack_require__(2)\n\t\n\tvar internalHooks = [\n\t  'data',\n\t  'el',\n\t  'init',\n\t  'created',\n\t  'ready',\n\t  'beforeCompile',\n\t  'compiled',\n\t  'beforeDestroy',\n\t  'destroyed',\n\t  'attached',\n\t  'detached',\n\t  'activate'\n\t]\n\t\n\tfunction componentFactory (Component, options) {\n\t  if (!options) {\n\t    options = {}\n\t  }\n\t  options.name = options.name || Component.name\n\t  // prototype props.\n\t  var proto = Component.prototype\n\t  Object.getOwnPropertyNames(proto).forEach(function (key) {\n\t    if (key === 'constructor') {\n\t      return\n\t    }\n\t    // hooks\n\t    if (internalHooks.indexOf(key) > -1) {\n\t      options[key] = proto[key]\n\t      return\n\t    }\n\t    var descriptor = Object.getOwnPropertyDescriptor(proto, key)\n\t    if (typeof descriptor.value === 'function') {\n\t      // methods\n\t      (options.methods || (options.methods = {}))[key] = descriptor.value\n\t    } else if (descriptor.get || descriptor.set) {\n\t      // computed properties\n\t      (options.computed || (options.computed = {}))[key] = {\n\t        get: descriptor.get,\n\t        set: descriptor.set\n\t      }\n\t    }\n\t  })\n\t  // find super\n\t  var superProto = Object.getPrototypeOf(Component.prototype)\n\t  var Super = superProto instanceof Vue\n\t    ? superProto.constructor\n\t    : Vue\n\t  return Super.extend(options)\n\t}\n\t\n\tfunction decorator (options) {\n\t  if (typeof options === 'function') {\n\t    return componentFactory(options)\n\t  }\n\t  return function (Component) {\n\t    return componentFactory(Component, options)\n\t  }\n\t}\n\t\n\texports.default = decorator\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.26\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n\tvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\t\n\t// detecting iOS UIWebView by indexedDB\n\tvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tiosVersionMatch: iosVersionMatch,\n\t\tiosVersion: iosVersion,\n\t\thasMutationObserverBug: hasMutationObserverBug,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (false) {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.26';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * vue-resource v0.9.1\n\t * https://github.com/vuejs/vue-resource\n\t * Released under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING = 2;\n\t\n\tfunction Promise$2(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise$2.reject = function (r) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise$2.resolve = function (x) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise$2.all = function all(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        var count = 0,\n\t            result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise$2.race = function race(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p$1 = Promise$2.prototype;\n\t\n\tp$1.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.notify = function notify() {\n\t    var promise = this;\n\t\n\t    nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp$1.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise$2(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp$1.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\tvar PromiseObj = window.Promise || Promise$2;\n\t\n\tfunction Promise$1(executor, context) {\n\t\n\t    if (executor instanceof PromiseObj) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new PromiseObj(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromise$1.all = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.all(iterable), context);\n\t};\n\t\n\tPromise$1.resolve = function (value, context) {\n\t    return new Promise$1(PromiseObj.resolve(value), context);\n\t};\n\t\n\tPromise$1.reject = function (reason, context) {\n\t    return new Promise$1(PromiseObj.reject(reason), context);\n\t};\n\t\n\tPromise$1.race = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.race(iterable), context);\n\t};\n\t\n\tvar p = Promise$1.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new Promise$1(this.promise.catch(rejected), this.context);\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t        callback.call(this);\n\t        return value;\n\t    }, function (reason) {\n\t        callback.call(this);\n\t        return PromiseObj.reject(reason);\n\t    });\n\t};\n\t\n\tvar debug = false;\n\tvar util = {};\n\tvar array = [];\n\tfunction Util (Vue) {\n\t    util = Vue.util;\n\t    debug = Vue.config.debug || !Vue.config.silent;\n\t}\n\t\n\tfunction warn(msg) {\n\t    if (typeof console !== 'undefined' && debug) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t}\n\t\n\tfunction error(msg) {\n\t    if (typeof console !== 'undefined') {\n\t        console.error(msg);\n\t    }\n\t}\n\t\n\tfunction nextTick(cb, ctx) {\n\t    return util.nextTick(cb, ctx);\n\t}\n\t\n\tfunction trim(str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t}\n\t\n\tvar isArray = Array.isArray;\n\t\n\tfunction isString(val) {\n\t    return typeof val === 'string';\n\t}\n\t\n\tfunction isBoolean(val) {\n\t    return val === true || val === false;\n\t}\n\t\n\tfunction isFunction(val) {\n\t    return typeof val === 'function';\n\t}\n\t\n\tfunction isObject(obj) {\n\t    return obj !== null && typeof obj === 'object';\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t}\n\t\n\tfunction isFormData(obj) {\n\t    return typeof FormData !== 'undefined' && obj instanceof FormData;\n\t}\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = Promise$1.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\t\n\tfunction options(fn, obj, opts) {\n\t\n\t    opts = opts || {};\n\t\n\t    if (isFunction(opts)) {\n\t        opts = opts.call(obj);\n\t    }\n\t\n\t    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n\t}\n\t\n\tfunction each(obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t}\n\t\n\tvar assign = Object.assign || _assign;\n\t\n\tfunction merge(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source, true);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction defaults(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t\n\t        for (var key in source) {\n\t            if (target[key] === undefined) {\n\t                target[key] = source[key];\n\t            }\n\t        }\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _assign(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n\t            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (isArray(source[key]) && !isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            _merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\t\n\tfunction root (options, next) {\n\t\n\t    var url = next(options);\n\t\n\t    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\tfunction query (options, next) {\n\t\n\t    var urlParams = Object.keys(Url.options.params),\n\t        query = {},\n\t        url = next(options);\n\t\n\t    each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = Url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\tfunction expand(url, params, variables) {\n\t\n\t    var tmpl = parse(url),\n\t        expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t}\n\t\n\tfunction parse(template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n\t        variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function (context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null,\n\t                        values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t                } else {\n\t                    return encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t}\n\t\n\tfunction getValues(context, operator, key, modifier) {\n\t\n\t    var value = context[key],\n\t        result = [];\n\t\n\t    if (isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            result.push(encodeValue(operator, value[k], k));\n\t                        }\n\t                    });\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        tmp.push(encodeValue(operator, value));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction isDefined(value) {\n\t    return value !== undefined && value !== null;\n\t}\n\t\n\tfunction isKeyOperator(operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t}\n\t\n\tfunction encodeValue(operator, value, key) {\n\t\n\t    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t}\n\t\n\tfunction encodeReserved(str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t}\n\t\n\tfunction template (options) {\n\t\n\t    var variables = [],\n\t        url = expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\t\n\tfunction Url(url, params) {\n\t\n\t    var self = this || {},\n\t        options = url,\n\t        transform;\n\t\n\t    if (isString(url)) {\n\t        options = { url: url, params: params };\n\t    }\n\t\n\t    options = merge({}, Url.options, self.$options, options);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, self.$vm);\n\t    });\n\t\n\t    return transform(options);\n\t}\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [template, query, root];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [],\n\t        escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = isArray(obj),\n\t        plain = isPlainObject(obj),\n\t        hash;\n\t\n\t    each(obj, function (value, key) {\n\t\n\t        hash = isObject(value) || isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\tfunction xdrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(),\n\t            handler = function (event) {\n\t\n\t            var response = request.respondWith(xdr.responseText, {\n\t                status: xdr.status,\n\t                statusText: xdr.statusText\n\t            });\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        request.abort = function () {\n\t            return xdr.abort();\n\t        };\n\t\n\t        xdr.open(request.method, request.getUrl(), true);\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = function () {};\n\t        xdr.onprogress = function () {};\n\t        xdr.send(request.getBody());\n\t    });\n\t}\n\t\n\tvar ORIGIN_URL = Url.parse(location.href);\n\tvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\t\n\tfunction cors (request, next) {\n\t\n\t    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n\t        request.crossOrigin = true;\n\t    }\n\t\n\t    if (request.crossOrigin) {\n\t\n\t        if (!SUPPORTS_CORS) {\n\t            request.client = xdrClient;\n\t        }\n\t\n\t        delete request.emulateHTTP;\n\t    }\n\t\n\t    next();\n\t}\n\t\n\tfunction crossOrigin(request) {\n\t\n\t    var requestUrl = Url.parse(Url(request));\n\t\n\t    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n\t}\n\t\n\tfunction body (request, next) {\n\t\n\t    if (request.emulateJSON && isPlainObject(request.body)) {\n\t        request.body = Url.params(request.body);\n\t        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t    }\n\t\n\t    if (isFormData(request.body)) {\n\t        delete request.headers['Content-Type'];\n\t    }\n\t\n\t    if (isPlainObject(request.body)) {\n\t        request.body = JSON.stringify(request.body);\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        var contentType = response.headers['Content-Type'];\n\t\n\t        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\t\n\t            try {\n\t                response.data = response.json();\n\t            } catch (e) {\n\t                response.data = null;\n\t            }\n\t        } else {\n\t            response.data = response.text();\n\t        }\n\t    });\n\t}\n\t\n\tfunction jsonpClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var name = request.jsonp || 'callback',\n\t            callback = '_jsonp' + Math.random().toString(36).substr(2),\n\t            body = null,\n\t            handler,\n\t            script;\n\t\n\t        handler = function (event) {\n\t\n\t            var status = 0;\n\t\n\t            if (event.type === 'load' && body !== null) {\n\t                status = 200;\n\t            } else if (event.type === 'error') {\n\t                status = 404;\n\t            }\n\t\n\t            resolve(request.respondWith(body, { status: status }));\n\t\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\t\n\t        request.params[name] = callback;\n\t\n\t        window[callback] = function (result) {\n\t            body = JSON.stringify(result);\n\t        };\n\t\n\t        script = document.createElement('script');\n\t        script.src = request.getUrl();\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t}\n\t\n\tfunction jsonp (request, next) {\n\t\n\t    if (request.method == 'JSONP') {\n\t        request.client = jsonpClient;\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        if (request.method == 'JSONP') {\n\t            response.data = response.json();\n\t        }\n\t    });\n\t}\n\t\n\tfunction before (request, next) {\n\t\n\t    if (isFunction(request.before)) {\n\t        request.before.call(this, request);\n\t    }\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tfunction method (request, next) {\n\t\n\t    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n\t        request.headers['X-HTTP-Method-Override'] = request.method;\n\t        request.method = 'POST';\n\t    }\n\t\n\t    next();\n\t}\n\t\n\tfunction header (request, next) {\n\t\n\t    request.method = request.method.toUpperCase();\n\t    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * Timeout Interceptor.\n\t */\n\t\n\tfunction timeout (request, next) {\n\t\n\t    var timeout;\n\t\n\t    if (request.timeout) {\n\t        timeout = setTimeout(function () {\n\t            request.cancel();\n\t        }, request.timeout);\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        clearTimeout(timeout);\n\t    });\n\t}\n\t\n\tfunction xhrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(),\n\t            handler = function (event) {\n\t\n\t            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n\t                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n\t                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n\t                headers: parseHeaders(xhr.getAllResponseHeaders())\n\t            });\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        request.abort = function () {\n\t            return xhr.abort();\n\t        };\n\t\n\t        xhr.open(request.method, request.getUrl(), true);\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onerror = handler;\n\t\n\t        if (request.progress) {\n\t            if (request.method === 'GET') {\n\t                xhr.addEventListener('progress', request.progress);\n\t            } else if (/^(POST|PUT)$/i.test(request.method)) {\n\t                xhr.upload.addEventListener('progress', request.progress);\n\t            }\n\t        }\n\t\n\t        if (request.credentials === true) {\n\t            xhr.withCredentials = true;\n\t        }\n\t\n\t        each(request.headers || {}, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t        });\n\t\n\t        xhr.send(request.getBody());\n\t    });\n\t}\n\t\n\tfunction parseHeaders(str) {\n\t\n\t    var headers = {},\n\t        value,\n\t        name,\n\t        i;\n\t\n\t    each(trim(str).split('\\n'), function (row) {\n\t\n\t        i = row.indexOf(':');\n\t        name = trim(row.slice(0, i));\n\t        value = trim(row.slice(i + 1));\n\t\n\t        if (headers[name]) {\n\t\n\t            if (isArray(headers[name])) {\n\t                headers[name].push(value);\n\t            } else {\n\t                headers[name] = [headers[name], value];\n\t            }\n\t        } else {\n\t\n\t            headers[name] = value;\n\t        }\n\t    });\n\t\n\t    return headers;\n\t}\n\t\n\tfunction Client (context) {\n\t\n\t    var reqHandlers = [sendRequest],\n\t        resHandlers = [],\n\t        handler;\n\t\n\t    if (!isObject(context)) {\n\t        context = null;\n\t    }\n\t\n\t    function Client(request) {\n\t        return new Promise$1(function (resolve) {\n\t\n\t            function exec() {\n\t\n\t                handler = reqHandlers.pop();\n\t\n\t                if (isFunction(handler)) {\n\t                    handler.call(context, request, next);\n\t                } else {\n\t                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n\t                    next();\n\t                }\n\t            }\n\t\n\t            function next(response) {\n\t                when(response, function (response) {\n\t\n\t                    if (isFunction(response)) {\n\t\n\t                        resHandlers.unshift(response);\n\t                    } else if (isObject(response)) {\n\t\n\t                        resHandlers.forEach(function (handler) {\n\t                            handler.call(context, response);\n\t                        });\n\t\n\t                        resolve(response);\n\t\n\t                        return;\n\t                    }\n\t\n\t                    exec();\n\t                });\n\t            }\n\t\n\t            exec();\n\t        }, context);\n\t    }\n\t\n\t    Client.use = function (handler) {\n\t        reqHandlers.push(handler);\n\t    };\n\t\n\t    return Client;\n\t}\n\t\n\tfunction sendRequest(request, resolve) {\n\t\n\t    var client = request.client || xhrClient;\n\t\n\t    resolve(client(request));\n\t}\n\t\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\t\n\t/**\n\t * HTTP Response.\n\t */\n\t\n\tvar Response = function () {\n\t    function Response(body, _ref) {\n\t        var url = _ref.url;\n\t        var headers = _ref.headers;\n\t        var status = _ref.status;\n\t        var statusText = _ref.statusText;\n\t        classCallCheck(this, Response);\n\t\n\t\n\t        this.url = url;\n\t        this.body = body;\n\t        this.headers = headers || {};\n\t        this.status = status || 0;\n\t        this.statusText = statusText || '';\n\t        this.ok = status >= 200 && status < 300;\n\t    }\n\t\n\t    Response.prototype.text = function text() {\n\t        return this.body;\n\t    };\n\t\n\t    Response.prototype.blob = function blob() {\n\t        return new Blob([this.body]);\n\t    };\n\t\n\t    Response.prototype.json = function json() {\n\t        return JSON.parse(this.body);\n\t    };\n\t\n\t    return Response;\n\t}();\n\t\n\tvar Request = function () {\n\t    function Request(options) {\n\t        classCallCheck(this, Request);\n\t\n\t\n\t        this.method = 'GET';\n\t        this.body = null;\n\t        this.params = {};\n\t        this.headers = {};\n\t\n\t        assign(this, options);\n\t    }\n\t\n\t    Request.prototype.getUrl = function getUrl() {\n\t        return Url(this);\n\t    };\n\t\n\t    Request.prototype.getBody = function getBody() {\n\t        return this.body;\n\t    };\n\t\n\t    Request.prototype.respondWith = function respondWith(body, options) {\n\t        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n\t    };\n\t\n\t    return Request;\n\t}();\n\t\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\n\tvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\n\tvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\t\n\tfunction Http(options) {\n\t\n\t    var self = this || {},\n\t        client = Client(self.$vm);\n\t\n\t    defaults(options || {}, self.$options, Http.options);\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client.use(handler);\n\t    });\n\t\n\t    return client(new Request(options)).then(function (response) {\n\t\n\t        return response.ok ? response : Promise$1.reject(response);\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            error(response);\n\t        }\n\t\n\t        return Promise$1.reject(response);\n\t    });\n\t}\n\t\n\tHttp.options = {};\n\t\n\tHttp.headers = {\n\t    put: JSON_CONTENT_TYPE,\n\t    post: JSON_CONTENT_TYPE,\n\t    patch: JSON_CONTENT_TYPE,\n\t    delete: JSON_CONTENT_TYPE,\n\t    custom: CUSTOM_HEADERS,\n\t    common: COMMON_HEADERS\n\t};\n\t\n\tHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\t\n\t['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, options) {\n\t        return this(assign(options || {}, { url: url, method: method }));\n\t    };\n\t});\n\t\n\t['post', 'put', 'patch'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, body, options) {\n\t        return this(assign(options || {}, { url: url, method: method, body: body }));\n\t    };\n\t});\n\t\n\tfunction Resource(url, params, actions, options) {\n\t\n\t    var self = this || {},\n\t        resource = {};\n\t\n\t    actions = assign({}, Resource.actions, actions);\n\t\n\t    each(actions, function (action, name) {\n\t\n\t        action = merge({ url: url, params: params || {} }, options, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || Http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options = assign({}, action),\n\t        params = {},\n\t        body;\n\t\n\t    switch (args.length) {\n\t\n\t        case 2:\n\t\n\t            params = args[0];\n\t            body = args[1];\n\t\n\t            break;\n\t\n\t        case 1:\n\t\n\t            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                body = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options.body = body;\n\t    options.params = assign({}, options.params, params);\n\t\n\t    return options;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: { method: 'GET' },\n\t    save: { method: 'POST' },\n\t    query: { method: 'GET' },\n\t    update: { method: 'PUT' },\n\t    remove: { method: 'DELETE' },\n\t    delete: { method: 'DELETE' }\n\t\n\t};\n\t\n\tfunction plugin(Vue) {\n\t\n\t    if (plugin.installed) {\n\t        return;\n\t    }\n\t\n\t    Util(Vue);\n\t\n\t    Vue.url = Url;\n\t    Vue.http = Http;\n\t    Vue.resource = Resource;\n\t    Vue.Promise = Promise$1;\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function () {\n\t                return options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function () {\n\t                return options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function () {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function () {\n\t                var _this = this;\n\t\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, _this);\n\t                };\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(plugin);\n\t}\n\t\n\tmodule.exports = plugin;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar StagePanelView_1 = __webpack_require__(8);\r\n\tvar vue_class_component_1 = __webpack_require__(26);\r\n\tvar Const_1 = __webpack_require__(27);\r\n\tvar Command_1 = __webpack_require__(28);\r\n\tvar Const_2 = __webpack_require__(32);\r\n\tvar StagePanelViewMobile = (function (_super) {\r\n\t    __extends(StagePanelViewMobile, _super);\r\n\t    function StagePanelViewMobile() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    StagePanelViewMobile.prototype.ready = function () {\r\n\t        this.$on(\"\" + Const_2.EventId.setting_serverIPChanged, function (ip) {\r\n\t            console.log(ip);\r\n\t        });\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.opReq = function (cmdId, param, callback) {\r\n\t        var url = \"http://\" + Const_2.appModel.ip + \"/panel/\" + Const_1.PanelId.stagePanel + \"/\" + cmdId;\r\n\t        console.log(\"opReq\" + url);\r\n\t        this.$http.post(url, param, callback);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.initIO = function (io) {\r\n\t        console.log('init io!!!');\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onToggleTimer = function () {\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_toggleTimer);\r\n\t        console.log('onToggleTimer');\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onResetTimer = function () {\r\n\t        console.log('onResetTimer');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_resetTimer);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onAddLeftScore = function () {\r\n\t        console.log('onAddLeftScore');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_addLeftScore, { param: 'addLeftScore' });\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onAddRightScore = function () {\r\n\t        console.log('onAddRightScore');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_addRightScore);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onQueryPlayer = function (idx) {\r\n\t        var _this = this;\r\n\t        var queryId = this.getElem(\"#player\" + idx).value;\r\n\t        console.log('onQueryPlayer', idx, queryId);\r\n\t        this.post(\"/db/player/\" + queryId, function (data) {\r\n\t            console.log('res: ', data);\r\n\t            var playerDoc = data.playerDoc;\r\n\t            _this.getElem('#playerImg' + idx).src = playerDoc.avatar;\r\n\t        });\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onUpdatePlayerNum = function (idx) {\r\n\t        var backNum = this.getElem(\"#playerNum\" + idx).value;\r\n\t        console.log('onUpdatePlayerNum', idx, backNum);\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerBackNum, { idx: idx, backNum: backNum });\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onStarting = function () {\r\n\t        console.log('onStarting');\r\n\t        var playerIdArr = [];\r\n\t        var backNumArr = [];\r\n\t        for (var i = 0; i < 8; i++) {\r\n\t            var queryId = Number(this.getElem(\"#player\" + i).value);\r\n\t            playerIdArr.push(queryId);\r\n\t            backNumArr.push(Number(this.getElem(\"#playerNum\" + i).value));\r\n\t        }\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerAll, { playerIdArr: playerIdArr, backNumArr: backNumArr });\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onSetEloScore = function (idx) {\r\n\t        var eloScore = Number(this.getElem(\"#eloScore\" + idx).value);\r\n\t        this.playerPanel.setEloScore(idx, eloScore);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onUpdateBackNum = function () {\r\n\t        for (var idx = 0; idx < 8; idx++) {\r\n\t            var backNum = this.getElem(\"#playerNum\" + idx).value;\r\n\t            console.log('onUpdatePlayerNum', idx, backNum);\r\n\t            this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerBackNum, { idx: idx, backNum: backNum });\r\n\t        }\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onUpdatePlayer = function (idx) {\r\n\t        console.log('onUpdatePlayer', idx);\r\n\t        var queryId = Number(this.getElem(\"#player\" + idx).value);\r\n\t        console.log('onQueryPlayer', idx, queryId);\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayer, { idx: idx, playerId: queryId });\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onMinRightScore = function () {\r\n\t        console.log('onMinRightScore');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_minRightScore);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onMinLeftScore = function () {\r\n\t        console.log('onMinLeftScore');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_minLeftScore);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onShowWin = function () {\r\n\t        console.log('onShowWin mvp ', this.mvpIdx);\r\n\t        var isBlueMvp = this.mvpIdx < 4;\r\n\t        if (this.scorePanel.isBlueWin != isBlueMvp) {\r\n\t            alert('比赛结果与mvp不符');\r\n\t        }\r\n\t        else {\r\n\t            this.opReq(\"\" + Command_1.CommandId.cs_toggleTimer, { state: Const_1.TimerState.PAUSE });\r\n\t            this.opReq(\"\" + Command_1.CommandId.cs_fadeInWinPanel, { mvpIdx: this.mvpIdx });\r\n\t        }\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onHideWin = function () {\r\n\t        console.log('onHideWin mvp ');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_fadeOutWinPanel);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onSubmitGame = function () {\r\n\t        var _this = this;\r\n\t        var isBlueMvp = this.mvpIdx < 4;\r\n\t        if (this.scorePanel.isBlueWin != isBlueMvp) {\r\n\t            alert('比赛结果与mvp不符');\r\n\t        }\r\n\t        else {\r\n\t            var date = new Date();\r\n\t            var dateTime = date.getTime();\r\n\t            console.log('onSubmitGame', dateTime);\r\n\t            this.opReq(\"\" + Command_1.CommandId.cs_saveGameRec, { date: dateTime }, function (res) {\r\n\t                console.log(res);\r\n\t                _this.isSubmited = true;\r\n\t                if (res) {\r\n\t                    alert('比赛结果提交成功');\r\n\t                }\r\n\t                else {\r\n\t                    alert('比赛结果已经提交过了');\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onAddLeftFoul = function () {\r\n\t        console.log('onAddLeftFoul');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_addLeftFoul);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onMinLeftFoul = function () {\r\n\t        console.log('onMinLeftFoul');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_minLeftFoul);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onMinRightFoul = function () {\r\n\t        console.log('onMinRightFoul');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_minRightFoul);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onAddRightFoul = function () {\r\n\t        console.log('onAddRightFoul');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_addRightFoul);\r\n\t    };\r\n\t    StagePanelViewMobile.prototype.onComingActivity = function () {\r\n\t        console.log('onComingActivity');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_setGameComing);\r\n\t    };\r\n\t    StagePanelViewMobile = __decorate([\r\n\t        vue_class_component_1.default({\r\n\t            template: __webpack_require__(29),\r\n\t            props: {\r\n\t                op: {\r\n\t                    type: Boolean,\r\n\t                    required: true,\r\n\t                    default: false\r\n\t                },\r\n\t                timerName: {\r\n\t                    type: String,\r\n\t                    default: \"start\"\r\n\t                },\r\n\t                mvpIdx: {\r\n\t                    type: Number,\r\n\t                    required: true,\r\n\t                    default: 0\r\n\t                },\r\n\t                gameId: {\r\n\t                    type: Number,\r\n\t                    required: true,\r\n\t                    default: 0\r\n\t                },\r\n\t                playerInfoArr: {\r\n\t                    type: Array,\r\n\t                    default: [1, 2, 3, 4, 5, 6, 7, 8]\r\n\t                }\r\n\t            }\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], StagePanelViewMobile);\r\n\t    return StagePanelViewMobile;\r\n\t}(StagePanelView_1.StagePanelView));\r\n\texports.StagePanelViewMobile = StagePanelViewMobile;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar Command_1 = __webpack_require__(9);\r\n\tvar vue_class_component_1 = __webpack_require__(3);\r\n\tvar BasePanelView_1 = __webpack_require__(11);\r\n\tvar Const_1 = __webpack_require__(13);\r\n\tvar PlayerInfo_1 = __webpack_require__(14);\r\n\tvar PlayerPanel_1 = __webpack_require__(16);\r\n\tvar EventPanel_1 = __webpack_require__(20);\r\n\tvar ScorePanel_1 = __webpack_require__(21);\r\n\tvar StagePanelView = (function (_super) {\r\n\t    __extends(StagePanelView, _super);\r\n\t    function StagePanelView() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.isSubmited = false;\r\n\t    }\r\n\t    StagePanelView.prototype.ready = function (pid, isInitCanvas) {\r\n\t        if (isInitCanvas === void 0) { isInitCanvas = true; }\r\n\t        if (!pid)\r\n\t            pid = Const_1.PanelId.stagePanel;\r\n\t        var io = _super.prototype.ready.call(this, pid, isInitCanvas);\r\n\t        this.initIO(io);\r\n\t    };\r\n\t    StagePanelView.prototype.initIO = function (io) {\r\n\t        var _this = this;\r\n\t        io.on(\"\" + Command_1.CommandId.initPanel, function (data) {\r\n\t            console.log(\"\" + Command_1.CommandId.initPanel, data);\r\n\t            if (!_this.isInit && _this.isInitCanvas)\r\n\t                _this.initStage(data.gameInfo);\r\n\t        });\r\n\t        io\r\n\t            .on(\"\" + Command_1.CommandId.updateLeftScore, function (data) {\r\n\t            console.log(\"\" + Command_1.CommandId.updateLeftScore, data);\r\n\t            _this.scorePanel.setLeftScore(data.leftScore);\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.updateRightScore, function (data) {\r\n\t            _this.scorePanel.setRightScore(data.rightScore);\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.straightScore3, function (param) {\r\n\t            if (param.team === Const_1.ViewEvent.STRAIGHT3_LEFT) {\r\n\t                _this.eventPanel.fadeInStraight3(false);\r\n\t            }\r\n\t            else if (param.team === Const_1.ViewEvent.STRAIGHT3_RIGHT) {\r\n\t                _this.eventPanel.fadeInStraight3(true);\r\n\t            }\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.toggleTimer, function (data) {\r\n\t            if (_this.timerName === Const_1.TimerState.START_STR)\r\n\t                _this.timerName = Const_1.TimerState.PAUSE_STR;\r\n\t            else\r\n\t                _this.timerName = Const_1.TimerState.START_STR;\r\n\t            _this.scorePanel.toggleTimer1();\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.resetTimer, function (data) {\r\n\t            _this.timerName = Const_1.TimerState.START_STR;\r\n\t            _this.scorePanel.resetTimer();\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.updatePlayer, function (data) {\r\n\t            _this.playerPanel.setPlayer(data.idx, new PlayerInfo_1.PlayerInfo(data.playerDoc));\r\n\t            _this.scorePanel.setAvgEloScore(data.avgEloScore);\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.updatePlayerAll, function (param) {\r\n\t            for (var i = 0; i < param.playerInfoArr.length; i++) {\r\n\t                var playerInfo = new PlayerInfo_1.PlayerInfo(param.playerInfoArr[i]);\r\n\t                _this.playerPanel.setPlayer(i, playerInfo);\r\n\t            }\r\n\t            _this.scorePanel.setLeftScore(0);\r\n\t            _this.scorePanel.setRightScore(0);\r\n\t            _this.scorePanel.setAvgEloScore(param.avgEloScore);\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.fadeInWinPanel, function (param) {\r\n\t            var teamInfo = param.teamInfo;\r\n\t            var mvpIdx = param.mvpIdx;\r\n\t            var mvpId = param.mvpId;\r\n\t            _this.eventPanel.fadeInWinPanel(teamInfo, mvpIdx, mvpId);\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.fadeOutWinPanel, function (param) {\r\n\t            _this.eventPanel.fadeOutWinPanel();\r\n\t        })\r\n\t            .on(\"\" + Command_1.CommandId.updatePlayerBackNum, function (param) {\r\n\t            _this.playerPanel.playerCardArr[param.idx].setBackNumber(param.backNum);\r\n\t        });\r\n\t    };\r\n\t    StagePanelView.prototype.initStage = function (gameDoc) {\r\n\t        this.isInit = true;\r\n\t        this.scorePanel = new ScorePanel_1.ScorePanel(this);\r\n\t        this.scorePanel.init(gameDoc);\r\n\t        this.playerPanel = new PlayerPanel_1.PlayerPanel(this);\r\n\t        this.playerPanel.init(gameDoc);\r\n\t        this.gameId = gameDoc.id;\r\n\t        this.eventPanel = new EventPanel_1.EventPanel(this);\r\n\t        console.log('initStage', gameDoc);\r\n\t        if (this.op) {\r\n\t            for (var i = 0; i < gameDoc.playerInfoArr.length; i++) {\r\n\t                var playerInfo = gameDoc.playerInfoArr[i];\r\n\t                if (playerInfo)\r\n\t                    this.getElem(\"#player\" + i).value = playerInfo.playerData.id;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    StagePanelView.prototype.onToggleTimer = function () {\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_toggleTimer);\r\n\t        console.log('onToggleTimer');\r\n\t    };\r\n\t    StagePanelView.prototype.onResetTimer = function () {\r\n\t        console.log('onResetTimer');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_resetTimer);\r\n\t    };\r\n\t    StagePanelView.prototype.onAddLeftScore = function () {\r\n\t        console.log('onAddLeftScore');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_addLeftScore, { param: 'addLeftScore' });\r\n\t    };\r\n\t    StagePanelView.prototype.onAddRightScore = function () {\r\n\t        console.log('onAddRightScore');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_addRightScore);\r\n\t    };\r\n\t    StagePanelView.prototype.onQueryPlayer = function (idx) {\r\n\t        var _this = this;\r\n\t        var queryId = this.getElem(\"#player\" + idx).value;\r\n\t        console.log('onQueryPlayer', idx, queryId);\r\n\t        this.post(\"/db/player/\" + queryId, function (data) {\r\n\t            console.log('res: ', data);\r\n\t            var playerDoc = data.playerDoc;\r\n\t            _this.getElem('#playerImg' + idx).src = playerDoc.avatar;\r\n\t        });\r\n\t    };\r\n\t    StagePanelView.prototype.onUpdatePlayerNum = function (idx) {\r\n\t        var backNum = this.getElem(\"#playerNum\" + idx).value;\r\n\t        console.log('onUpdatePlayerNum', idx, backNum);\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerBackNum, { idx: idx, backNum: backNum });\r\n\t    };\r\n\t    StagePanelView.prototype.onStarting = function () {\r\n\t        console.log('onStarting');\r\n\t        var playerIdArr = [];\r\n\t        var backNumArr = [];\r\n\t        for (var i = 0; i < 8; i++) {\r\n\t            var queryId = Number(this.getElem(\"#player\" + i).value);\r\n\t            playerIdArr.push(queryId);\r\n\t            backNumArr.push(Number(this.getElem(\"#playerNum\" + i).value));\r\n\t        }\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerAll, { playerIdArr: playerIdArr, backNumArr: backNumArr });\r\n\t    };\r\n\t    StagePanelView.prototype.onSetEloScore = function (idx) {\r\n\t        var eloScore = Number(this.getElem(\"#eloScore\" + idx).value);\r\n\t        this.playerPanel.setEloScore(idx, eloScore);\r\n\t    };\r\n\t    StagePanelView.prototype.onUpdateBackNum = function () {\r\n\t        for (var idx = 0; idx < 8; idx++) {\r\n\t            var backNum = this.getElem(\"#playerNum\" + idx).value;\r\n\t            console.log('onUpdatePlayerNum', idx, backNum);\r\n\t            this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerBackNum, { idx: idx, backNum: backNum });\r\n\t        }\r\n\t    };\r\n\t    StagePanelView.prototype.onUpdatePlayer = function (idx) {\r\n\t        console.log('onUpdatePlayer', idx);\r\n\t        var queryId = Number(this.getElem(\"#player\" + idx).value);\r\n\t        console.log('onQueryPlayer', idx, queryId);\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayer, { idx: idx, playerId: queryId });\r\n\t    };\r\n\t    StagePanelView.prototype.onMinRightScore = function () {\r\n\t        console.log('onMinRightScore');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_minRightScore);\r\n\t    };\r\n\t    StagePanelView.prototype.onMinLeftScore = function () {\r\n\t        console.log('onMinLeftScore');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_minLeftScore);\r\n\t    };\r\n\t    StagePanelView.prototype.onShowWin = function () {\r\n\t        console.log('onShowWin mvp ', this.mvpIdx);\r\n\t        var isBlueMvp = this.mvpIdx < 4;\r\n\t        if (this.scorePanel.isBlueWin != isBlueMvp) {\r\n\t            alert('比赛结果与mvp不符');\r\n\t        }\r\n\t        else {\r\n\t            this.opReq(\"\" + Command_1.CommandId.cs_toggleTimer, { state: Const_1.TimerState.PAUSE });\r\n\t            this.opReq(\"\" + Command_1.CommandId.cs_fadeInWinPanel, { mvpIdx: this.mvpIdx });\r\n\t        }\r\n\t    };\r\n\t    StagePanelView.prototype.onHideWin = function () {\r\n\t        console.log('onHideWin mvp ');\r\n\t        this.opReq(\"\" + Command_1.CommandId.cs_fadeOutWinPanel);\r\n\t    };\r\n\t    StagePanelView.prototype.onSubmitGame = function () {\r\n\t        var _this = this;\r\n\t        var isBlueMvp = this.mvpIdx < 4;\r\n\t        if (this.scorePanel.isBlueWin != isBlueMvp) {\r\n\t            alert('比赛结果与mvp不符');\r\n\t        }\r\n\t        else {\r\n\t            var date = new Date();\r\n\t            var dateTime = date.getTime();\r\n\t            console.log('onSubmitGame', dateTime);\r\n\t            this.opReq(\"\" + Command_1.CommandId.cs_saveGameRec, { date: dateTime }, function (res) {\r\n\t                console.log(res);\r\n\t                _this.isSubmited = true;\r\n\t                if (res) {\r\n\t                    alert('比赛结果提交成功');\r\n\t                }\r\n\t                else {\r\n\t                    alert('比赛结果已经提交过了');\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    StagePanelView.prototype.onRefresh = function () {\r\n\t        console.log('onRefresh');\r\n\t        if (this.isSubmited)\r\n\t            window.location.reload();\r\n\t        else\r\n\t            alert('还没提交比赛结果');\r\n\t    };\r\n\t    StagePanelView = __decorate([\r\n\t        vue_class_component_1.default({\r\n\t            template: __webpack_require__(25),\r\n\t            props: {\r\n\t                op: {\r\n\t                    type: Boolean,\r\n\t                    required: true,\r\n\t                    default: false\r\n\t                },\r\n\t                timerName: {\r\n\t                    type: String,\r\n\t                    default: \"start\"\r\n\t                },\r\n\t                mvpIdx: {\r\n\t                    type: Number,\r\n\t                    required: true,\r\n\t                    default: 0\r\n\t                },\r\n\t                gameId: {\r\n\t                    type: Number,\r\n\t                    required: true,\r\n\t                    default: 0\r\n\t                },\r\n\t                playerInfoArr: {\r\n\t                    type: Array,\r\n\t                    default: [1, 2, 3, 4, 5, 6, 7, 8]\r\n\t                }\r\n\t            }\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], StagePanelView);\r\n\t    return StagePanelView;\r\n\t}(BasePanelView_1.BasePanelView));\r\n\texports.StagePanelView = StagePanelView;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar EventDispatcher_1 = __webpack_require__(10);\r\n\t(function (CommandId) {\r\n\t    CommandId[CommandId[\"ShowConsoleWin\"] = 100000] = \"ShowConsoleWin\";\r\n\t    CommandId[CommandId[\"toggleTracker\"] = 100001] = \"toggleTracker\";\r\n\t    CommandId[CommandId[\"toggleBallRolling\"] = 100002] = \"toggleBallRolling\";\r\n\t    CommandId[CommandId[\"toggleTimer\"] = 100003] = \"toggleTimer\";\r\n\t    CommandId[CommandId[\"cs_toggleTimer\"] = 100004] = \"cs_toggleTimer\";\r\n\t    CommandId[CommandId[\"resetTimer\"] = 100005] = \"resetTimer\";\r\n\t    CommandId[CommandId[\"cs_resetTimer\"] = 100006] = \"cs_resetTimer\";\r\n\t    CommandId[CommandId[\"disableTracker\"] = 100007] = \"disableTracker\";\r\n\t    CommandId[CommandId[\"updateLeftScore\"] = 100008] = \"updateLeftScore\";\r\n\t    CommandId[CommandId[\"cs_addLeftScore\"] = 100009] = \"cs_addLeftScore\";\r\n\t    CommandId[CommandId[\"updateRightScore\"] = 100010] = \"updateRightScore\";\r\n\t    CommandId[CommandId[\"cs_addRightScore\"] = 100011] = \"cs_addRightScore\";\r\n\t    CommandId[CommandId[\"minLeftScore\"] = 100012] = \"minLeftScore\";\r\n\t    CommandId[CommandId[\"cs_minLeftScore\"] = 100013] = \"cs_minLeftScore\";\r\n\t    CommandId[CommandId[\"minRightScore\"] = 100014] = \"minRightScore\";\r\n\t    CommandId[CommandId[\"cs_minRightScore\"] = 100015] = \"cs_minRightScore\";\r\n\t    CommandId[CommandId[\"updateLeftFoul\"] = 100016] = \"updateLeftFoul\";\r\n\t    CommandId[CommandId[\"cs_addLeftFoul\"] = 100017] = \"cs_addLeftFoul\";\r\n\t    CommandId[CommandId[\"cs_minLeftFoul\"] = 100018] = \"cs_minLeftFoul\";\r\n\t    CommandId[CommandId[\"updateRightFoul\"] = 100019] = \"updateRightFoul\";\r\n\t    CommandId[CommandId[\"cs_addRightFoul\"] = 100020] = \"cs_addRightFoul\";\r\n\t    CommandId[CommandId[\"cs_minRightFoul\"] = 100021] = \"cs_minRightFoul\";\r\n\t    CommandId[CommandId[\"stageFadeOut\"] = 100022] = \"stageFadeOut\";\r\n\t    CommandId[CommandId[\"cs_fadeOut\"] = 100023] = \"cs_fadeOut\";\r\n\t    CommandId[CommandId[\"playerScore\"] = 100024] = \"playerScore\";\r\n\t    CommandId[CommandId[\"cs_playerScore\"] = 100025] = \"cs_playerScore\";\r\n\t    CommandId[CommandId[\"stageFadeIn\"] = 100026] = \"stageFadeIn\";\r\n\t    CommandId[CommandId[\"cs_stageFadeIn\"] = 100027] = \"cs_stageFadeIn\";\r\n\t    CommandId[CommandId[\"moveStagePanel\"] = 100028] = \"moveStagePanel\";\r\n\t    CommandId[CommandId[\"cs_moveStagePanel\"] = 100029] = \"cs_moveStagePanel\";\r\n\t    CommandId[CommandId[\"updatePlayer\"] = 100030] = \"updatePlayer\";\r\n\t    CommandId[CommandId[\"cs_updatePlayer\"] = 100031] = \"cs_updatePlayer\";\r\n\t    CommandId[CommandId[\"updatePlayerAll\"] = 100032] = \"updatePlayerAll\";\r\n\t    CommandId[CommandId[\"cs_updatePlayerAll\"] = 100033] = \"cs_updatePlayerAll\";\r\n\t    CommandId[CommandId[\"cs_updatePlayerBackNum\"] = 100034] = \"cs_updatePlayerBackNum\";\r\n\t    CommandId[CommandId[\"updatePlayerBackNum\"] = 100035] = \"updatePlayerBackNum\";\r\n\t    CommandId[CommandId[\"fadeInNotice\"] = 100036] = \"fadeInNotice\";\r\n\t    CommandId[CommandId[\"cs_fadeInNotice\"] = 100037] = \"cs_fadeInNotice\";\r\n\t    CommandId[CommandId[\"cs_resetGame\"] = 100038] = \"cs_resetGame\";\r\n\t    CommandId[CommandId[\"cs_unLimitScore\"] = 100039] = \"cs_unLimitScore\";\r\n\t    CommandId[CommandId[\"unLimitScore\"] = 100040] = \"unLimitScore\";\r\n\t    CommandId[CommandId[\"fadeInWinPanel\"] = 100041] = \"fadeInWinPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInWinPanel\"] = 100042] = \"cs_fadeInWinPanel\";\r\n\t    CommandId[CommandId[\"fadeOutWinPanel\"] = 100043] = \"fadeOutWinPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeOutWinPanel\"] = 100044] = \"cs_fadeOutWinPanel\";\r\n\t    CommandId[CommandId[\"saveGameRec\"] = 100045] = \"saveGameRec\";\r\n\t    CommandId[CommandId[\"cs_saveGameRec\"] = 100046] = \"cs_saveGameRec\";\r\n\t    CommandId[CommandId[\"cs_queryPlayerByPos\"] = 100047] = \"cs_queryPlayerByPos\";\r\n\t    CommandId[CommandId[\"fadeInPlayerPanel\"] = 100048] = \"fadeInPlayerPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInPlayerPanel\"] = 100049] = \"cs_fadeInPlayerPanel\";\r\n\t    CommandId[CommandId[\"fadeOutPlayerPanel\"] = 100050] = \"fadeOutPlayerPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeOutPlayerPanel\"] = 100051] = \"cs_fadeOutPlayerPanel\";\r\n\t    CommandId[CommandId[\"movePlayerPanel\"] = 100052] = \"movePlayerPanel\";\r\n\t    CommandId[CommandId[\"cs_movePlayerPanel\"] = 100053] = \"cs_movePlayerPanel\";\r\n\t    CommandId[CommandId[\"straightScore3\"] = 100054] = \"straightScore3\";\r\n\t    CommandId[CommandId[\"straightScore5\"] = 100055] = \"straightScore5\";\r\n\t    CommandId[CommandId[\"initPanel\"] = 100056] = \"initPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInActivityPanel\"] = 100057] = \"cs_fadeInActivityPanel\";\r\n\t    CommandId[CommandId[\"fadeInActivityPanel\"] = 100058] = \"fadeInActivityPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInNextActivity\"] = 100059] = \"cs_fadeInNextActivity\";\r\n\t    CommandId[CommandId[\"fadeInNextActivity\"] = 100060] = \"fadeInNextActivity\";\r\n\t    CommandId[CommandId[\"cs_fadeInActivityExGame\"] = 100061] = \"cs_fadeInActivityExGame\";\r\n\t    CommandId[CommandId[\"fadeInActivityExGame\"] = 100062] = \"fadeInActivityExGame\";\r\n\t    CommandId[CommandId[\"cs_fadeOutActivityPanel\"] = 100063] = \"cs_fadeOutActivityPanel\";\r\n\t    CommandId[CommandId[\"fadeOutActivityPanel\"] = 100064] = \"fadeOutActivityPanel\";\r\n\t    CommandId[CommandId[\"cs_startGame\"] = 100065] = \"cs_startGame\";\r\n\t    CommandId[CommandId[\"cs_restartGame\"] = 100066] = \"cs_restartGame\";\r\n\t    CommandId[CommandId[\"cs_fadeInRankPanel\"] = 100067] = \"cs_fadeInRankPanel\";\r\n\t    CommandId[CommandId[\"fadeInRankPanel\"] = 100068] = \"fadeInRankPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInNextRank\"] = 100069] = \"cs_fadeInNextRank\";\r\n\t    CommandId[CommandId[\"fadeInNextRank\"] = 100070] = \"fadeInNextRank\";\r\n\t    CommandId[CommandId[\"cs_setGameComing\"] = 100071] = \"cs_setGameComing\";\r\n\t    CommandId[CommandId[\"setGameComing\"] = 100072] = \"setGameComing\";\r\n\t    CommandId[CommandId[\"cs_fadeOutRankPanel\"] = 100073] = \"cs_fadeOutRankPanel\";\r\n\t    CommandId[CommandId[\"fadeOutRankPanel\"] = 100074] = \"fadeOutRankPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInCountDown\"] = 100075] = \"cs_fadeInCountDown\";\r\n\t    CommandId[CommandId[\"fadeInCountDown\"] = 100076] = \"fadeInCountDown\";\r\n\t    CommandId[CommandId[\"cs_fadeOutCountDown\"] = 100077] = \"cs_fadeOutCountDown\";\r\n\t    CommandId[CommandId[\"fadeOutCountDown\"] = 100078] = \"fadeOutCountDown\";\r\n\t    CommandId[CommandId[\"cs_inScreenScore\"] = 100079] = \"cs_inScreenScore\";\r\n\t    CommandId[CommandId[\"inScreenScore\"] = 100080] = \"inScreenScore\";\r\n\t    CommandId[CommandId[\"cs_findPlayerData\"] = 100081] = \"cs_findPlayerData\";\r\n\t})(exports.CommandId || (exports.CommandId = {}));\r\n\tvar CommandId = exports.CommandId;\r\n\tvar CommandItem = (function () {\r\n\t    function CommandItem(id) {\r\n\t        this.id = id;\r\n\t    }\r\n\t    return CommandItem;\r\n\t}());\r\n\tvar Command = (function (_super) {\r\n\t    __extends(Command, _super);\r\n\t    function Command() {\r\n\t        _super.call(this);\r\n\t        this.cmdArr = [];\r\n\t        this.newCmd(CommandId.updateLeftScore, \"addLeftScore\");\r\n\t        this.newCmd(CommandId.updateRightScore, \"addRightScore\");\r\n\t        this.newCmd(CommandId.toggleTracker, \"toggleTracker\");\r\n\t        this.newCmd(CommandId.toggleTimer, \"toggleTimer\");\r\n\t        this.newCmd(CommandId.toggleBallRolling, \"toggleBallRolling\");\r\n\t        this.newCmd(CommandId.disableTracker, \"disableTracker\");\r\n\t    }\r\n\t    Command.prototype.newCmd = function (id, name, desc) {\r\n\t        var ci = new CommandItem(id);\r\n\t        ci.name = name;\r\n\t        ci.desc = desc;\r\n\t        this.cmdArr.push(ci);\r\n\t    };\r\n\t    return Command;\r\n\t}(EventDispatcher_1.EventDispatcher));\r\n\texports.Command = Command;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar EventDispatcher = (function () {\r\n\t    function EventDispatcher() {\r\n\t        this._func = {};\r\n\t        this._funcId = 0;\r\n\t    }\r\n\t    EventDispatcher.prototype.on = function (type, func) {\r\n\t        if (!this._func[type])\r\n\t            this._func[type] = [];\r\n\t        this._funcId++;\r\n\t        this._func[type].push({ func: func, id: this._funcId });\r\n\t    };\r\n\t    EventDispatcher.prototype.emit = function (type, param, broadcastId) {\r\n\t        if (param === void 0) { param = null; }\r\n\t        if (broadcastId === void 0) { broadcastId = null; }\r\n\t        if (this._func[type]) {\r\n\t            for (var i = 0; i < this._func[type].length; ++i) {\r\n\t                var f = this._func[type][i];\r\n\t                if (f)\r\n\t                    f.func(param);\r\n\t            }\r\n\t        }\r\n\t        if (this.broadcast && broadcastId)\r\n\t            this.broadcast(broadcastId, type, param);\r\n\t    };\r\n\t    EventDispatcher.prototype.proxy = function () {\r\n\t        var param = [];\r\n\t        for (var _i = 0; _i < arguments.length; _i++) {\r\n\t            param[_i - 0] = arguments[_i];\r\n\t        }\r\n\t        throw new Error(\"no proxy method!!!\");\r\n\t    };\r\n\t    ;\r\n\t    EventDispatcher.prototype.broadcast = function () {\r\n\t        var param = [];\r\n\t        for (var _i = 0; _i < arguments.length; _i++) {\r\n\t            param[_i - 0] = arguments[_i];\r\n\t        }\r\n\t        throw new Error(\"no broadcast method!!!\");\r\n\t    };\r\n\t    ;\r\n\t    EventDispatcher.prototype.del = function (type, funcId) {\r\n\t        if (funcId === void 0) { funcId = -1; }\r\n\t        if (this._func[type])\r\n\t            if (funcId < 0) {\r\n\t                this._func[type] = [];\r\n\t            }\r\n\t            else {\r\n\t                for (var i = 0; i < this._func[type].length; ++i) {\r\n\t                    var f = this._func[type][i];\r\n\t                    if (f) {\r\n\t                        if (f.id == funcId) {\r\n\t                            delete this._func[type][i];\r\n\t                            console.log('del event', type, funcId);\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t    };\r\n\t    EventDispatcher.prototype.removeAll = function () {\r\n\t        this._func = {};\r\n\t    };\r\n\t    return EventDispatcher;\r\n\t}());\r\n\texports.EventDispatcher = EventDispatcher;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar VueEx_1 = __webpack_require__(12);\r\n\tvar Const_1 = __webpack_require__(13);\r\n\tvar BasePanelView = (function (_super) {\r\n\t    __extends(BasePanelView, _super);\r\n\t    function BasePanelView() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    BasePanelView.prototype.initCanvas = function () {\r\n\t        this.stageWidth = Const_1.ViewConst.STAGE_WIDTH;\r\n\t        this.stageHeight = Const_1.ViewConst.STAGE_HEIGHT;\r\n\t        var canvas = document.getElementById(\"stage\");\r\n\t        if (canvas) {\r\n\t            canvas.setAttribute(\"width\", this.stageWidth + \"\");\r\n\t            canvas.setAttribute(\"height\", this.stageHeight + \"\");\r\n\t            var stage = new createjs.Stage(canvas);\r\n\t            stage.autoClear = true;\r\n\t            createjs.Ticker.framerate = 60;\r\n\t            createjs.Ticker.addEventListener(\"tick\", function () {\r\n\t                stage.update();\r\n\t            });\r\n\t            this.ctn = new createjs.Container();\r\n\t            stage.addChild(this.ctn);\r\n\t            this.stage = stage;\r\n\t        }\r\n\t    };\r\n\t    BasePanelView.prototype.ready = function (pid, isInitCanvas) {\r\n\t        var _this = this;\r\n\t        if (isInitCanvas === void 0) { isInitCanvas = true; }\r\n\t        this.isInitCanvas = isInitCanvas;\r\n\t        if (isInitCanvas)\r\n\t            this.initCanvas();\r\n\t        this.opReq = function (cmdId, param, callback) {\r\n\t            _this.$http.post(\"/panel/\" + pid + \"/\" + cmdId, param, callback);\r\n\t        };\r\n\t        var panel = this.$parent;\r\n\t        this.op = panel.isOp;\r\n\t        console.log(\"BasePanelView.ready\", panel.isOp);\r\n\t        return panel.connect();\r\n\t    };\r\n\t    return BasePanelView;\r\n\t}(VueEx_1.VueEx));\r\n\texports.BasePanelView = BasePanelView;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Vue = __webpack_require__(2);\r\n\tvar vue_class_component_1 = __webpack_require__(3);\r\n\texports.Component = vue_class_component_1.default;\r\n\tvar VueEx = (function (_super) {\r\n\t    __extends(VueEx, _super);\r\n\t    function VueEx() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    VueEx.prototype.ready = function () {\r\n\t        this.$parentMethods = this.$parent.$options.methods;\r\n\t    };\r\n\t    VueEx.prototype.getAttr = function (e, propName) {\r\n\t        var str = e.target.attributes[propName];\r\n\t        var a = str.split('=');\r\n\t        if (a.length === 2) {\r\n\t            return a[1];\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    VueEx.prototype.post = function (url, data, option) {\r\n\t        if (data)\r\n\t            this.$http.post(url, data, option);\r\n\t        else\r\n\t            this.$http.post(url, option);\r\n\t    };\r\n\t    VueEx.prototype.getElem = function (val) {\r\n\t        var _0 = val[0];\r\n\t        if (_0 == \"#\") {\r\n\t            return document.getElementById(val.substr(1));\r\n\t        }\r\n\t    };\r\n\t    return VueEx;\r\n\t}(Vue));\r\n\texports.VueEx = VueEx;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PanelId = {\r\n\t    stagePanel: 'stage',\r\n\t    winPanel: 'win',\r\n\t    actPanel: 'act',\r\n\t    screenPanel: 'screen',\r\n\t    playerPanel: 'player'\r\n\t};\r\n\texports.ServerConst = {\r\n\t    SEND_ASYNC: true,\r\n\t    DEF_AVATAR: '/img/panel/stage/blue.png'\r\n\t};\r\n\texports.ViewConst = {\r\n\t    STAGE_WIDTH: 1920,\r\n\t    STAGE_HEIGHT: 1080\r\n\t};\r\n\texports.TimerState = {\r\n\t    START_STR: 'start',\r\n\t    PAUSE_STR: 'pause',\r\n\t    PAUSE: 0,\r\n\t    RUNNING: 1\r\n\t};\r\n\texports.ViewEvent = {\r\n\t    PLAYER_EDIT: 'edit player',\r\n\t    STRAIGHT3_LEFT: 'STRAIGHT3_LEFT',\r\n\t    STRAIGHT3_RIGHT: 'STRAIGHT3_RIGHT'\r\n\t};\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar BaseInfo_1 = __webpack_require__(15);\r\n\tvar PlayerDoc = (function () {\r\n\t    function PlayerDoc() {\r\n\t        this.id = 0;\r\n\t        this.name = '';\r\n\t        this.phone = 0;\r\n\t        this.eloScore = 0;\r\n\t        this.style = 0;\r\n\t        this.avatar = \"\";\r\n\t        this.height = 0;\r\n\t        this.weight = 0;\r\n\t        this.dtScore = 0;\r\n\t        this.activityId = 0;\r\n\t        this.gameRec = [];\r\n\t        this.loseGameCount = 0;\r\n\t        this.winGameCount = 0;\r\n\t    }\r\n\t    return PlayerDoc;\r\n\t}());\r\n\tvar PlayerInfo = (function (_super) {\r\n\t    __extends(PlayerInfo, _super);\r\n\t    function PlayerInfo(playerData) {\r\n\t        _super.call(this);\r\n\t        this.playerData = new PlayerDoc();\r\n\t        this.isRed = true;\r\n\t        this.isMvp = false;\r\n\t        this.backNumber = 0;\r\n\t        if (playerData) {\r\n\t            if (playerData['playerData'] != null) {\r\n\t                this.playerData = BaseInfo_1.obj2Class(playerData.playerData, PlayerDoc);\r\n\t                this.setPlayerInfoFromData(playerData);\r\n\t            }\r\n\t            else {\r\n\t                this.playerData = BaseInfo_1.obj2Class(playerData, PlayerDoc);\r\n\t                this.setPlayerInfoFromData(playerData);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    PlayerInfo.prototype.setPlayerInfoFromData = function (data) {\r\n\t        if (data['isRed'] != null)\r\n\t            this.isRed = data.isRed;\r\n\t        if (data['isMvp'] != null)\r\n\t            this.isMvp = data.isMvp;\r\n\t        if (data['backNumber'] != null)\r\n\t            this.backNumber = data.backNumber;\r\n\t    };\r\n\t    PlayerInfo.prototype.getPlayerData = function () {\r\n\t        this.playerData['isRed'] = this.isRed;\r\n\t        this.playerData['isMvp'] = this.isMvp;\r\n\t        this.playerData['backNumber'] = this.backNumber;\r\n\t        return this.playerData;\r\n\t    };\r\n\t    PlayerInfo.prototype.id = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"id\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.phone = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"phone\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.name = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"name\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.activityId = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"activityId\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.eloScore = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"eloScore\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.dtScore = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"dtScore\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.style = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"style\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.avatar = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"avatar\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.gameRec = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"gameRec\", val);\r\n\t    };\r\n\t    PlayerInfo.winPercent = function (playerDoc) {\r\n\t        var p = playerDoc.winGameCount / PlayerInfo.gameCount(playerDoc);\r\n\t        if (!p)\r\n\t            p = 0;\r\n\t        return p;\r\n\t    };\r\n\t    PlayerInfo.winPercentStr = function (playerDoc) {\r\n\t        return (PlayerInfo.winPercent(playerDoc) * 100).toFixed(1) + \"%\";\r\n\t    };\r\n\t    PlayerInfo.prototype.winpercent = function (val) {\r\n\t        return this.winGameCount() / this.gameCount();\r\n\t    };\r\n\t    PlayerInfo.gameCount = function (playerDoc) {\r\n\t        return (playerDoc.loseGameCount + playerDoc.winGameCount) || 0;\r\n\t    };\r\n\t    PlayerInfo.prototype.gameCount = function () {\r\n\t        return this.loseGameCount() + this.winGameCount();\r\n\t    };\r\n\t    PlayerInfo.prototype.winGameCount = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"winGameCount\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.loseGameCount = function (val) {\r\n\t        return BaseInfo_1.prop(this.playerData, \"loseGameCount\", val);\r\n\t    };\r\n\t    PlayerInfo.prototype.getWinPercent = function () {\r\n\t        return (this.winpercent() * 100).toFixed(1) + \"%\";\r\n\t    };\r\n\t    PlayerInfo.getStyleIcon = function (style) {\r\n\t        var path = '/img/panel/stage/';\r\n\t        if (style === 1) {\r\n\t            path += 'feng.png';\r\n\t        }\r\n\t        else if (style === 2) {\r\n\t            path += 'lin.png';\r\n\t        }\r\n\t        else if (style === 3) {\r\n\t            path += 'huo.png';\r\n\t        }\r\n\t        else if (style === 4) {\r\n\t            path += 'shan.png';\r\n\t        }\r\n\t        return path;\r\n\t    };\r\n\t    PlayerInfo.prototype.getWinStyleIcon = function () {\r\n\t        var path = '/img/panel/stage/win/';\r\n\t        if (this.style() == 1) {\r\n\t            path += 'fengWin.png';\r\n\t        }\r\n\t        else if (this.style() == 2) {\r\n\t            path += 'linWin.png';\r\n\t        }\r\n\t        else if (this.style() == 3) {\r\n\t            path += 'huoWin.png';\r\n\t        }\r\n\t        else if (this.style() == 4) {\r\n\t            path += 'shanWin.png';\r\n\t        }\r\n\t        return path;\r\n\t    };\r\n\t    PlayerInfo.prototype.getRec = function () {\r\n\t        return { id: this.id(), eloScore: this.eloScore(), dtScore: this.dtScore() };\r\n\t    };\r\n\t    PlayerInfo.prototype.saveScore = function (dtScore, isWin) {\r\n\t        this.dtScore(dtScore);\r\n\t        this.eloScore(this.eloScore() + dtScore);\r\n\t        if (isWin) {\r\n\t            this.winGameCount(this.winGameCount() + 1);\r\n\t        }\r\n\t        else\r\n\t            this.loseGameCount(this.loseGameCount() + 1);\r\n\t    };\r\n\t    PlayerInfo.prototype.getCurWinningPercent = function () {\r\n\t        return this.winGameCount() / (this.loseGameCount() + this.winGameCount());\r\n\t    };\r\n\t    return PlayerInfo;\r\n\t}(BaseInfo_1.BaseInfo));\r\n\texports.PlayerInfo = PlayerInfo;\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.isdef = function (val) {\r\n\t    return val != undefined;\r\n\t};\r\n\texports.prop = function (obj, paramName, v, callback) {\r\n\t    if (exports.isdef(v)) {\r\n\t        obj[paramName] = v;\r\n\t        if (callback)\r\n\t            callback();\r\n\t    }\r\n\t    else\r\n\t        return obj[paramName];\r\n\t};\r\n\texports.obj2Class = function (obj, cls) {\r\n\t    var c = new cls;\r\n\t    for (var paramName in obj) {\r\n\t        c[paramName] = obj[paramName];\r\n\t    }\r\n\t    return c;\r\n\t};\r\n\tfunction setPropTo(data, obj) {\r\n\t    for (var key in data) {\r\n\t        if (obj.hasOwnProperty(key))\r\n\t            obj[key] = data[key];\r\n\t    }\r\n\t}\r\n\texports.setPropTo = setPropTo;\r\n\tvar BaseDoc = (function () {\r\n\t    function BaseDoc() {\r\n\t    }\r\n\t    return BaseDoc;\r\n\t}());\r\n\texports.BaseDoc = BaseDoc;\r\n\tvar BaseInfo = (function () {\r\n\t    function BaseInfo() {\r\n\t    }\r\n\t    return BaseInfo;\r\n\t}());\r\n\texports.BaseInfo = BaseInfo;\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar PlayerInfo_1 = __webpack_require__(14);\r\n\tvar PlayerRender_1 = __webpack_require__(17);\r\n\tvar PlayerPanel = (function () {\r\n\t    function PlayerPanel(parent) {\r\n\t        this.playerCardArr = [];\r\n\t        var ctn = parent.scorePanel.ctn;\r\n\t        var playerInfo = new PlayerInfo_1.PlayerInfo();\r\n\t        var px = 24;\r\n\t        var py = 12;\r\n\t        var invert = 150;\r\n\t        for (var i = 0; i < 4; i++) {\r\n\t            var playerCard = new PlayerRender_1.StagePlayerCard(playerInfo, 1, true, true);\r\n\t            playerCard.delayShow(i * 600);\r\n\t            playerCard.x = px + i * invert;\r\n\t            playerCard.y = py;\r\n\t            this.playerCardArr.push(playerCard);\r\n\t            ctn.addChild(playerCard);\r\n\t        }\r\n\t        px = 1247;\r\n\t        for (var i = 0; i < 4; i++) {\r\n\t            var playerCard = new PlayerRender_1.StagePlayerCard(playerInfo, 1, false, true);\r\n\t            playerCard.delayShow((3 - i) * 600);\r\n\t            playerCard.x = px + i * invert;\r\n\t            playerCard.y = py;\r\n\t            this.playerCardArr.push(playerCard);\r\n\t            ctn.addChild(playerCard);\r\n\t        }\r\n\t    }\r\n\t    PlayerPanel.prototype.setEloScore = function (idx, eloScore) {\r\n\t        this.playerCardArr[idx].setEloScore(eloScore);\r\n\t    };\r\n\t    PlayerPanel.prototype.setPlayer = function (idx, playerInfo) {\r\n\t        var playerCard = this.playerCardArr[idx];\r\n\t        playerCard.setPlayerInfo(playerInfo, 1, playerCard.isBlue);\r\n\t    };\r\n\t    PlayerPanel.prototype.init = function (gameDoc) {\r\n\t        for (var i = 0; i < gameDoc.playerInfoArr.length; i++) {\r\n\t            if (gameDoc.playerInfoArr[i]) {\r\n\t                this.setPlayer(i, new PlayerInfo_1.PlayerInfo(gameDoc.playerInfoArr[i]));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return PlayerPanel;\r\n\t}());\r\n\texports.PlayerPanel = PlayerPanel;\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar JsFunc_1 = __webpack_require__(18);\r\n\tvar PlayerInfo_1 = __webpack_require__(14);\r\n\tvar Fx_1 = __webpack_require__(19);\r\n\tvar Container = createjs.Container;\r\n\tvar StagePlayerCard = (function (_super) {\r\n\t    __extends(StagePlayerCard, _super);\r\n\t    function StagePlayerCard(playerInfo, scale, isBlue, isDelayShow) {\r\n\t        if (scale === void 0) { scale = 1; }\r\n\t        if (isBlue === void 0) { isBlue = true; }\r\n\t        if (isDelayShow === void 0) { isDelayShow = false; }\r\n\t        _super.call(this);\r\n\t        this._delayShowEnd = false;\r\n\t        this.isDelayShow = isDelayShow;\r\n\t        this.setPlayerInfo(playerInfo, scale, isBlue);\r\n\t    }\r\n\t    StagePlayerCard.prototype.setName = function (name) {\r\n\t        this.nameText.text = name;\r\n\t    };\r\n\t    StagePlayerCard.prototype.setEloScore = function (eloScore) {\r\n\t        this.eloScoreText.text = eloScore.toString();\r\n\t    };\r\n\t    StagePlayerCard.prototype.setBackNumber = function (backNumber) {\r\n\t        this.backNumText.text = backNumber.toString();\r\n\t    };\r\n\t    StagePlayerCard.prototype.setStyle = function (style) {\r\n\t        this._styleCtn.removeAllChildren();\r\n\t        var styleIcon = new createjs.Bitmap(PlayerInfo_1.PlayerInfo.getStyleIcon(style));\r\n\t        this._styleCtn.addChild(styleIcon);\r\n\t    };\r\n\t    StagePlayerCard.prototype.setPlayerInfo = function (playerInfo, scale, isBlue) {\r\n\t        var _this = this;\r\n\t        if (scale === void 0) { scale = 1; }\r\n\t        if (isBlue === void 0) { isBlue = true; }\r\n\t        this.isBlue = isBlue;\r\n\t        var ctn = this;\r\n\t        this.removeAllChildren();\r\n\t        function _isBluePath(p) {\r\n\t            if (isBlue)\r\n\t                return p + \"Blue.png\";\r\n\t            return p + \"Red.png\";\r\n\t        }\r\n\t        var avatarFrame = new createjs.Bitmap(_isBluePath('/img/panel/stage/avatarFrame'));\r\n\t        var avatarCtn = new createjs.Container();\r\n\t        this.avatarCtn = avatarCtn;\r\n\t        if (isBlue) {\r\n\t            avatarCtn.x = 19;\r\n\t            avatarCtn.y = 1;\r\n\t        }\r\n\t        else {\r\n\t            avatarCtn.x = 3;\r\n\t            avatarCtn.y = 1;\r\n\t        }\r\n\t        var avatarMask = new createjs.Shape();\r\n\t        var sx = 44;\r\n\t        if (isBlue)\r\n\t            avatarMask.graphics.beginFill(\"#000000\")\r\n\t                .moveTo(sx, 0)\r\n\t                .lineTo(0, 76)\r\n\t                .lineTo(180 - sx, 76)\r\n\t                .lineTo(180, 0)\r\n\t                .lineTo(sx, 0);\r\n\t        else {\r\n\t            avatarMask.graphics.beginFill(\"#000000\")\r\n\t                .moveTo(0, 0)\r\n\t                .lineTo(sx, 76)\r\n\t                .lineTo(180, 76)\r\n\t                .lineTo(180 - sx, 0)\r\n\t                .lineTo(0, 0);\r\n\t        }\r\n\t        var avatarPath;\r\n\t        if (isBlue)\r\n\t            avatarPath = '/img/panel/stage/blue.png';\r\n\t        else\r\n\t            avatarPath = '/img/panel/stage/red.png';\r\n\t        avatarPath = playerInfo.avatar() || avatarPath;\r\n\t        JsFunc_1.loadImg(avatarPath, function () {\r\n\t            var avatarBmp = new createjs.Bitmap(avatarPath);\r\n\t            avatarBmp.mask = avatarMask;\r\n\t            avatarCtn.addChild(avatarMask);\r\n\t            avatarCtn.addChild(avatarBmp);\r\n\t            _this.avatarBmp = avatarBmp;\r\n\t            if (_this.isDelayShow) {\r\n\t                if (_this._delayShowEnd) {\r\n\t                    Fx_1.blink(avatarBmp);\r\n\t                }\r\n\t                else {\r\n\t                    avatarBmp.alpha = 0;\r\n\t                }\r\n\t            }\r\n\t            avatarBmp.scaleX = avatarBmp.scaleY = 180 / avatarBmp.getBounds().width;\r\n\t        });\r\n\t        ctn.addChild(avatarCtn);\r\n\t        ctn.addChild(avatarFrame);\r\n\t        var backNumText = new createjs.Text(playerInfo.backNumber + \"\", \"18px Arial\", \"#fff\");\r\n\t        backNumText.y = 5;\r\n\t        this.backNumText = backNumText;\r\n\t        if (isBlue) {\r\n\t            backNumText.textAlign = \"right\";\r\n\t            backNumText.x = 182;\r\n\t        }\r\n\t        else {\r\n\t            backNumText.textAlign = \"left\";\r\n\t            backNumText.x = 15;\r\n\t        }\r\n\t        ctn.addChild(backNumText);\r\n\t        var eloText = '';\r\n\t        if (playerInfo.gameRec().length >= 3)\r\n\t            eloText = playerInfo.eloScore();\r\n\t        else {\r\n\t            var newPlayerIcon = new createjs.Bitmap('/img/panel/stage/newPlayer.png');\r\n\t            if (isBlue)\r\n\t                newPlayerIcon.x = 37;\r\n\t            else\r\n\t                newPlayerIcon.x = 139;\r\n\t            newPlayerIcon.y = 61;\r\n\t            ctn.addChild(newPlayerIcon);\r\n\t        }\r\n\t        console.log(\"player\" + playerInfo.name() + \"game Count\", playerInfo.gameCount());\r\n\t        var eloScoreText = new createjs.Text(eloText, \"18px Arial\", \"#fff\");\r\n\t        eloScoreText.y = 59;\r\n\t        this.eloScoreText = eloScoreText;\r\n\t        if (isBlue) {\r\n\t            eloScoreText.textAlign = \"left\";\r\n\t            eloScoreText.x = 31;\r\n\t        }\r\n\t        else {\r\n\t            eloScoreText.textAlign = \"right\";\r\n\t            eloScoreText.x = 172;\r\n\t        }\r\n\t        ctn.addChild(eloScoreText);\r\n\t        var styleCtn = new createjs.Container();\r\n\t        this._styleCtn = styleCtn;\r\n\t        var styleIcon = new createjs.Bitmap(PlayerInfo_1.PlayerInfo.getStyleIcon(playerInfo.style()));\r\n\t        if (isBlue) {\r\n\t            styleCtn.x = 110;\r\n\t        }\r\n\t        else {\r\n\t            styleCtn.x = 52;\r\n\t        }\r\n\t        styleCtn.y = 75;\r\n\t        Fx_1.blink(styleIcon);\r\n\t        styleCtn.addChild(styleIcon);\r\n\t        ctn.addChild(styleCtn);\r\n\t        var nameText = new createjs.Text(playerInfo.name(), \"bold 18px Arial\", \"#fff\");\r\n\t        this.nameText = nameText;\r\n\t        nameText.y = 84;\r\n\t        if (isBlue) {\r\n\t            nameText.textAlign = \"left\";\r\n\t            nameText.x = 16;\r\n\t        }\r\n\t        else {\r\n\t            nameText.textAlign = \"right\";\r\n\t            nameText.x = 185;\r\n\t        }\r\n\t        ctn.addChild(nameText);\r\n\t        return ctn;\r\n\t    };\r\n\t    StagePlayerCard.prototype.delayShow = function (delay) {\r\n\t        var _this = this;\r\n\t        console.log('delay show', delay);\r\n\t        this._delayShowEnd = false;\r\n\t        createjs.Tween.get(this.avatarCtn).wait(delay).call(function () {\r\n\t            _this._delayShowEnd = true;\r\n\t            if (_this.avatarBmp) {\r\n\t                Fx_1.blink(_this.avatarBmp);\r\n\t            }\r\n\t            if (_this._styleCtn) {\r\n\t                Fx_1.blink(_this._styleCtn);\r\n\t            }\r\n\t        });\r\n\t        Fx_1.delayCall(delay, function () {\r\n\t            _this.avatarBmp.alpha = 0;\r\n\t        });\r\n\t    };\r\n\t    StagePlayerCard.newScoreText = function () {\r\n\t        var sheet = new createjs.SpriteSheet({\r\n\t            animations: {\r\n\t                \"0\": 1,\r\n\t                \"1\": 2,\r\n\t                \"2\": 3,\r\n\t                \"3\": 4,\r\n\t                \"4\": 5,\r\n\t                \"5\": 6,\r\n\t                \"6\": 7,\r\n\t                \"7\": 8,\r\n\t                \"8\": 9,\r\n\t                \"9\": 0\r\n\t            },\r\n\t            images: [\"/img/panel/stage/scoreNum.png\"],\r\n\t            frames: [[0, 0, 40, 54],\r\n\t                [41, 0, 40, 54],\r\n\t                [0, 55, 40, 54],\r\n\t                [41, 55, 40, 54],\r\n\t                [82, 0, 40, 54],\r\n\t                [82, 55, 40, 54],\r\n\t                [123, 0, 40, 54],\r\n\t                [123, 55, 40, 54],\r\n\t                [0, 110, 40, 54],\r\n\t                [41, 110, 40, 54]]\r\n\t        });\r\n\t        return new createjs.BitmapText(\"0\", sheet);\r\n\t    };\r\n\t    return StagePlayerCard;\r\n\t}(Container));\r\n\texports.StagePlayerCard = StagePlayerCard;\r\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tfunction ascendingProp(prop) {\r\n\t    return function (a, b) {\r\n\t        return a[prop] - b[prop];\r\n\t    };\r\n\t}\r\n\texports.ascendingProp = ascendingProp;\r\n\tfunction descendingProp(prop) {\r\n\t    return function (a, b) {\r\n\t        return b[prop] - a[prop];\r\n\t    };\r\n\t}\r\n\texports.descendingProp = descendingProp;\r\n\tfunction mapToSortArray(map, prop, sortFunc) {\r\n\t    var arr = [];\r\n\t    for (var k in map) {\r\n\t        arr.push(map[k]);\r\n\t    }\r\n\t    arr.sort(sortFunc(prop));\r\n\t    return arr;\r\n\t}\r\n\texports.mapToSortArray = mapToSortArray;\r\n\tfunction mapToArr(map) {\r\n\t    var a = [];\r\n\t    for (var k in map) {\r\n\t        a.push(map[k]);\r\n\t    }\r\n\t    return a;\r\n\t}\r\n\texports.mapToArr = mapToArr;\r\n\tfunction arrCountSame(arrA, arrB) {\r\n\t    var n = 0;\r\n\t    for (var i = 0; i < arrB.length; i++) {\r\n\t        var obj = arrB[i];\r\n\t        if (arrA.indexOf(obj) > -1) {\r\n\t            n++;\r\n\t        }\r\n\t    }\r\n\t    return n;\r\n\t}\r\n\texports.arrCountSame = arrCountSame;\r\n\tfunction arrUniqueFilter(el, i, a) {\r\n\t    return i == a.indexOf(el);\r\n\t}\r\n\texports.arrUniqueFilter = arrUniqueFilter;\r\n\tfunction loadImg(path1, callback) {\r\n\t    var img = new Image();\r\n\t    img.onload = callback;\r\n\t    img.src = path1;\r\n\t}\r\n\texports.loadImg = loadImg;\r\n\tfunction loadImgArr(pathArr, callback) {\r\n\t    var count = pathArr.length;\r\n\t    function onLoadImg() {\r\n\t        count--;\r\n\t        if (count === 0)\r\n\t            callback();\r\n\t    }\r\n\t    for (var i = 0; i < pathArr.length; i++) {\r\n\t        var p = pathArr[i];\r\n\t        var img = new Image();\r\n\t        img.onload = onLoadImg;\r\n\t        img.src = p;\r\n\t    }\r\n\t}\r\n\texports.loadImgArr = loadImgArr;\r\n\tfunction combineArr(arr, num) {\r\n\t    var r = [];\r\n\t    (function f(t, a, n) {\r\n\t        if (n == 0) {\r\n\t            return r.push(t);\r\n\t        }\r\n\t        for (var i = 0, l = a.length; i <= l - n; i++) {\r\n\t            f(t.concat(a[i]), a.slice(i + 1), n - 1);\r\n\t        }\r\n\t    })([], arr, num);\r\n\t    return r;\r\n\t}\r\n\texports.combineArr = combineArr;\r\n\tfunction formatSecond(sec, minStr, secStr) {\r\n\t    if (minStr === void 0) { minStr = \":\"; }\r\n\t    if (secStr === void 0) { secStr = \"\"; }\r\n\t    var min = Math.floor(sec / 60);\r\n\t    var s = sec % 60;\r\n\t    var strMin = min + \"\";\r\n\t    var strSec = s + \"\";\r\n\t    if (min < 10)\r\n\t        strMin = \"0\" + strMin;\r\n\t    if (s < 10)\r\n\t        strSec = \"0\" + strSec;\r\n\t    return strMin + minStr + strSec + secStr;\r\n\t}\r\n\texports.formatSecond = formatSecond;\r\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tfunction delayCall(delay, callback) {\r\n\t    createjs.Tween.get(this).wait(delay).call(callback);\r\n\t}\r\n\texports.delayCall = delayCall;\r\n\tfunction blink(target, time, loop) {\r\n\t    if (time === void 0) { time = 80; }\r\n\t    if (loop === void 0) { loop = false; }\r\n\t    var blink = time;\r\n\t    createjs.Tween.get(target, { loop: loop })\r\n\t        .to({ alpha: 1 }, blink)\r\n\t        .to({ alpha: 0 }, blink)\r\n\t        .to({ alpha: 1 }, blink)\r\n\t        .to({ alpha: 0 }, blink)\r\n\t        .to({ alpha: 1 }, blink);\r\n\t}\r\n\texports.blink = blink;\r\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar JsFunc_1 = __webpack_require__(18);\r\n\tvar Const_1 = __webpack_require__(13);\r\n\tvar PlayerInfo_1 = __webpack_require__(14);\r\n\tvar EventPanel = (function () {\r\n\t    function EventPanel(parent) {\r\n\t        var ctn = new createjs.Container();\r\n\t        parent.stage.addChild(ctn);\r\n\t        this.ctn = ctn;\r\n\t    }\r\n\t    EventPanel.prototype.fadeInStraight3 = function (isRed) {\r\n\t        var _this = this;\r\n\t        console.log(\"straight score 3 isRed:\", isRed);\r\n\t        var isBusy = false;\r\n\t        isBusy = true;\r\n\t        this.ctn.removeAllChildren();\r\n\t        var ctn = new createjs.Container();\r\n\t        var basePath = '/img/panel/stage/straight3';\r\n\t        if (isRed)\r\n\t            basePath += 'Red.png';\r\n\t        else\r\n\t            basePath += 'Blue.png';\r\n\t        JsFunc_1.loadImg(basePath, function () {\r\n\t            var txt3 = new createjs.Bitmap(basePath);\r\n\t            var bound = txt3.getBounds();\r\n\t            txt3.x = -bound.width;\r\n\t            txt3.y = -bound.height;\r\n\t            ctn.addChild(txt3);\r\n\t            ctn.x = 1920 / 2 + 200;\r\n\t            ctn.y = 200;\r\n\t            ctn.alpha = 1;\r\n\t            ctn.scaleX = ctn.scaleY = 5;\r\n\t            _this.ctn.addChild(ctn);\r\n\t            createjs.Tween.get(ctn)\r\n\t                .to({ scaleX: 1, scaleY: 1 }, 150)\r\n\t                .wait(4000)\r\n\t                .to({ alpha: 0 }, 200).call(function () {\r\n\t                isBusy = false;\r\n\t            });\r\n\t        });\r\n\t    };\r\n\t    EventPanel.prototype.fadeInWinPanel = function (teamInfo, mvpIdx, mpvId) {\r\n\t        var mvp = Number(mvpIdx);\r\n\t        console.log(this, \"show fadeInWinPanel mvp:\", mvp);\r\n\t        var ctn = this.ctn;\r\n\t        var modal = new createjs.Shape();\r\n\t        modal.graphics.beginFill('#000').drawRect(0, 0, Const_1.ViewConst.STAGE_WIDTH, Const_1.ViewConst.STAGE_HEIGHT);\r\n\t        modal.alpha = .3;\r\n\t        ctn.addChild(modal);\r\n\t        var playerCtn = new createjs.Container();\r\n\t        ctn.addChild(playerCtn);\r\n\t        var isRedWin = (mvp > 3);\r\n\t        var isBlue = (mvp < 4);\r\n\t        var titlePath = \"/img/panel/stage/win/winPanelTitle\";\r\n\t        if (isRedWin)\r\n\t            titlePath += 'Red.png';\r\n\t        else\r\n\t            titlePath += 'Blue.png';\r\n\t        var titleCtn = new createjs.Container();\r\n\t        JsFunc_1.loadImg(titlePath, function () {\r\n\t            var title = new createjs.Bitmap(titlePath);\r\n\t            title.x = -419;\r\n\t            title.y = -158;\r\n\t            titleCtn.x = (Const_1.ViewConst.STAGE_WIDTH) * .5;\r\n\t            titleCtn.y = 198;\r\n\t            titleCtn.scaleX = titleCtn.scaleY = 5;\r\n\t            titleCtn.alpha = 0;\r\n\t            createjs.Tween.get(titleCtn).to({ scaleX: 1, scaleY: 1, alpha: 1 }, 150);\r\n\t            titleCtn.addChild(title);\r\n\t        });\r\n\t        ctn.addChild(titleCtn);\r\n\t        var prePlayerIsMvp = false;\r\n\t        playerCtn.x = (Const_1.ViewConst.STAGE_WIDTH - 4 * 390) * .5;\r\n\t        playerCtn.y = 300;\r\n\t        var start = 0;\r\n\t        if (!isBlue) {\r\n\t        }\r\n\t        for (var i = start; i < start + 4; i++) {\r\n\t            var pInfo;\r\n\t            pInfo = new PlayerInfo_1.PlayerInfo(teamInfo.playerInfoArr[i].playerData);\r\n\t            pInfo.isRed = teamInfo.playerInfoArr[i].isRed;\r\n\t            pInfo.isBlue = isBlue;\r\n\t            pInfo.isMvp = pInfo.id() == mpvId;\r\n\t            var playerCard = this.getWinPlayerCard(pInfo, function () {\r\n\t                var bound = playerCard.getBounds();\r\n\t                if (bound)\r\n\t                    playerCard.cache(bound.x, bound.y, bound.width, bound.height);\r\n\t            });\r\n\t            playerCard.x = i * 390;\r\n\t            if (pInfo.isMvp)\r\n\t                playerCard.y = -30;\r\n\t            else\r\n\t                playerCard.y = 0;\r\n\t            playerCard.px = playerCard.x;\r\n\t            playerCard.py = playerCard.y;\r\n\t            playerCard.x = 500;\r\n\t            playerCard.scaleX = playerCard.scaleY = 0.01;\r\n\t            createjs.Tween.get(playerCard)\r\n\t                .to({ x: playerCard.px, scaleX: 1.1, scaleY: 1.1 }, 200)\r\n\t                .to({ scaleX: 1, scaleY: 1 }, 60);\r\n\t            playerCtn.addChild(playerCard);\r\n\t            prePlayerIsMvp = pInfo.isMvp;\r\n\t        }\r\n\t    };\r\n\t    EventPanel.prototype.getWinPlayerCard = function (p, callback) {\r\n\t        var isMvp = p.isMvp;\r\n\t        var ctn = new createjs.Container();\r\n\t        console.log(\"playerCard=======:\", p.avatar());\r\n\t        JsFunc_1.loadImg(p.avatar(), function () {\r\n\t            var avatar = new createjs.Bitmap(p.avatar());\r\n\t            var scale = 80 / avatar.getBounds().height;\r\n\t            if (isMvp) {\r\n\t                avatar.scaleX = avatar.scaleY = 1.5 * scale;\r\n\t                avatar.x = (180 - 180 * 1.2) * .5 + 60;\r\n\t                avatar.y = 45 + 30;\r\n\t            }\r\n\t            else {\r\n\t                avatar.scaleX = avatar.scaleY = 1.2 * scale;\r\n\t                avatar.x = (180 - 180 * 1.2) * .5 + 60;\r\n\t                avatar.y = 50 + 30;\r\n\t            }\r\n\t            ctn.addChild(avatar);\r\n\t            var bgPath = '/img/panel/stage/win/playerBgWin';\r\n\t            if (p.isBlue)\r\n\t                bgPath += \"Blue\";\r\n\t            else\r\n\t                bgPath += \"Red\";\r\n\t            if (p.isMvp)\r\n\t                bgPath += \"Mvp\";\r\n\t            bgPath += '.png';\r\n\t            var bg = new createjs.Bitmap(bgPath);\r\n\t            if (p.isMvp) {\r\n\t                bg.x = -132;\r\n\t                bg.y = -105;\r\n\t            }\r\n\t            else {\r\n\t                bg.x = -116;\r\n\t                bg.y = -80;\r\n\t            }\r\n\t            ctn.addChild(bg);\r\n\t            var col;\r\n\t            if (p.isRed)\r\n\t                col = \"#e23f6b\";\r\n\t            else\r\n\t                col = \"#1ac3fa\";\r\n\t            var nameCol = \"#ddd\";\r\n\t            if (isMvp)\r\n\t                nameCol = \"#f1c236\";\r\n\t            var name;\r\n\t            if (isMvp)\r\n\t                name = new createjs.Text(p.name(), \"30px Arial\", nameCol);\r\n\t            else\r\n\t                name = new createjs.Text(p.name(), \"30px Arial\", col);\r\n\t            name.textAlign = 'center';\r\n\t            name.x = 90 + 60;\r\n\t            name.y = 200;\r\n\t            if (isMvp) {\r\n\t                name.x += 20;\r\n\t                name.y = 215;\r\n\t            }\r\n\t            ctn.addChild(name);\r\n\t            var eloScore;\r\n\t            var eloScoreText = '新秀';\r\n\t            if (p.gameCount() >= 3) {\r\n\t                eloScoreText = p.eloScore();\r\n\t            }\r\n\t            eloScore = new createjs.Text(eloScoreText, \"bold 32px Arial\", nameCol);\r\n\t            eloScore.textAlign = 'center';\r\n\t            eloScore.x = name.x;\r\n\t            eloScore.y = 245 + 30;\r\n\t            if (isMvp)\r\n\t                eloScore.y += 30;\r\n\t            ctn.addChild(eloScore);\r\n\t            var eloScoreDt = new createjs.Text(\"+\" + p.dtScore(), \"12px Arial\", col);\r\n\t            eloScoreDt.textAlign = 'left';\r\n\t            eloScoreDt.x = 140 + 60;\r\n\t            eloScoreDt.y = 260 + 30;\r\n\t            if (isMvp) {\r\n\t                eloScoreDt.x += 30;\r\n\t                eloScoreDt.y += 30;\r\n\t            }\r\n\t            ctn.addChild(eloScoreDt);\r\n\t            var winpercent = new createjs.Text(\"胜率\" + p.getWinPercent(), \"18px Arial\", col);\r\n\t            winpercent.textAlign = 'center';\r\n\t            winpercent.x = name.x;\r\n\t            winpercent.y = 320;\r\n\t            if (isMvp)\r\n\t                winpercent.y += 35;\r\n\t            ctn.addChild(winpercent);\r\n\t            var gameCount = new createjs.Text(\"场数\" + p.gameCount(), \"18px Arial\", col);\r\n\t            gameCount.textAlign = 'center';\r\n\t            gameCount.x = name.x;\r\n\t            gameCount.y = 350;\r\n\t            if (isMvp)\r\n\t                gameCount.y += 35;\r\n\t            ctn.addChild(gameCount);\r\n\t            var style = new createjs.Bitmap(p.getWinStyleIcon());\r\n\t            style.x = 110;\r\n\t            style.y = 370;\r\n\t            if (isMvp) {\r\n\t                style.x += 20;\r\n\t                style.y += 45;\r\n\t            }\r\n\t            ctn.addChild(style);\r\n\t            callback();\r\n\t        });\r\n\t        return ctn;\r\n\t    };\r\n\t    EventPanel.prototype.fadeOutWinPanel = function () {\r\n\t        console.log(this, \"show fade Out WinPanel\");\r\n\t        var ctn = this.ctn;\r\n\t        createjs.Tween.get(ctn).to({ alpha: 0 }, 200)\r\n\t            .call(function () {\r\n\t            ctn.alpha = 1;\r\n\t            ctn.removeAllChildren();\r\n\t        });\r\n\t    };\r\n\t    return EventPanel;\r\n\t}());\r\n\texports.EventPanel = EventPanel;\r\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar JsFunc_1 = __webpack_require__(18);\r\n\tvar GameInfo_1 = __webpack_require__(22);\r\n\tvar Fx_1 = __webpack_require__(19);\r\n\tvar Const_1 = __webpack_require__(13);\r\n\tvar ScorePanel = (function () {\r\n\t    function ScorePanel(parent) {\r\n\t        this.timeOnSec = 0;\r\n\t        var scoreCtn = new createjs.Container();\r\n\t        this.ctn = scoreCtn;\r\n\t        scoreCtn.y = parent.stageHeight - 132;\r\n\t        parent.stage.addChild(scoreCtn);\r\n\t        var bg = new createjs.Bitmap('/img/panel/stage/scoreBg.png');\r\n\t        bg.x = 1;\r\n\t        scoreCtn.addChild(bg);\r\n\t        var timeText = new createjs.Text(\"99:99\", \"28px Arial\", \"#fff\");\r\n\t        timeText.x = parent.stageWidth * .5 - 31;\r\n\t        timeText.y = 100;\r\n\t        this.timeText = timeText;\r\n\t        scoreCtn.addChild(timeText);\r\n\t        var sheet = new createjs.SpriteSheet({\r\n\t            animations: {\r\n\t                \"0\": 1, \"1\": 2, \"2\": 3, \"3\": 4, \"4\": 5,\r\n\t                \"5\": 6, \"6\": 7, \"7\": 8, \"8\": 9, \"9\": 0\r\n\t            },\r\n\t            images: [\"/img/panel/stage/scoreNum.png\"],\r\n\t            frames: [[0, 0, 40, 54],\r\n\t                [41, 0, 40, 54],\r\n\t                [0, 55, 40, 54],\r\n\t                [41, 55, 40, 54],\r\n\t                [82, 0, 40, 54],\r\n\t                [82, 55, 40, 54],\r\n\t                [123, 0, 40, 54],\r\n\t                [123, 55, 40, 54],\r\n\t                [0, 110, 40, 54],\r\n\t                [41, 110, 40, 54]]\r\n\t        });\r\n\t        var px = 865;\r\n\t        var leftScoreNum = new createjs.BitmapText(\"0\", sheet);\r\n\t        leftScoreNum.letterSpacing = -2;\r\n\t        leftScoreNum.x = px;\r\n\t        leftScoreNum.y = 60;\r\n\t        this.leftScoreText = leftScoreNum;\r\n\t        this.leftScoreTextX = leftScoreNum.x;\r\n\t        scoreCtn.addChild(leftScoreNum);\r\n\t        var rightScoreNum = new createjs.BitmapText(\"0\", sheet);\r\n\t        rightScoreNum.letterSpacing = -2;\r\n\t        rightScoreNum.x = px + 160;\r\n\t        rightScoreNum.y = leftScoreNum.y;\r\n\t        this.rightScoreText = rightScoreNum;\r\n\t        this.rightScoreTextX = rightScoreNum.x;\r\n\t        scoreCtn.addChild(rightScoreNum);\r\n\t        this.leftCircleArr = [];\r\n\t        this.rightCircleArr = [];\r\n\t        var px = 675;\r\n\t        var py = 88;\r\n\t        for (var i = 0; i < 7; i++) {\r\n\t            var leftScoreBg = new createjs.Bitmap(\"/img/panel/stage/leftScoreBg.png\");\r\n\t            leftScoreBg.x = px + i * 20;\r\n\t            leftScoreBg.y = py;\r\n\t            scoreCtn.addChild(leftScoreBg);\r\n\t            var leftScore = new createjs.Bitmap(\"/img/panel/stage/leftScore.png\");\r\n\t            leftScore.x = leftScoreBg.x;\r\n\t            leftScore.y = leftScoreBg.y;\r\n\t            scoreCtn.addChild(leftScore);\r\n\t            this.leftCircleArr.push(leftScore);\r\n\t        }\r\n\t        px = 1090;\r\n\t        for (var i = 0; i < 7; i++) {\r\n\t            var rightScoreBg = new createjs.Bitmap(\"/img/panel/stage/rightScoreBg.png\");\r\n\t            rightScoreBg.x = px + i * 20;\r\n\t            rightScoreBg.y = py;\r\n\t            scoreCtn.addChild(rightScoreBg);\r\n\t            var rightScore = new createjs.Bitmap(\"/img/panel/stage/rightScore.png\");\r\n\t            rightScore.x = rightScoreBg.x;\r\n\t            rightScore.y = rightScoreBg.y;\r\n\t            scoreCtn.addChild(rightScore);\r\n\t            this.rightCircleArr.push(rightScore);\r\n\t        }\r\n\t        px = 770;\r\n\t        var lTxt = new createjs.Text(\"\", \"28px Arial\", \"#fff\");\r\n\t        lTxt.text = '0';\r\n\t        lTxt.textAlign = 'center';\r\n\t        lTxt.x = px;\r\n\t        lTxt.y = 22;\r\n\t        this.leftAvgEloScoreText = lTxt;\r\n\t        scoreCtn.addChild(lTxt);\r\n\t        var rTxt = new createjs.Text(\"\", \"28px Arial\", \"#fff\");\r\n\t        rTxt.text = '0';\r\n\t        rTxt.textAlign = 'center';\r\n\t        rTxt.x = lTxt.x + 385;\r\n\t        rTxt.y = lTxt.y;\r\n\t        this.rightAvgEloScoreText = rTxt;\r\n\t        scoreCtn.addChild(rTxt);\r\n\t    }\r\n\t    Object.defineProperty(ScorePanel.prototype, \"isBlueWin\", {\r\n\t        get: function () {\r\n\t            return Number(this.leftScoreText.text) > Number(this.rightScoreText.text);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ScorePanel.prototype.setLeftScore = function (leftScore) {\r\n\t        this.leftScoreText.text = leftScore + \"\";\r\n\t        if (leftScore > 9)\r\n\t            this.leftScoreText.x = this.leftScoreTextX - 18;\r\n\t        else\r\n\t            this.leftScoreText.x = this.leftScoreTextX;\r\n\t        var len = this.leftCircleArr.length;\r\n\t        for (var i = 0; i < this.leftCircleArr.length; i++) {\r\n\t            if (i < leftScore) {\r\n\t                if (this.leftCircleArr[len - 1 - i].alpha == 0)\r\n\t                    Fx_1.blink(this.leftCircleArr[len - 1 - i]);\r\n\t            }\r\n\t            else {\r\n\t                createjs.Tween.get(this.leftCircleArr[len - 1 - i]).to({ alpha: 0 }, 200);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    ScorePanel.prototype.setRightScore = function (rightScore) {\r\n\t        if (rightScore > 9)\r\n\t            this.rightScoreText.x = this.rightScoreTextX - 18;\r\n\t        else\r\n\t            this.rightScoreText.x = this.rightScoreTextX;\r\n\t        this.rightScoreText.text = rightScore + \"\";\r\n\t        var len = this.rightCircleArr.length;\r\n\t        for (var i = 0; i < len; i++) {\r\n\t            if (i < rightScore) {\r\n\t                if (this.rightCircleArr[i].alpha == 0)\r\n\t                    Fx_1.blink(this.rightCircleArr[i]);\r\n\t            }\r\n\t            else {\r\n\t                createjs.Tween.get(this.rightCircleArr[i]).to({ alpha: 0 }, 200);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    ScorePanel.prototype.setAvgEloScore = function (data) {\r\n\t        this.leftAvgEloScoreText.text = data.left + \"\";\r\n\t        this.rightAvgEloScoreText.text = data.right + \"\";\r\n\t    };\r\n\t    ScorePanel.prototype.resetTimer = function () {\r\n\t        this.timeOnSec = 0;\r\n\t        this.timerState = Const_1.TimerState.PAUSE;\r\n\t        this.timeText.text = JsFunc_1.formatSecond(this.timeOnSec);\r\n\t    };\r\n\t    ScorePanel.prototype.toggleTimer1 = function () {\r\n\t        var _this = this;\r\n\t        if (this.timerId) {\r\n\t            clearInterval(this.timerId);\r\n\t            this.timerId = 0;\r\n\t            this.timerState = Const_1.TimerState.PAUSE;\r\n\t        }\r\n\t        else {\r\n\t            this.timerId = setInterval(function () {\r\n\t                _this.timeOnSec++;\r\n\t                _this.timeText.text = JsFunc_1.formatSecond(_this.timeOnSec);\r\n\t            }, 1000);\r\n\t            this.timerState = Const_1.TimerState.RUNNING;\r\n\t        }\r\n\t    };\r\n\t    ScorePanel.prototype.setTime = function (time, state) {\r\n\t        this.timeText.text = JsFunc_1.formatSecond(time);\r\n\t        this.timeOnSec = time;\r\n\t        if (state) {\r\n\t            this.toggleTimer1();\r\n\t        }\r\n\t    };\r\n\t    ScorePanel.prototype.init = function (gameInfo) {\r\n\t        this.setLeftScore(gameInfo.leftScore);\r\n\t        this.setRightScore(gameInfo.rightScore);\r\n\t        var gameInfoClone = new GameInfo_1.GameInfo(gameInfo);\r\n\t        this.setAvgEloScore(gameInfoClone.getAvgEloScore());\r\n\t    };\r\n\t    return ScorePanel;\r\n\t}());\r\n\texports.ScorePanel = ScorePanel;\r\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar TeamInfo_1 = __webpack_require__(23);\r\n\tvar PlayerInfo_1 = __webpack_require__(14);\r\n\tvar BaseInfo_1 = __webpack_require__(15);\r\n\tvar Const_1 = __webpack_require__(13);\r\n\tvar GameDoc = (function () {\r\n\t    function GameDoc() {\r\n\t        this.id = -1;\r\n\t        this.blueScore = 0;\r\n\t        this.redScore = 0;\r\n\t        this.mvp = 0;\r\n\t    }\r\n\t    return GameDoc;\r\n\t}());\r\n\texports.GameDoc = GameDoc;\r\n\tvar GameInfo = (function () {\r\n\t    function GameInfo(gameDoc) {\r\n\t        this.id = 0;\r\n\t        this.winScore = 7;\r\n\t        this.leftScore = 0;\r\n\t        this.rightScore = 0;\r\n\t        this.leftFoul = 0;\r\n\t        this.rightFoul = 0;\r\n\t        this.time = 0;\r\n\t        this.timerState = 0;\r\n\t        this.straightScoreLeft = 0;\r\n\t        this.straightScoreStack = [];\r\n\t        this.straightScoreRight = 0;\r\n\t        this.playerInfoArr = new Array(8);\r\n\t        this.playerRecArr = [];\r\n\t        this._timer = null;\r\n\t        this.gameState = 0;\r\n\t        this.unLimitScore = 0;\r\n\t        if (gameDoc) {\r\n\t            BaseInfo_1.setPropTo(gameDoc, this);\r\n\t            var playerDocArr = this.playerInfoArr;\r\n\t            this.playerInfoArr = [];\r\n\t            for (var i = 0; i < playerDocArr.length; i++) {\r\n\t                this.playerInfoArr.push(new PlayerInfo_1.PlayerInfo(playerDocArr[i]));\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    GameInfo.prototype.getAvgEloScore = function () {\r\n\t        var sum = 0;\r\n\t        var count = 0;\r\n\t        var leftPlayerArr = this.getLeftTeam();\r\n\t        for (var i = 0; i < leftPlayerArr.length; i++) {\r\n\t            var obj = leftPlayerArr[i];\r\n\t            if (obj) {\r\n\t                count++;\r\n\t                sum += obj.eloScore();\r\n\t            }\r\n\t        }\r\n\t        var left = Math.floor(sum / count);\r\n\t        sum = 0;\r\n\t        count = 0;\r\n\t        var playerArr = this.getRightTeam();\r\n\t        for (var i = 0; i < playerArr.length; i++) {\r\n\t            var obj = playerArr[i];\r\n\t            if (obj) {\r\n\t                count++;\r\n\t                sum += obj.eloScore();\r\n\t            }\r\n\t        }\r\n\t        var right = Math.floor(sum / count);\r\n\t        return { left: left, right: right };\r\n\t    };\r\n\t    GameInfo.prototype.addLeftScore = function () {\r\n\t        if (this.unLimitScore === 1)\r\n\t            this.leftScore += 1;\r\n\t        else\r\n\t            this.leftScore = (this.leftScore + 1) % (this.winScore + 1);\r\n\t        this.pushStraightScore();\r\n\t        this.straightScoreRight = 0;\r\n\t        this.straightScoreLeft++;\r\n\t        if (this.leftScore == 0)\r\n\t            this.straightScoreLeft = 0;\r\n\t        return this.straightScoreLeft;\r\n\t    };\r\n\t    GameInfo.prototype.minLeftScore = function () {\r\n\t        if (this.unLimitScore === 1)\r\n\t            this.leftScore -= 1;\r\n\t        else\r\n\t            this.leftScore = (this.leftScore - 1) % (this.winScore + 1);\r\n\t        this.popStraightScore();\r\n\t    };\r\n\t    GameInfo.prototype.pushStraightScore = function () {\r\n\t        this.straightScoreStack.push({ left: this.straightScoreLeft, right: this.straightScoreRight });\r\n\t    };\r\n\t    GameInfo.prototype.popStraightScore = function () {\r\n\t        var stack = this.straightScoreStack.pop();\r\n\t        this.straightScoreLeft = stack.left;\r\n\t        this.straightScoreRight = stack.right;\r\n\t    };\r\n\t    GameInfo.prototype.minRightScore = function () {\r\n\t        if (this.unLimitScore === 1)\r\n\t            this.rightScore -= 1;\r\n\t        else\r\n\t            this.rightScore = (this.rightScore - 1) % (this.winScore + 1);\r\n\t        this.popStraightScore();\r\n\t    };\r\n\t    GameInfo.prototype.addRightScore = function () {\r\n\t        if (this.unLimitScore === 1)\r\n\t            this.rightScore += 1;\r\n\t        else\r\n\t            this.rightScore = (this.rightScore + 1) % (this.winScore + 1);\r\n\t        this.pushStraightScore();\r\n\t        this.straightScoreLeft = 0;\r\n\t        this.straightScoreRight++;\r\n\t        if (this.rightScore == 0)\r\n\t            this.straightScoreRight = 0;\r\n\t        return this.straightScoreRight;\r\n\t    };\r\n\t    GameInfo.prototype.getGameId = function () {\r\n\t        return this.id;\r\n\t    };\r\n\t    GameInfo.prototype.toggleTimer = function (state) {\r\n\t        var _this = this;\r\n\t        if (state) {\r\n\t            if (state === Const_1.TimerState.PAUSE) {\r\n\t                this.resetTimer();\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            if (this._timer) {\r\n\t                this.resetTimer();\r\n\t            }\r\n\t            else {\r\n\t                this._timer = setInterval(function () {\r\n\t                    _this.time++;\r\n\t                }, 1000);\r\n\t                this.timerState = 1;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Object.defineProperty(GameInfo.prototype, \"isFinish\", {\r\n\t        get: function () {\r\n\t            return this.gameState === GameInfo.GAME_STATE_SAVE;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    GameInfo.prototype.resetTimer = function () {\r\n\t        clearInterval(this._timer);\r\n\t        this._timer = 0;\r\n\t        this.timerState = 0;\r\n\t    };\r\n\t    GameInfo.prototype.setPlayerInfoByIdx = function (pos, playerInfo) {\r\n\t        playerInfo.isBlue = (pos < 4);\r\n\t        playerInfo.isRed = !playerInfo.isBlue;\r\n\t        this.playerInfoArr[pos] = playerInfo;\r\n\t        return playerInfo;\r\n\t    };\r\n\t    GameInfo.prototype.setWinByMvpIdx = function (mvpIdx) {\r\n\t        var isBlueWin = (mvpIdx < 4);\r\n\t        this.mvpPlayerId = this.playerInfoArr[mvpIdx].id();\r\n\t        if (isBlueWin) {\r\n\t            return this.setLeftTeamWin();\r\n\t        }\r\n\t        else {\r\n\t            return this.setRightTeamWin();\r\n\t        }\r\n\t    };\r\n\t    GameInfo.prototype._setGameResult = function (isLeftWin) {\r\n\t        if (this.gameState === 0) {\r\n\t            var teamLeft = new TeamInfo_1.TeamInfo();\r\n\t            teamLeft.setPlayerArr(this.getLeftTeam());\r\n\t            var teamRight = new TeamInfo_1.TeamInfo();\r\n\t            teamRight.setPlayerArr(this.getRightTeam());\r\n\t            if (isLeftWin) {\r\n\t                teamLeft.beat2(teamRight, this.mvpPlayerId);\r\n\t                this._winTeam = teamLeft;\r\n\t                this._loseTeam = teamRight;\r\n\t            }\r\n\t            else {\r\n\t                teamRight.beat2(teamLeft, this.mvpPlayerId);\r\n\t                this._winTeam = teamRight;\r\n\t                this._loseTeam = teamLeft;\r\n\t            }\r\n\t            this.gameState = 1;\r\n\t        }\r\n\t        return this._winTeam;\r\n\t    };\r\n\t    GameInfo.prototype.getGameDoc = function () {\r\n\t        return {};\r\n\t    };\r\n\t    GameInfo.prototype.setLeftTeamWin = function () {\r\n\t        return this._setGameResult(true);\r\n\t    };\r\n\t    GameInfo.prototype.setRightTeamWin = function () {\r\n\t        return this._setGameResult(false);\r\n\t    };\r\n\t    GameInfo.prototype.getLeftTeam = function (start) {\r\n\t        if (start === void 0) { start = 0; }\r\n\t        var team = [];\r\n\t        for (var i = start; i < 4 + start; i++) {\r\n\t            var pInfo = this.playerInfoArr[i];\r\n\t            team.push(pInfo);\r\n\t            pInfo.isRed = (start > 0);\r\n\t        }\r\n\t        return team;\r\n\t    };\r\n\t    Object.defineProperty(GameInfo.prototype, \"isBlueWin\", {\r\n\t        get: function () {\r\n\t            return this.leftScore > this.rightScore;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    GameInfo.prototype.getRightTeam = function () {\r\n\t        return this.getLeftTeam(4);\r\n\t    };\r\n\t    GameInfo.prototype.addRightFoul = function () {\r\n\t        this.rightFoul++;\r\n\t        return this.rightFoul;\r\n\t    };\r\n\t    GameInfo.prototype.minRightFoul = function () {\r\n\t        this.rightFoul--;\r\n\t        return this.rightFoul;\r\n\t    };\r\n\t    GameInfo.prototype.addLeftFoul = function () {\r\n\t        this.leftFoul++;\r\n\t        return this.leftFoul;\r\n\t    };\r\n\t    GameInfo.prototype.minLeftFoul = function () {\r\n\t        this.leftFoul--;\r\n\t        return this.leftFoul;\r\n\t    };\r\n\t    GameInfo.GAME_STATE_ING = 0;\r\n\t    GameInfo.GAME_STATE_FIN = 1;\r\n\t    GameInfo.GAME_STATE_SAVE = 2;\r\n\t    return GameInfo;\r\n\t}());\r\n\texports.GameInfo = GameInfo;\r\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar EloUtil_1 = __webpack_require__(24);\r\n\tvar TeamInfo = (function () {\r\n\t    function TeamInfo() {\r\n\t        this.playerInfoArr = [];\r\n\t    }\r\n\t    TeamInfo.prototype.setPlayer = function (player, pos) {\r\n\t    };\r\n\t    TeamInfo.prototype.getPlayerInfoById = function (playerId) {\r\n\t        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n\t            var playerInfo = this.playerInfoArr[i];\r\n\t            if (playerInfo.id() == playerId) {\r\n\t                return playerInfo;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    TeamInfo.prototype.length = function () {\r\n\t        return this.playerInfoArr.length;\r\n\t    };\r\n\t    TeamInfo.prototype.push = function (playerInfo) {\r\n\t        this.playerInfoArr.push(playerInfo);\r\n\t    };\r\n\t    TeamInfo.prototype.setScore = function (score) {\r\n\t        this.score = score;\r\n\t    };\r\n\t    TeamInfo.prototype.setName = function (name) {\r\n\t        this.name = name;\r\n\t    };\r\n\t    TeamInfo.prototype.clear = function () {\r\n\t        this.score = 0;\r\n\t    };\r\n\t    TeamInfo.prototype.setPlayerArr = function (playerArr) {\r\n\t        this.playerInfoArr.length = 0;\r\n\t        this.playerInfoArr = this.playerInfoArr.concat(playerArr);\r\n\t        this.score = 0;\r\n\t        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n\t            var player = this.playerInfoArr[i];\r\n\t            this.score += player.eloScore();\r\n\t        }\r\n\t        this.score /= this.playerInfoArr.length;\r\n\t        console.log(this, \"player score:\", this.score);\r\n\t    };\r\n\t    TeamInfo.prototype.beat = function (loserTeam) {\r\n\t        var win = EloUtil_1.EloUtil.classicMethod(this.score, loserTeam.score);\r\n\t        this.saveScore(win, true);\r\n\t        loserTeam.saveScore(-win, false);\r\n\t    };\r\n\t    TeamInfo.prototype.beat2 = function (loserTeam, mvpPlayerId) {\r\n\t        var winTeamScore = this.score;\r\n\t        var loseTeamScore = loserTeam.score;\r\n\t        function getScoreArr(playerInArr, teamScore, isWin, mvpId) {\r\n\t            if (mvpId === void 0) { mvpId = -1; }\r\n\t            var scoreArr = [];\r\n\t            for (var i = 0; i < playerInArr.length; i++) {\r\n\t                var playerInfo = playerInArr[i];\r\n\t                var score = EloUtil_1.EloUtil.classicMethod(playerInfo.eloScore(), teamScore);\r\n\t                if (playerInfo.id() == mvpId) {\r\n\t                    var teamWinScore = EloUtil_1.EloUtil.classicMethod(winTeamScore, loseTeamScore);\r\n\t                    score += Math.floor(0.25 * teamWinScore);\r\n\t                }\r\n\t                if (!isWin)\r\n\t                    score = -score;\r\n\t                scoreArr.push(score);\r\n\t            }\r\n\t            return scoreArr;\r\n\t        }\r\n\t        var winScoreArr = getScoreArr(this.playerInfoArr, loseTeamScore, true, mvpPlayerId);\r\n\t        var loseScoreArr = getScoreArr(loserTeam.playerInfoArr, winTeamScore, false);\r\n\t        this.saveScoreArr(winScoreArr, true);\r\n\t        loserTeam.saveScoreArr(loseScoreArr, false);\r\n\t    };\r\n\t    TeamInfo.prototype.mix2 = function (teamInfo) {\r\n\t        var tmp;\r\n\t        tmp = this.playerInfoArr[1];\r\n\t        this.playerInfoArr[1] = teamInfo.playerInfoArr[3];\r\n\t        teamInfo.playerInfoArr[3] = tmp;\r\n\t        tmp = this.playerInfoArr[3];\r\n\t        this.playerInfoArr[3] = teamInfo.playerInfoArr[2];\r\n\t        teamInfo.playerInfoArr[2] = tmp;\r\n\t    };\r\n\t    TeamInfo.prototype.getPercentage = function () {\r\n\t    };\r\n\t    TeamInfo.prototype.saveScore = function (score, isWin) {\r\n\t        this.score += score;\r\n\t        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n\t            var player = this.playerInfoArr[i];\r\n\t            player.saveScore(score, isWin);\r\n\t        }\r\n\t    };\r\n\t    TeamInfo.prototype.saveScoreArr = function (scoreArr, isWin) {\r\n\t        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n\t            var score = scoreArr[i];\r\n\t            this.score += score;\r\n\t            var player = this.playerInfoArr[i];\r\n\t            player.saveScore(score, isWin);\r\n\t        }\r\n\t    };\r\n\t    TeamInfo.prototype.getNewPlayerDataArr = function () {\r\n\t        var a = [];\r\n\t        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n\t            var playerInfo = this.playerInfoArr[i];\r\n\t            a.push(playerInfo.getPlayerData());\r\n\t        }\r\n\t        return a;\r\n\t    };\r\n\t    TeamInfo.prototype.getWinningPercent = function () {\r\n\t        var wp;\r\n\t        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n\t            var player = this.playerInfoArr[i];\r\n\t            wp += player.getCurWinningPercent();\r\n\t        }\r\n\t        wp /= this.playerInfoArr.length;\r\n\t        return wp;\r\n\t    };\r\n\t    return TeamInfo;\r\n\t}());\r\n\texports.TeamInfo = TeamInfo;\r\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.EloConf = {\r\n\t    score: 2000,\r\n\t    K: 32\r\n\t};\r\n\tvar EloUtil = (function () {\r\n\t    function EloUtil() {\r\n\t    }\r\n\t    EloUtil.classicMethod = function (winEloScore, loseEloScore) {\r\n\t        var Elo1 = winEloScore;\r\n\t        var Elo2 = loseEloScore;\r\n\t        var K = exports.EloConf.K;\r\n\t        var EloDifference = Elo2 - Elo1;\r\n\t        var percentage = 1 / (1 + Math.pow(10, EloDifference / 400));\r\n\t        var win = Math.round(K * (1 - percentage));\r\n\t        return win;\r\n\t    };\r\n\t    EloUtil.playerToWinMethod = function (winEloScore, loseEloScore) {\r\n\t    };\r\n\t    return EloUtil;\r\n\t}());\r\n\texports.EloUtil = EloUtil;\r\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<style>\\r\\n    #stage-panel {\\r\\n        position: absolute;\\r\\n        width: 950px;\\r\\n        left: 100px;\\r\\n        top: 80px;\\r\\n        opacity: .8;\\r\\n    }\\r\\n</style>\\r\\n<div id=\\\"stage-panel\\\" class=\\\"card-panel grey lighten-3\\\" v-if=\\\"op\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\" v-for=\\\"playerInfo in playerInfoArr\\\">\\r\\n            <div class=\\\"col\\\" style=\\\"width: 85px\\\">\\r\\n                <img src=\\\"/img/panel/stage/blue.png\\\" id=\\\"playerImg{{$index}}\\\" style=\\\"width: 80px\\\">\\r\\n                <input id=\\\"player{{$index}}\\\" type=\\\"text\\\" @keyup.enter=\\\"onQueryPlayer($index)\\\" style=\\\"width: 75px\\\">\\r\\n                <input id=\\\"playerNum{{$index}}\\\" type=\\\"text\\\" @keyup.enter=\\\"onUpdatePlayerNum($index)\\\"\\r\\n                       style=\\\"width: 35px\\\">\\r\\n                <a class=\\\"waves-effect waves-light btn\\\" style=\\\"width: 75px;height: 25px\\\"\\r\\n                   @click=\\\"onUpdatePlayer($index)\\\">↓</a>\\r\\n                <p>\\r\\n                    <input name=\\\"mvp\\\" type=\\\"radio\\\" id=\\\"mvp{{$index}}\\\" value=\\\"{{$index}}\\\" v-model=\\\"mvpIdx\\\"/>\\r\\n                    <label for=\\\"mvp{{$index}}\\\">mvp{{$index}}</label>\\r\\n                    <!--<input id=\\\"eloScore{{$index}}\\\" type=\\\"text\\\" @keyup.enter=\\\"onSetEloScore($index)\\\" style=\\\"width: 75px\\\">-->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        game id:{{gameId}}\\r\\n        ````````````````````````````````````````\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onStarting\\\">starting line</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onUpdateBackNum\\\">back num</a>\\r\\n        ````````````````````````````````````````\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"display: inline-flex\\\">\\r\\n        <div class=\\\"switch\\\">\\r\\n            <label>\\r\\n                pause\\r\\n                <input type=\\\"checkbox\\\" @click=\\\"onToggleTimer\\\">\\r\\n                <span class=\\\"lever\\\"></span>\\r\\n                start::::::::\\r\\n            </label>\\r\\n        </div>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onResetTimer\\\" style=\\\"height: 35px\\\">Reset</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddLeftScore\\\">Left++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinLeftScore\\\">Left--</a>\\r\\n        <input type=\\\"checkbox\\\" id=\\\"test5\\\"/>\\r\\n        <label for=\\\"test5\\\">///////不限制分数\\\\\\\\\\\\\\\\\\\\\\\\\\\\</label>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinRightScore\\\">Right--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddRightScore\\\">Right++</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onShowWin\\\">Show Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onHideWin\\\">Hide Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onSubmitGame\\\">Submit Game</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onRefresh\\\">Refresh</a>\\r\\n    </div>\\r\\n</div>\\r\\n<div style=\\\"display: none\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinBlue.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinBlueMvp.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinRed.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinRedMvp.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/winPanelTitleBlue.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/winPanelTitleRed.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/fengWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/huoWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/shanWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/linWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/newPlayer.png\\\">\\r\\n</div>\";\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t})\n\t\n\tvar Vue = __webpack_require__(4)\n\t\n\tvar internalHooks = [\n\t  'data',\n\t  'el',\n\t  'init',\n\t  'created',\n\t  'ready',\n\t  'beforeCompile',\n\t  'compiled',\n\t  'beforeDestroy',\n\t  'destroyed',\n\t  'attached',\n\t  'detached',\n\t  'activate'\n\t]\n\t\n\tfunction componentFactory (Component, options) {\n\t  if (!options) {\n\t    options = {}\n\t  }\n\t  options.name = options.name || Component.name\n\t  // prototype props.\n\t  var proto = Component.prototype\n\t  Object.getOwnPropertyNames(proto).forEach(function (key) {\n\t    if (key === 'constructor') {\n\t      return\n\t    }\n\t    // hooks\n\t    if (internalHooks.indexOf(key) > -1) {\n\t      options[key] = proto[key]\n\t      return\n\t    }\n\t    var descriptor = Object.getOwnPropertyDescriptor(proto, key)\n\t    if (typeof descriptor.value === 'function') {\n\t      // methods\n\t      (options.methods || (options.methods = {}))[key] = descriptor.value\n\t    } else if (descriptor.get || descriptor.set) {\n\t      // computed properties\n\t      (options.computed || (options.computed = {}))[key] = {\n\t        get: descriptor.get,\n\t        set: descriptor.set\n\t      }\n\t    }\n\t  })\n\t  // find super\n\t  var superProto = Object.getPrototypeOf(Component.prototype)\n\t  var Super = superProto instanceof Vue\n\t    ? superProto.constructor\n\t    : Vue\n\t  return Super.extend(options)\n\t}\n\t\n\tfunction decorator (options) {\n\t  if (typeof options === 'function') {\n\t    return componentFactory(options)\n\t  }\n\t  return function (Component) {\n\t    return componentFactory(Component, options)\n\t  }\n\t}\n\t\n\texports.default = decorator\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PanelId = {\r\n\t    stagePanel: 'stage',\r\n\t    winPanel: 'win',\r\n\t    actPanel: 'act',\r\n\t    screenPanel: 'screen',\r\n\t    playerPanel: 'player'\r\n\t};\r\n\texports.ServerConst = {\r\n\t    SEND_ASYNC: true,\r\n\t    DEF_AVATAR: '/img/panel/stage/blue.png'\r\n\t};\r\n\texports.ViewConst = {\r\n\t    STAGE_WIDTH: 1920,\r\n\t    STAGE_HEIGHT: 1080\r\n\t};\r\n\texports.TimerState = {\r\n\t    START_STR: 'start',\r\n\t    PAUSE_STR: 'pause',\r\n\t    PAUSE: 0,\r\n\t    RUNNING: 1\r\n\t};\r\n\texports.ViewEvent = {\r\n\t    PLAYER_EDIT: 'edit player',\r\n\t    STRAIGHT3_LEFT: 'STRAIGHT3_LEFT',\r\n\t    STRAIGHT3_RIGHT: 'STRAIGHT3_RIGHT'\r\n\t};\r\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar EventDispatcher_1 = __webpack_require__(10);\r\n\t(function (CommandId) {\r\n\t    CommandId[CommandId[\"ShowConsoleWin\"] = 100000] = \"ShowConsoleWin\";\r\n\t    CommandId[CommandId[\"toggleTracker\"] = 100001] = \"toggleTracker\";\r\n\t    CommandId[CommandId[\"toggleBallRolling\"] = 100002] = \"toggleBallRolling\";\r\n\t    CommandId[CommandId[\"toggleTimer\"] = 100003] = \"toggleTimer\";\r\n\t    CommandId[CommandId[\"cs_toggleTimer\"] = 100004] = \"cs_toggleTimer\";\r\n\t    CommandId[CommandId[\"resetTimer\"] = 100005] = \"resetTimer\";\r\n\t    CommandId[CommandId[\"cs_resetTimer\"] = 100006] = \"cs_resetTimer\";\r\n\t    CommandId[CommandId[\"disableTracker\"] = 100007] = \"disableTracker\";\r\n\t    CommandId[CommandId[\"updateLeftScore\"] = 100008] = \"updateLeftScore\";\r\n\t    CommandId[CommandId[\"cs_addLeftScore\"] = 100009] = \"cs_addLeftScore\";\r\n\t    CommandId[CommandId[\"updateRightScore\"] = 100010] = \"updateRightScore\";\r\n\t    CommandId[CommandId[\"cs_addRightScore\"] = 100011] = \"cs_addRightScore\";\r\n\t    CommandId[CommandId[\"minLeftScore\"] = 100012] = \"minLeftScore\";\r\n\t    CommandId[CommandId[\"cs_minLeftScore\"] = 100013] = \"cs_minLeftScore\";\r\n\t    CommandId[CommandId[\"minRightScore\"] = 100014] = \"minRightScore\";\r\n\t    CommandId[CommandId[\"cs_minRightScore\"] = 100015] = \"cs_minRightScore\";\r\n\t    CommandId[CommandId[\"updateLeftFoul\"] = 100016] = \"updateLeftFoul\";\r\n\t    CommandId[CommandId[\"cs_addLeftFoul\"] = 100017] = \"cs_addLeftFoul\";\r\n\t    CommandId[CommandId[\"cs_minLeftFoul\"] = 100018] = \"cs_minLeftFoul\";\r\n\t    CommandId[CommandId[\"updateRightFoul\"] = 100019] = \"updateRightFoul\";\r\n\t    CommandId[CommandId[\"cs_addRightFoul\"] = 100020] = \"cs_addRightFoul\";\r\n\t    CommandId[CommandId[\"cs_minRightFoul\"] = 100021] = \"cs_minRightFoul\";\r\n\t    CommandId[CommandId[\"stageFadeOut\"] = 100022] = \"stageFadeOut\";\r\n\t    CommandId[CommandId[\"cs_fadeOut\"] = 100023] = \"cs_fadeOut\";\r\n\t    CommandId[CommandId[\"playerScore\"] = 100024] = \"playerScore\";\r\n\t    CommandId[CommandId[\"cs_playerScore\"] = 100025] = \"cs_playerScore\";\r\n\t    CommandId[CommandId[\"stageFadeIn\"] = 100026] = \"stageFadeIn\";\r\n\t    CommandId[CommandId[\"cs_stageFadeIn\"] = 100027] = \"cs_stageFadeIn\";\r\n\t    CommandId[CommandId[\"moveStagePanel\"] = 100028] = \"moveStagePanel\";\r\n\t    CommandId[CommandId[\"cs_moveStagePanel\"] = 100029] = \"cs_moveStagePanel\";\r\n\t    CommandId[CommandId[\"updatePlayer\"] = 100030] = \"updatePlayer\";\r\n\t    CommandId[CommandId[\"cs_updatePlayer\"] = 100031] = \"cs_updatePlayer\";\r\n\t    CommandId[CommandId[\"updatePlayerAll\"] = 100032] = \"updatePlayerAll\";\r\n\t    CommandId[CommandId[\"cs_updatePlayerAll\"] = 100033] = \"cs_updatePlayerAll\";\r\n\t    CommandId[CommandId[\"cs_updatePlayerBackNum\"] = 100034] = \"cs_updatePlayerBackNum\";\r\n\t    CommandId[CommandId[\"updatePlayerBackNum\"] = 100035] = \"updatePlayerBackNum\";\r\n\t    CommandId[CommandId[\"fadeInNotice\"] = 100036] = \"fadeInNotice\";\r\n\t    CommandId[CommandId[\"cs_fadeInNotice\"] = 100037] = \"cs_fadeInNotice\";\r\n\t    CommandId[CommandId[\"cs_resetGame\"] = 100038] = \"cs_resetGame\";\r\n\t    CommandId[CommandId[\"cs_unLimitScore\"] = 100039] = \"cs_unLimitScore\";\r\n\t    CommandId[CommandId[\"unLimitScore\"] = 100040] = \"unLimitScore\";\r\n\t    CommandId[CommandId[\"fadeInWinPanel\"] = 100041] = \"fadeInWinPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInWinPanel\"] = 100042] = \"cs_fadeInWinPanel\";\r\n\t    CommandId[CommandId[\"fadeOutWinPanel\"] = 100043] = \"fadeOutWinPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeOutWinPanel\"] = 100044] = \"cs_fadeOutWinPanel\";\r\n\t    CommandId[CommandId[\"saveGameRec\"] = 100045] = \"saveGameRec\";\r\n\t    CommandId[CommandId[\"cs_saveGameRec\"] = 100046] = \"cs_saveGameRec\";\r\n\t    CommandId[CommandId[\"cs_queryPlayerByPos\"] = 100047] = \"cs_queryPlayerByPos\";\r\n\t    CommandId[CommandId[\"fadeInPlayerPanel\"] = 100048] = \"fadeInPlayerPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInPlayerPanel\"] = 100049] = \"cs_fadeInPlayerPanel\";\r\n\t    CommandId[CommandId[\"fadeOutPlayerPanel\"] = 100050] = \"fadeOutPlayerPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeOutPlayerPanel\"] = 100051] = \"cs_fadeOutPlayerPanel\";\r\n\t    CommandId[CommandId[\"movePlayerPanel\"] = 100052] = \"movePlayerPanel\";\r\n\t    CommandId[CommandId[\"cs_movePlayerPanel\"] = 100053] = \"cs_movePlayerPanel\";\r\n\t    CommandId[CommandId[\"straightScore3\"] = 100054] = \"straightScore3\";\r\n\t    CommandId[CommandId[\"straightScore5\"] = 100055] = \"straightScore5\";\r\n\t    CommandId[CommandId[\"initPanel\"] = 100056] = \"initPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInActivityPanel\"] = 100057] = \"cs_fadeInActivityPanel\";\r\n\t    CommandId[CommandId[\"fadeInActivityPanel\"] = 100058] = \"fadeInActivityPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInNextActivity\"] = 100059] = \"cs_fadeInNextActivity\";\r\n\t    CommandId[CommandId[\"fadeInNextActivity\"] = 100060] = \"fadeInNextActivity\";\r\n\t    CommandId[CommandId[\"cs_fadeInActivityExGame\"] = 100061] = \"cs_fadeInActivityExGame\";\r\n\t    CommandId[CommandId[\"fadeInActivityExGame\"] = 100062] = \"fadeInActivityExGame\";\r\n\t    CommandId[CommandId[\"cs_fadeOutActivityPanel\"] = 100063] = \"cs_fadeOutActivityPanel\";\r\n\t    CommandId[CommandId[\"fadeOutActivityPanel\"] = 100064] = \"fadeOutActivityPanel\";\r\n\t    CommandId[CommandId[\"cs_startGame\"] = 100065] = \"cs_startGame\";\r\n\t    CommandId[CommandId[\"cs_restartGame\"] = 100066] = \"cs_restartGame\";\r\n\t    CommandId[CommandId[\"cs_fadeInRankPanel\"] = 100067] = \"cs_fadeInRankPanel\";\r\n\t    CommandId[CommandId[\"fadeInRankPanel\"] = 100068] = \"fadeInRankPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInNextRank\"] = 100069] = \"cs_fadeInNextRank\";\r\n\t    CommandId[CommandId[\"fadeInNextRank\"] = 100070] = \"fadeInNextRank\";\r\n\t    CommandId[CommandId[\"cs_setGameComing\"] = 100071] = \"cs_setGameComing\";\r\n\t    CommandId[CommandId[\"setGameComing\"] = 100072] = \"setGameComing\";\r\n\t    CommandId[CommandId[\"cs_fadeOutRankPanel\"] = 100073] = \"cs_fadeOutRankPanel\";\r\n\t    CommandId[CommandId[\"fadeOutRankPanel\"] = 100074] = \"fadeOutRankPanel\";\r\n\t    CommandId[CommandId[\"cs_fadeInCountDown\"] = 100075] = \"cs_fadeInCountDown\";\r\n\t    CommandId[CommandId[\"fadeInCountDown\"] = 100076] = \"fadeInCountDown\";\r\n\t    CommandId[CommandId[\"cs_fadeOutCountDown\"] = 100077] = \"cs_fadeOutCountDown\";\r\n\t    CommandId[CommandId[\"fadeOutCountDown\"] = 100078] = \"fadeOutCountDown\";\r\n\t    CommandId[CommandId[\"cs_inScreenScore\"] = 100079] = \"cs_inScreenScore\";\r\n\t    CommandId[CommandId[\"inScreenScore\"] = 100080] = \"inScreenScore\";\r\n\t    CommandId[CommandId[\"cs_findPlayerData\"] = 100081] = \"cs_findPlayerData\";\r\n\t})(exports.CommandId || (exports.CommandId = {}));\r\n\tvar CommandId = exports.CommandId;\r\n\tvar CommandItem = (function () {\r\n\t    function CommandItem(id) {\r\n\t        this.id = id;\r\n\t    }\r\n\t    return CommandItem;\r\n\t}());\r\n\tvar Command = (function (_super) {\r\n\t    __extends(Command, _super);\r\n\t    function Command() {\r\n\t        _super.call(this);\r\n\t        this.cmdArr = [];\r\n\t        this.newCmd(CommandId.updateLeftScore, \"addLeftScore\");\r\n\t        this.newCmd(CommandId.updateRightScore, \"addRightScore\");\r\n\t        this.newCmd(CommandId.toggleTracker, \"toggleTracker\");\r\n\t        this.newCmd(CommandId.toggleTimer, \"toggleTimer\");\r\n\t        this.newCmd(CommandId.toggleBallRolling, \"toggleBallRolling\");\r\n\t        this.newCmd(CommandId.disableTracker, \"disableTracker\");\r\n\t    }\r\n\t    Command.prototype.newCmd = function (id, name, desc) {\r\n\t        var ci = new CommandItem(id);\r\n\t        ci.name = name;\r\n\t        ci.desc = desc;\r\n\t        this.cmdArr.push(ci);\r\n\t    };\r\n\t    return Command;\r\n\t}(EventDispatcher_1.EventDispatcher));\r\n\texports.Command = Command;\r\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<style>\\r\\n    #stage-panel {\\r\\n        /*position: absolute;*/\\r\\n        /*width: 950px;*/\\r\\n        /*left: 100px;*/\\r\\n        /*top: 80px;*/\\r\\n        /*opacity: .8;*/\\r\\n        /*zoom: 2;*/\\r\\n    }\\r\\n</style>\\r\\n<div id=\\\"stage-panel\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        game id:{{gameId}}\\r\\n        ````````````````````````````````````````\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onStarting\\\">starting line</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onUpdateBackNum\\\">back num</a>\\r\\n        ````````````````````````````````````````\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"display: inline-flex\\\">\\r\\n        <div class=\\\"switch\\\">\\r\\n            <label>\\r\\n                pause\\r\\n                <input type=\\\"checkbox\\\" @click=\\\"onToggleTimer\\\">\\r\\n                <span class=\\\"lever\\\"></span>\\r\\n                start::::::::\\r\\n            </label>\\r\\n        </div>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onResetTimer\\\" style=\\\"height: 35px\\\">Reset</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddLeftScore\\\">Left++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinLeftScore\\\">Left--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddLeftFoul\\\">Foul++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinLeftFoul\\\">Foul--</a>\\r\\n        <input type=\\\"checkbox\\\" id=\\\"test5\\\"/>\\r\\n        <label for=\\\"test5\\\">///////不限制分数\\\\\\\\\\\\\\\\\\\\\\\\\\\\</label>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinRightScore\\\">Right--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddRightScore\\\">Right++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinRightFoul\\\">Foul--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddRightFoul\\\">Foul++</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onShowWin\\\">Show Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onHideWin\\\">Hide Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onSubmitGame\\\">Submit Game</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onRefresh\\\">Refresh</a>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onComingActivity\\\">Coming Act</a>\\r\\n    </div>\\r\\n</div>\";\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar VueEx_1 = __webpack_require__(1);\r\n\tvar Const_1 = __webpack_require__(32);\r\n\tvar Setting = (function (_super) {\r\n\t    __extends(Setting, _super);\r\n\t    function Setting() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    Setting.prototype.onServerIP = function (v) {\r\n\t        console.log(\"onServerIP\" + v);\r\n\t        Const_1.appModel.ip = v;\r\n\t    };\r\n\t    Setting = __decorate([\r\n\t        VueEx_1.Component({\r\n\t            template: __webpack_require__(31),\r\n\t            props: {\r\n\t                serverIP: {\r\n\t                    type: String,\r\n\t                    required: true,\r\n\t                    default: '192.168.1.73'\r\n\t                }\r\n\t            },\r\n\t            watch: {\r\n\t                serverIP: 'onServerIP'\r\n\t            }\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], Setting);\r\n\t    return Setting;\r\n\t}(VueEx_1.VueEx));\r\n\texports.Setting = Setting;\r\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"container\\\">\\r\\n    <input type=\\\"text\\\" v-model=\\\"serverIP\\\"/>\\r\\n</div>\";\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (EventId) {\r\n\t    EventId[EventId[\"setting_serverIPChanged\"] = 0] = \"setting_serverIPChanged\";\r\n\t})(exports.EventId || (exports.EventId = {}));\r\n\tvar EventId = exports.EventId;\r\n\tvar AppModel = (function () {\r\n\t    function AppModel() {\r\n\t        this.ip = '192.168.1.73';\r\n\t    }\r\n\t    return AppModel;\r\n\t}());\r\n\tvar appModel = new AppModel();\r\n\texports.appModel = appModel;\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** js/mobile.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap da1dd0a2ce8ddd7dfb64\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar StagePanelViewMobile_1 = require(\"./StagePanelViewMobile\");\r\nvar Setting_1 = require(\"./setting/Setting\");\r\nvar Vue = require('vue');\r\nvar MobileView = (function (_super) {\r\n    __extends(MobileView, _super);\r\n    function MobileView() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    MobileView.prototype.ready = function () {\r\n        console.log('mobile ready');\r\n    };\r\n    MobileView.prototype.connect = function () {\r\n    };\r\n    return MobileView;\r\n}(Vue));\r\nexports.MobileView = MobileView;\r\nVue.use(require('vue-resource'));\r\nvar VueRouter = require('vue-router');\r\nvar Const_1 = require(\"../model/Const\");\r\nVue.use(VueRouter);\r\nvar router = new VueRouter();\r\nrouter.map({\r\n    '/': {\r\n        component: Setting_1.Setting,\r\n        name: 'home'\r\n    },\r\n    '/panel/stage/op': {\r\n        component: StagePanelViewMobile_1.StagePanelViewMobile,\r\n        name: 'stage'\r\n    },\r\n    '/setting': {\r\n        component: Setting_1.Setting,\r\n        name: 'setting'\r\n    },\r\n});\r\nrouter.afterEach(function (transition) {\r\n    var toPath = transition.to.path;\r\n    router.app.isOp = /\\/op/.test(toPath);\r\n    router.app.$on(\"\" + Const_1.EventId.setting_serverIPChanged, function (ip) {\r\n        console.log(ip);\r\n    });\r\n    console.log('after each!!!', toPath);\r\n});\r\nfunction onDeviceReady() {\r\n    console.log('onDeviceReady');\r\n    router.start(MobileView, '#app');\r\n}\r\ndocument.addEventListener('deviceready', onDeviceReady, false);\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/mobile/index.ts\n ** module id = 0\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Vue = require('vue');\r\nvar vue_class_component_1 = require(\"vue-class-component\");\r\nexports.Component = vue_class_component_1.default;\r\nvar VueEx = (function (_super) {\r\n    __extends(VueEx, _super);\r\n    function VueEx() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    VueEx.prototype.ready = function () {\r\n        this.$parentMethods = this.$parent.$options.methods;\r\n    };\r\n    VueEx.prototype.getAttr = function (e, propName) {\r\n        var str = e.target.attributes[propName];\r\n        var a = str.split('=');\r\n        if (a.length === 2) {\r\n            return a[1];\r\n        }\r\n        return null;\r\n    };\r\n    VueEx.prototype.post = function (url, data, option) {\r\n        if (data)\r\n            this.$http.post(url, data, option);\r\n        else\r\n            this.$http.post(url, option);\r\n    };\r\n    VueEx.prototype.getElem = function (val) {\r\n        var _0 = val[0];\r\n        if (_0 == \"#\") {\r\n            return document.getElementById(val.substr(1));\r\n        }\r\n    };\r\n    return VueEx;\r\n}(Vue));\r\nexports.VueEx = VueEx;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/VueEx.ts\n ** module id = 1\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.24\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tisWechat: isWechat,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if (isA || isO) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.24';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/~/vue/dist/vue.common.js\n ** module id = 2\n ** module chunks = 0\n **/","Object.defineProperty(exports, '__esModule', {\n  value: true\n})\n\nvar Vue = require('vue')\n\nvar internalHooks = [\n  'data',\n  'el',\n  'init',\n  'created',\n  'ready',\n  'beforeCompile',\n  'compiled',\n  'beforeDestroy',\n  'destroyed',\n  'attached',\n  'detached',\n  'activate'\n]\n\nfunction componentFactory (Component, options) {\n  if (!options) {\n    options = {}\n  }\n  options.name = options.name || Component.name\n  // prototype props.\n  var proto = Component.prototype\n  Object.getOwnPropertyNames(proto).forEach(function (key) {\n    if (key === 'constructor') {\n      return\n    }\n    // hooks\n    if (internalHooks.indexOf(key) > -1) {\n      options[key] = proto[key]\n      return\n    }\n    var descriptor = Object.getOwnPropertyDescriptor(proto, key)\n    if (typeof descriptor.value === 'function') {\n      // methods\n      (options.methods || (options.methods = {}))[key] = descriptor.value\n    } else if (descriptor.get || descriptor.set) {\n      // computed properties\n      (options.computed || (options.computed = {}))[key] = {\n        get: descriptor.get,\n        set: descriptor.set\n      }\n    }\n  })\n  // find super\n  var superProto = Object.getPrototypeOf(Component.prototype)\n  var Super = superProto instanceof Vue\n    ? superProto.constructor\n    : Vue\n  return Super.extend(options)\n}\n\nfunction decorator (options) {\n  if (typeof options === 'function') {\n    return componentFactory(options)\n  }\n  return function (Component) {\n    return componentFactory(Component, options)\n  }\n}\n\nexports.default = decorator\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/~/vue-class-component/index.js\n ** module id = 3\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 4\n ** module chunks = 0\n **/","/*!\n * vue-resource v0.9.1\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$2(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$2.reject = function (r) {\n    return new Promise$2(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$2.resolve = function (x) {\n    return new Promise$2(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$2.all = function all(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$2.race = function race(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$2.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$2(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nvar PromiseObj = window.Promise || Promise$2;\n\nfunction Promise$1(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise$1.all = function (iterable, context) {\n    return new Promise$1(PromiseObj.all(iterable), context);\n};\n\nPromise$1.resolve = function (value, context) {\n    return new Promise$1(PromiseObj.resolve(value), context);\n};\n\nPromise$1.reject = function (reason, context) {\n    return new Promise$1(PromiseObj.reject(reason), context);\n};\n\nPromise$1.race = function (iterable, context) {\n    return new Promise$1(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise$1.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return PromiseObj.reject(reason);\n    });\n};\n\nvar debug = false;\nvar util = {};\nvar array = [];\nfunction Util (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n}\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isBoolean(val) {\n    return val === true || val === false;\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise$1.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nfunction xdrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith(xdr.responseText, {\n                status: xdr.status,\n                statusText: xdr.statusText\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xdr.abort();\n        };\n\n        xdr.open(request.method, request.getUrl(), true);\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n}\n\nvar ORIGIN_URL = Url.parse(location.href);\nvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\nfunction cors (request, next) {\n\n    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n        request.crossOrigin = true;\n    }\n\n    if (request.crossOrigin) {\n\n        if (!SUPPORTS_CORS) {\n            request.client = xdrClient;\n        }\n\n        delete request.emulateHTTP;\n    }\n\n    next();\n}\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n}\n\nfunction body (request, next) {\n\n    if (request.emulateJSON && isPlainObject(request.body)) {\n        request.body = Url.params(request.body);\n        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n\n    if (isFormData(request.body)) {\n        delete request.headers['Content-Type'];\n    }\n\n    if (isPlainObject(request.body)) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        var contentType = response.headers['Content-Type'];\n\n        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\n            try {\n                response.data = response.json();\n            } catch (e) {\n                response.data = null;\n            }\n        } else {\n            response.data = response.text();\n        }\n    });\n}\n\nfunction jsonpClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var name = request.jsonp || 'callback',\n            callback = '_jsonp' + Math.random().toString(36).substr(2),\n            body = null,\n            handler,\n            script;\n\n        handler = function (event) {\n\n            var status = 0;\n\n            if (event.type === 'load' && body !== null) {\n                status = 200;\n            } else if (event.type === 'error') {\n                status = 404;\n            }\n\n            resolve(request.respondWith(body, { status: status }));\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        request.params[name] = callback;\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\nfunction jsonp (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next(function (response) {\n\n        if (request.method == 'JSONP') {\n            response.data = response.json();\n        }\n    });\n}\n\nfunction before (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n}\n\n/**\n * HTTP method override Interceptor.\n */\n\nfunction method (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers['X-HTTP-Method-Override'] = request.method;\n        request.method = 'POST';\n    }\n\n    next();\n}\n\nfunction header (request, next) {\n\n    request.method = request.method.toUpperCase();\n    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\n    next();\n}\n\n/**\n * Timeout Interceptor.\n */\n\nfunction timeout (request, next) {\n\n    var timeout;\n\n    if (request.timeout) {\n        timeout = setTimeout(function () {\n            request.cancel();\n        }, request.timeout);\n    }\n\n    next(function (response) {\n\n        clearTimeout(timeout);\n    });\n}\n\nfunction xhrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n                headers: parseHeaders(xhr.getAllResponseHeaders())\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xhr.abort();\n        };\n\n        xhr.open(request.method, request.getUrl(), true);\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onerror = handler;\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        if (request.credentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.getBody());\n    });\n}\n\nfunction parseHeaders(str) {\n\n    var headers = {},\n        value,\n        name,\n        i;\n\n    each(trim(str).split('\\n'), function (row) {\n\n        i = row.indexOf(':');\n        name = trim(row.slice(0, i));\n        value = trim(row.slice(i + 1));\n\n        if (headers[name]) {\n\n            if (isArray(headers[name])) {\n                headers[name].push(value);\n            } else {\n                headers[name] = [headers[name], value];\n            }\n        } else {\n\n            headers[name] = value;\n        }\n    });\n\n    return headers;\n}\n\nfunction Client (context) {\n\n    var reqHandlers = [sendRequest],\n        resHandlers = [],\n        handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new Promise$1(function (resolve) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n                    next();\n                }\n            }\n\n            function next(response) {\n                when(response, function (response) {\n\n                    if (isFunction(response)) {\n\n                        resHandlers.unshift(response);\n                    } else if (isObject(response)) {\n\n                        resHandlers.forEach(function (handler) {\n                            handler.call(context, response);\n                        });\n\n                        resolve(response);\n\n                        return;\n                    }\n\n                    exec();\n                });\n            }\n\n            exec();\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n}\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || xhrClient;\n\n    resolve(client(request));\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/**\n * HTTP Response.\n */\n\nvar Response = function () {\n    function Response(body, _ref) {\n        var url = _ref.url;\n        var headers = _ref.headers;\n        var status = _ref.status;\n        var statusText = _ref.statusText;\n        classCallCheck(this, Response);\n\n\n        this.url = url;\n        this.body = body;\n        this.headers = headers || {};\n        this.status = status || 0;\n        this.statusText = statusText || '';\n        this.ok = status >= 200 && status < 300;\n    }\n\n    Response.prototype.text = function text() {\n        return this.body;\n    };\n\n    Response.prototype.blob = function blob() {\n        return new Blob([this.body]);\n    };\n\n    Response.prototype.json = function json() {\n        return JSON.parse(this.body);\n    };\n\n    return Response;\n}();\n\nvar Request = function () {\n    function Request(options) {\n        classCallCheck(this, Request);\n\n\n        this.method = 'GET';\n        this.body = null;\n        this.params = {};\n        this.headers = {};\n\n        assign(this, options);\n    }\n\n    Request.prototype.getUrl = function getUrl() {\n        return Url(this);\n    };\n\n    Request.prototype.getBody = function getBody() {\n        return this.body;\n    };\n\n    Request.prototype.respondWith = function respondWith(body, options) {\n        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n    };\n\n    return Request;\n}();\n\n/**\n * Service for sending network requests.\n */\n\nvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\nvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\nvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\nfunction Http(options) {\n\n    var self = this || {},\n        client = Client(self.$vm);\n\n    defaults(options || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    return client(new Request(options)).then(function (response) {\n\n        return response.ok ? response : Promise$1.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return Promise$1.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    custom: CUSTOM_HEADERS,\n    common: COMMON_HEADERS\n};\n\nHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, options) {\n        return this(assign(options || {}, { url: url, method: method }));\n    };\n});\n\n['post', 'put', 'patch'].forEach(function (method) {\n\n    Http[method] = function (url, body, options) {\n        return this(assign(options || {}, { url: url, method: method, body: body }));\n    };\n});\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = assign({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: params || {} }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = assign({}, action),\n        params = {},\n        body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options.body = body;\n    options.params = assign({}, options.params, params);\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = Promise$1;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/dist/vue-resource.common.js\n ** module id = 5\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 6\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar StagePanelView_1 = require(\"../../../YuanTV3/src/view/panel/stage/StagePanelView\");\r\nvar vue_class_component_1 = require(\"vue-class-component\");\r\nvar Const_1 = require(\"../../../YuanTV3/src/event/Const\");\r\nvar Command_1 = require(\"../../../YuanTV3/src/event/Command\");\r\nvar Const_2 = require(\"../model/Const\");\r\nvar StagePanelViewMobile = (function (_super) {\r\n    __extends(StagePanelViewMobile, _super);\r\n    function StagePanelViewMobile() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    StagePanelViewMobile.prototype.ready = function () {\r\n        this.$on(\"\" + Const_2.EventId.setting_serverIPChanged, function (ip) {\r\n            console.log(ip);\r\n        });\r\n    };\r\n    StagePanelViewMobile.prototype.opReq = function (cmdId, param, callback) {\r\n        var url = \"http://\" + Const_2.appModel.ip + \"/panel/\" + Const_1.PanelId.stagePanel + \"/\" + cmdId;\r\n        console.log(\"opReq\" + url);\r\n        this.$http.post(url, param, callback);\r\n    };\r\n    StagePanelViewMobile.prototype.initIO = function (io) {\r\n        console.log('init io!!!');\r\n    };\r\n    StagePanelViewMobile.prototype.onToggleTimer = function () {\r\n        this.opReq(\"\" + Command_1.CommandId.cs_toggleTimer);\r\n        console.log('onToggleTimer');\r\n    };\r\n    StagePanelViewMobile.prototype.onResetTimer = function () {\r\n        console.log('onResetTimer');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_resetTimer);\r\n    };\r\n    StagePanelViewMobile.prototype.onAddLeftScore = function () {\r\n        console.log('onAddLeftScore');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_addLeftScore, { param: 'addLeftScore' });\r\n    };\r\n    StagePanelViewMobile.prototype.onAddRightScore = function () {\r\n        console.log('onAddRightScore');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_addRightScore);\r\n    };\r\n    StagePanelViewMobile.prototype.onQueryPlayer = function (idx) {\r\n        var _this = this;\r\n        var queryId = this.getElem(\"#player\" + idx).value;\r\n        console.log('onQueryPlayer', idx, queryId);\r\n        this.post(\"/db/player/\" + queryId, function (data) {\r\n            console.log('res: ', data);\r\n            var playerDoc = data.playerDoc;\r\n            _this.getElem('#playerImg' + idx).src = playerDoc.avatar;\r\n        });\r\n    };\r\n    StagePanelViewMobile.prototype.onUpdatePlayerNum = function (idx) {\r\n        var backNum = this.getElem(\"#playerNum\" + idx).value;\r\n        console.log('onUpdatePlayerNum', idx, backNum);\r\n        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerBackNum, { idx: idx, backNum: backNum });\r\n    };\r\n    StagePanelViewMobile.prototype.onStarting = function () {\r\n        console.log('onStarting');\r\n        var playerIdArr = [];\r\n        var backNumArr = [];\r\n        for (var i = 0; i < 8; i++) {\r\n            var queryId = Number(this.getElem(\"#player\" + i).value);\r\n            playerIdArr.push(queryId);\r\n            backNumArr.push(Number(this.getElem(\"#playerNum\" + i).value));\r\n        }\r\n        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerAll, { playerIdArr: playerIdArr, backNumArr: backNumArr });\r\n    };\r\n    StagePanelViewMobile.prototype.onSetEloScore = function (idx) {\r\n        var eloScore = Number(this.getElem(\"#eloScore\" + idx).value);\r\n        this.playerPanel.setEloScore(idx, eloScore);\r\n    };\r\n    StagePanelViewMobile.prototype.onUpdateBackNum = function () {\r\n        for (var idx = 0; idx < 8; idx++) {\r\n            var backNum = this.getElem(\"#playerNum\" + idx).value;\r\n            console.log('onUpdatePlayerNum', idx, backNum);\r\n            this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerBackNum, { idx: idx, backNum: backNum });\r\n        }\r\n    };\r\n    StagePanelViewMobile.prototype.onUpdatePlayer = function (idx) {\r\n        console.log('onUpdatePlayer', idx);\r\n        var queryId = Number(this.getElem(\"#player\" + idx).value);\r\n        console.log('onQueryPlayer', idx, queryId);\r\n        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayer, { idx: idx, playerId: queryId });\r\n    };\r\n    StagePanelViewMobile.prototype.onMinRightScore = function () {\r\n        console.log('onMinRightScore');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_minRightScore);\r\n    };\r\n    StagePanelViewMobile.prototype.onMinLeftScore = function () {\r\n        console.log('onMinLeftScore');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_minLeftScore);\r\n    };\r\n    StagePanelViewMobile.prototype.onShowWin = function () {\r\n        console.log('onShowWin mvp ', this.mvpIdx);\r\n        var isBlueMvp = this.mvpIdx < 4;\r\n        if (this.scorePanel.isBlueWin != isBlueMvp) {\r\n            alert('比赛结果与mvp不符');\r\n        }\r\n        else {\r\n            this.opReq(\"\" + Command_1.CommandId.cs_toggleTimer, { state: Const_1.TimerState.PAUSE });\r\n            this.opReq(\"\" + Command_1.CommandId.cs_fadeInWinPanel, { mvpIdx: this.mvpIdx });\r\n        }\r\n    };\r\n    StagePanelViewMobile.prototype.onHideWin = function () {\r\n        console.log('onHideWin mvp ');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_fadeOutWinPanel);\r\n    };\r\n    StagePanelViewMobile.prototype.onSubmitGame = function () {\r\n        var _this = this;\r\n        var isBlueMvp = this.mvpIdx < 4;\r\n        if (this.scorePanel.isBlueWin != isBlueMvp) {\r\n            alert('比赛结果与mvp不符');\r\n        }\r\n        else {\r\n            var date = new Date();\r\n            var dateTime = date.getTime();\r\n            console.log('onSubmitGame', dateTime);\r\n            this.opReq(\"\" + Command_1.CommandId.cs_saveGameRec, { date: dateTime }, function (res) {\r\n                console.log(res);\r\n                _this.isSubmited = true;\r\n                if (res) {\r\n                    alert('比赛结果提交成功');\r\n                }\r\n                else {\r\n                    alert('比赛结果已经提交过了');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    StagePanelViewMobile.prototype.onAddLeftFoul = function () {\r\n        console.log('onAddLeftFoul');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_addLeftFoul);\r\n    };\r\n    StagePanelViewMobile.prototype.onMinLeftFoul = function () {\r\n        console.log('onMinLeftFoul');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_minLeftFoul);\r\n    };\r\n    StagePanelViewMobile.prototype.onMinRightFoul = function () {\r\n        console.log('onMinRightFoul');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_minRightFoul);\r\n    };\r\n    StagePanelViewMobile.prototype.onAddRightFoul = function () {\r\n        console.log('onAddRightFoul');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_addRightFoul);\r\n    };\r\n    StagePanelViewMobile.prototype.onComingActivity = function () {\r\n        console.log('onComingActivity');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_setGameComing);\r\n    };\r\n    StagePanelViewMobile = __decorate([\r\n        vue_class_component_1.default({\r\n            template: require('./stage-panel-mobile.html'),\r\n            props: {\r\n                op: {\r\n                    type: Boolean,\r\n                    required: true,\r\n                    default: false\r\n                },\r\n                timerName: {\r\n                    type: String,\r\n                    default: \"start\"\r\n                },\r\n                mvpIdx: {\r\n                    type: Number,\r\n                    required: true,\r\n                    default: 0\r\n                },\r\n                gameId: {\r\n                    type: Number,\r\n                    required: true,\r\n                    default: 0\r\n                },\r\n                playerInfoArr: {\r\n                    type: Array,\r\n                    default: [1, 2, 3, 4, 5, 6, 7, 8]\r\n                }\r\n            }\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], StagePanelViewMobile);\r\n    return StagePanelViewMobile;\r\n}(StagePanelView_1.StagePanelView));\r\nexports.StagePanelViewMobile = StagePanelViewMobile;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/mobile/StagePanelViewMobile.ts\n ** module id = 7\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar Command_1 = require(\"../../../event/Command\");\r\nvar vue_class_component_1 = require(\"vue-class-component\");\r\nvar BasePanelView_1 = require(\"../BasePanelView\");\r\nvar Const_1 = require(\"../../../event/Const\");\r\nvar PlayerInfo_1 = require(\"../../../model/PlayerInfo\");\r\nvar PlayerPanel_1 = require(\"./PlayerPanel\");\r\nvar EventPanel_1 = require(\"./EventPanel\");\r\nvar ScorePanel_1 = require(\"./ScorePanel\");\r\nvar StagePanelView = (function (_super) {\r\n    __extends(StagePanelView, _super);\r\n    function StagePanelView() {\r\n        _super.apply(this, arguments);\r\n        this.isSubmited = false;\r\n    }\r\n    StagePanelView.prototype.ready = function (pid, isInitCanvas) {\r\n        if (isInitCanvas === void 0) { isInitCanvas = true; }\r\n        if (!pid)\r\n            pid = Const_1.PanelId.stagePanel;\r\n        var io = _super.prototype.ready.call(this, pid, isInitCanvas);\r\n        this.initIO(io);\r\n    };\r\n    StagePanelView.prototype.initIO = function (io) {\r\n        var _this = this;\r\n        io.on(\"\" + Command_1.CommandId.initPanel, function (data) {\r\n            console.log(\"\" + Command_1.CommandId.initPanel, data);\r\n            if (!_this.isInit && _this.isInitCanvas)\r\n                _this.initStage(data.gameInfo);\r\n        });\r\n        io\r\n            .on(\"\" + Command_1.CommandId.updateLeftScore, function (data) {\r\n            console.log(\"\" + Command_1.CommandId.updateLeftScore, data);\r\n            _this.scorePanel.setLeftScore(data.leftScore);\r\n        })\r\n            .on(\"\" + Command_1.CommandId.updateRightScore, function (data) {\r\n            _this.scorePanel.setRightScore(data.rightScore);\r\n        })\r\n            .on(\"\" + Command_1.CommandId.straightScore3, function (param) {\r\n            if (param.team === Const_1.ViewEvent.STRAIGHT3_LEFT) {\r\n                _this.eventPanel.fadeInStraight3(false);\r\n            }\r\n            else if (param.team === Const_1.ViewEvent.STRAIGHT3_RIGHT) {\r\n                _this.eventPanel.fadeInStraight3(true);\r\n            }\r\n        })\r\n            .on(\"\" + Command_1.CommandId.toggleTimer, function (data) {\r\n            if (_this.timerName === Const_1.TimerState.START_STR)\r\n                _this.timerName = Const_1.TimerState.PAUSE_STR;\r\n            else\r\n                _this.timerName = Const_1.TimerState.START_STR;\r\n            _this.scorePanel.toggleTimer1();\r\n        })\r\n            .on(\"\" + Command_1.CommandId.resetTimer, function (data) {\r\n            _this.timerName = Const_1.TimerState.START_STR;\r\n            _this.scorePanel.resetTimer();\r\n        })\r\n            .on(\"\" + Command_1.CommandId.updatePlayer, function (data) {\r\n            _this.playerPanel.setPlayer(data.idx, new PlayerInfo_1.PlayerInfo(data.playerDoc));\r\n            _this.scorePanel.setAvgEloScore(data.avgEloScore);\r\n        })\r\n            .on(\"\" + Command_1.CommandId.updatePlayerAll, function (param) {\r\n            for (var i = 0; i < param.playerInfoArr.length; i++) {\r\n                var playerInfo = new PlayerInfo_1.PlayerInfo(param.playerInfoArr[i]);\r\n                _this.playerPanel.setPlayer(i, playerInfo);\r\n            }\r\n            _this.scorePanel.setLeftScore(0);\r\n            _this.scorePanel.setRightScore(0);\r\n            _this.scorePanel.setAvgEloScore(param.avgEloScore);\r\n        })\r\n            .on(\"\" + Command_1.CommandId.fadeInWinPanel, function (param) {\r\n            var teamInfo = param.teamInfo;\r\n            var mvpIdx = param.mvpIdx;\r\n            var mvpId = param.mvpId;\r\n            _this.eventPanel.fadeInWinPanel(teamInfo, mvpIdx, mvpId);\r\n        })\r\n            .on(\"\" + Command_1.CommandId.fadeOutWinPanel, function (param) {\r\n            _this.eventPanel.fadeOutWinPanel();\r\n        })\r\n            .on(\"\" + Command_1.CommandId.updatePlayerBackNum, function (param) {\r\n            _this.playerPanel.playerCardArr[param.idx].setBackNumber(param.backNum);\r\n        });\r\n    };\r\n    StagePanelView.prototype.initStage = function (gameDoc) {\r\n        this.isInit = true;\r\n        this.scorePanel = new ScorePanel_1.ScorePanel(this);\r\n        this.scorePanel.init(gameDoc);\r\n        this.playerPanel = new PlayerPanel_1.PlayerPanel(this);\r\n        this.playerPanel.init(gameDoc);\r\n        this.gameId = gameDoc.id;\r\n        this.eventPanel = new EventPanel_1.EventPanel(this);\r\n        console.log('initStage', gameDoc);\r\n        if (this.op) {\r\n            for (var i = 0; i < gameDoc.playerInfoArr.length; i++) {\r\n                var playerInfo = gameDoc.playerInfoArr[i];\r\n                if (playerInfo)\r\n                    this.getElem(\"#player\" + i).value = playerInfo.playerData.id;\r\n            }\r\n        }\r\n    };\r\n    StagePanelView.prototype.onToggleTimer = function () {\r\n        this.opReq(\"\" + Command_1.CommandId.cs_toggleTimer);\r\n        console.log('onToggleTimer');\r\n    };\r\n    StagePanelView.prototype.onResetTimer = function () {\r\n        console.log('onResetTimer');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_resetTimer);\r\n    };\r\n    StagePanelView.prototype.onAddLeftScore = function () {\r\n        console.log('onAddLeftScore');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_addLeftScore, { param: 'addLeftScore' });\r\n    };\r\n    StagePanelView.prototype.onAddRightScore = function () {\r\n        console.log('onAddRightScore');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_addRightScore);\r\n    };\r\n    StagePanelView.prototype.onQueryPlayer = function (idx) {\r\n        var _this = this;\r\n        var queryId = this.getElem(\"#player\" + idx).value;\r\n        console.log('onQueryPlayer', idx, queryId);\r\n        this.post(\"/db/player/\" + queryId, function (data) {\r\n            console.log('res: ', data);\r\n            var playerDoc = data.playerDoc;\r\n            _this.getElem('#playerImg' + idx).src = playerDoc.avatar;\r\n        });\r\n    };\r\n    StagePanelView.prototype.onUpdatePlayerNum = function (idx) {\r\n        var backNum = this.getElem(\"#playerNum\" + idx).value;\r\n        console.log('onUpdatePlayerNum', idx, backNum);\r\n        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerBackNum, { idx: idx, backNum: backNum });\r\n    };\r\n    StagePanelView.prototype.onStarting = function () {\r\n        console.log('onStarting');\r\n        var playerIdArr = [];\r\n        var backNumArr = [];\r\n        for (var i = 0; i < 8; i++) {\r\n            var queryId = Number(this.getElem(\"#player\" + i).value);\r\n            playerIdArr.push(queryId);\r\n            backNumArr.push(Number(this.getElem(\"#playerNum\" + i).value));\r\n        }\r\n        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerAll, { playerIdArr: playerIdArr, backNumArr: backNumArr });\r\n    };\r\n    StagePanelView.prototype.onSetEloScore = function (idx) {\r\n        var eloScore = Number(this.getElem(\"#eloScore\" + idx).value);\r\n        this.playerPanel.setEloScore(idx, eloScore);\r\n    };\r\n    StagePanelView.prototype.onUpdateBackNum = function () {\r\n        for (var idx = 0; idx < 8; idx++) {\r\n            var backNum = this.getElem(\"#playerNum\" + idx).value;\r\n            console.log('onUpdatePlayerNum', idx, backNum);\r\n            this.opReq(\"\" + Command_1.CommandId.cs_updatePlayerBackNum, { idx: idx, backNum: backNum });\r\n        }\r\n    };\r\n    StagePanelView.prototype.onUpdatePlayer = function (idx) {\r\n        console.log('onUpdatePlayer', idx);\r\n        var queryId = Number(this.getElem(\"#player\" + idx).value);\r\n        console.log('onQueryPlayer', idx, queryId);\r\n        this.opReq(\"\" + Command_1.CommandId.cs_updatePlayer, { idx: idx, playerId: queryId });\r\n    };\r\n    StagePanelView.prototype.onMinRightScore = function () {\r\n        console.log('onMinRightScore');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_minRightScore);\r\n    };\r\n    StagePanelView.prototype.onMinLeftScore = function () {\r\n        console.log('onMinLeftScore');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_minLeftScore);\r\n    };\r\n    StagePanelView.prototype.onShowWin = function () {\r\n        console.log('onShowWin mvp ', this.mvpIdx);\r\n        var isBlueMvp = this.mvpIdx < 4;\r\n        if (this.scorePanel.isBlueWin != isBlueMvp) {\r\n            alert('比赛结果与mvp不符');\r\n        }\r\n        else {\r\n            this.opReq(\"\" + Command_1.CommandId.cs_toggleTimer, { state: Const_1.TimerState.PAUSE });\r\n            this.opReq(\"\" + Command_1.CommandId.cs_fadeInWinPanel, { mvpIdx: this.mvpIdx });\r\n        }\r\n    };\r\n    StagePanelView.prototype.onHideWin = function () {\r\n        console.log('onHideWin mvp ');\r\n        this.opReq(\"\" + Command_1.CommandId.cs_fadeOutWinPanel);\r\n    };\r\n    StagePanelView.prototype.onSubmitGame = function () {\r\n        var _this = this;\r\n        var isBlueMvp = this.mvpIdx < 4;\r\n        if (this.scorePanel.isBlueWin != isBlueMvp) {\r\n            alert('比赛结果与mvp不符');\r\n        }\r\n        else {\r\n            var date = new Date();\r\n            var dateTime = date.getTime();\r\n            console.log('onSubmitGame', dateTime);\r\n            this.opReq(\"\" + Command_1.CommandId.cs_saveGameRec, { date: dateTime }, function (res) {\r\n                console.log(res);\r\n                _this.isSubmited = true;\r\n                if (res) {\r\n                    alert('比赛结果提交成功');\r\n                }\r\n                else {\r\n                    alert('比赛结果已经提交过了');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    StagePanelView.prototype.onRefresh = function () {\r\n        console.log('onRefresh');\r\n        if (this.isSubmited)\r\n            window.location.reload();\r\n        else\r\n            alert('还没提交比赛结果');\r\n    };\r\n    StagePanelView = __decorate([\r\n        vue_class_component_1.default({\r\n            template: require('./stage-panel.html'),\r\n            props: {\r\n                op: {\r\n                    type: Boolean,\r\n                    required: true,\r\n                    default: false\r\n                },\r\n                timerName: {\r\n                    type: String,\r\n                    default: \"start\"\r\n                },\r\n                mvpIdx: {\r\n                    type: Number,\r\n                    required: true,\r\n                    default: 0\r\n                },\r\n                gameId: {\r\n                    type: Number,\r\n                    required: true,\r\n                    default: 0\r\n                },\r\n                playerInfoArr: {\r\n                    type: Array,\r\n                    default: [1, 2, 3, 4, 5, 6, 7, 8]\r\n                }\r\n            }\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], StagePanelView);\r\n    return StagePanelView;\r\n}(BasePanelView_1.BasePanelView));\r\nexports.StagePanelView = StagePanelView;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/stage/StagePanelView.ts\n ** module id = 8\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventDispatcher_1 = require(\"./EventDispatcher\");\r\n(function (CommandId) {\r\n    CommandId[CommandId[\"ShowConsoleWin\"] = 100000] = \"ShowConsoleWin\";\r\n    CommandId[CommandId[\"toggleTracker\"] = 100001] = \"toggleTracker\";\r\n    CommandId[CommandId[\"toggleBallRolling\"] = 100002] = \"toggleBallRolling\";\r\n    CommandId[CommandId[\"toggleTimer\"] = 100003] = \"toggleTimer\";\r\n    CommandId[CommandId[\"cs_toggleTimer\"] = 100004] = \"cs_toggleTimer\";\r\n    CommandId[CommandId[\"resetTimer\"] = 100005] = \"resetTimer\";\r\n    CommandId[CommandId[\"cs_resetTimer\"] = 100006] = \"cs_resetTimer\";\r\n    CommandId[CommandId[\"disableTracker\"] = 100007] = \"disableTracker\";\r\n    CommandId[CommandId[\"updateLeftScore\"] = 100008] = \"updateLeftScore\";\r\n    CommandId[CommandId[\"cs_addLeftScore\"] = 100009] = \"cs_addLeftScore\";\r\n    CommandId[CommandId[\"updateRightScore\"] = 100010] = \"updateRightScore\";\r\n    CommandId[CommandId[\"cs_addRightScore\"] = 100011] = \"cs_addRightScore\";\r\n    CommandId[CommandId[\"minLeftScore\"] = 100012] = \"minLeftScore\";\r\n    CommandId[CommandId[\"cs_minLeftScore\"] = 100013] = \"cs_minLeftScore\";\r\n    CommandId[CommandId[\"minRightScore\"] = 100014] = \"minRightScore\";\r\n    CommandId[CommandId[\"cs_minRightScore\"] = 100015] = \"cs_minRightScore\";\r\n    CommandId[CommandId[\"updateLeftFoul\"] = 100016] = \"updateLeftFoul\";\r\n    CommandId[CommandId[\"cs_addLeftFoul\"] = 100017] = \"cs_addLeftFoul\";\r\n    CommandId[CommandId[\"cs_minLeftFoul\"] = 100018] = \"cs_minLeftFoul\";\r\n    CommandId[CommandId[\"updateRightFoul\"] = 100019] = \"updateRightFoul\";\r\n    CommandId[CommandId[\"cs_addRightFoul\"] = 100020] = \"cs_addRightFoul\";\r\n    CommandId[CommandId[\"cs_minRightFoul\"] = 100021] = \"cs_minRightFoul\";\r\n    CommandId[CommandId[\"stageFadeOut\"] = 100022] = \"stageFadeOut\";\r\n    CommandId[CommandId[\"cs_fadeOut\"] = 100023] = \"cs_fadeOut\";\r\n    CommandId[CommandId[\"playerScore\"] = 100024] = \"playerScore\";\r\n    CommandId[CommandId[\"cs_playerScore\"] = 100025] = \"cs_playerScore\";\r\n    CommandId[CommandId[\"stageFadeIn\"] = 100026] = \"stageFadeIn\";\r\n    CommandId[CommandId[\"cs_stageFadeIn\"] = 100027] = \"cs_stageFadeIn\";\r\n    CommandId[CommandId[\"moveStagePanel\"] = 100028] = \"moveStagePanel\";\r\n    CommandId[CommandId[\"cs_moveStagePanel\"] = 100029] = \"cs_moveStagePanel\";\r\n    CommandId[CommandId[\"updatePlayer\"] = 100030] = \"updatePlayer\";\r\n    CommandId[CommandId[\"cs_updatePlayer\"] = 100031] = \"cs_updatePlayer\";\r\n    CommandId[CommandId[\"updatePlayerAll\"] = 100032] = \"updatePlayerAll\";\r\n    CommandId[CommandId[\"cs_updatePlayerAll\"] = 100033] = \"cs_updatePlayerAll\";\r\n    CommandId[CommandId[\"cs_updatePlayerBackNum\"] = 100034] = \"cs_updatePlayerBackNum\";\r\n    CommandId[CommandId[\"updatePlayerBackNum\"] = 100035] = \"updatePlayerBackNum\";\r\n    CommandId[CommandId[\"fadeInNotice\"] = 100036] = \"fadeInNotice\";\r\n    CommandId[CommandId[\"cs_fadeInNotice\"] = 100037] = \"cs_fadeInNotice\";\r\n    CommandId[CommandId[\"cs_resetGame\"] = 100038] = \"cs_resetGame\";\r\n    CommandId[CommandId[\"cs_unLimitScore\"] = 100039] = \"cs_unLimitScore\";\r\n    CommandId[CommandId[\"unLimitScore\"] = 100040] = \"unLimitScore\";\r\n    CommandId[CommandId[\"fadeInWinPanel\"] = 100041] = \"fadeInWinPanel\";\r\n    CommandId[CommandId[\"cs_fadeInWinPanel\"] = 100042] = \"cs_fadeInWinPanel\";\r\n    CommandId[CommandId[\"fadeOutWinPanel\"] = 100043] = \"fadeOutWinPanel\";\r\n    CommandId[CommandId[\"cs_fadeOutWinPanel\"] = 100044] = \"cs_fadeOutWinPanel\";\r\n    CommandId[CommandId[\"saveGameRec\"] = 100045] = \"saveGameRec\";\r\n    CommandId[CommandId[\"cs_saveGameRec\"] = 100046] = \"cs_saveGameRec\";\r\n    CommandId[CommandId[\"cs_queryPlayerByPos\"] = 100047] = \"cs_queryPlayerByPos\";\r\n    CommandId[CommandId[\"fadeInPlayerPanel\"] = 100048] = \"fadeInPlayerPanel\";\r\n    CommandId[CommandId[\"cs_fadeInPlayerPanel\"] = 100049] = \"cs_fadeInPlayerPanel\";\r\n    CommandId[CommandId[\"fadeOutPlayerPanel\"] = 100050] = \"fadeOutPlayerPanel\";\r\n    CommandId[CommandId[\"cs_fadeOutPlayerPanel\"] = 100051] = \"cs_fadeOutPlayerPanel\";\r\n    CommandId[CommandId[\"movePlayerPanel\"] = 100052] = \"movePlayerPanel\";\r\n    CommandId[CommandId[\"cs_movePlayerPanel\"] = 100053] = \"cs_movePlayerPanel\";\r\n    CommandId[CommandId[\"straightScore3\"] = 100054] = \"straightScore3\";\r\n    CommandId[CommandId[\"straightScore5\"] = 100055] = \"straightScore5\";\r\n    CommandId[CommandId[\"initPanel\"] = 100056] = \"initPanel\";\r\n    CommandId[CommandId[\"cs_fadeInActivityPanel\"] = 100057] = \"cs_fadeInActivityPanel\";\r\n    CommandId[CommandId[\"fadeInActivityPanel\"] = 100058] = \"fadeInActivityPanel\";\r\n    CommandId[CommandId[\"cs_fadeInNextActivity\"] = 100059] = \"cs_fadeInNextActivity\";\r\n    CommandId[CommandId[\"fadeInNextActivity\"] = 100060] = \"fadeInNextActivity\";\r\n    CommandId[CommandId[\"cs_fadeInActivityExGame\"] = 100061] = \"cs_fadeInActivityExGame\";\r\n    CommandId[CommandId[\"fadeInActivityExGame\"] = 100062] = \"fadeInActivityExGame\";\r\n    CommandId[CommandId[\"cs_fadeOutActivityPanel\"] = 100063] = \"cs_fadeOutActivityPanel\";\r\n    CommandId[CommandId[\"fadeOutActivityPanel\"] = 100064] = \"fadeOutActivityPanel\";\r\n    CommandId[CommandId[\"cs_startGame\"] = 100065] = \"cs_startGame\";\r\n    CommandId[CommandId[\"cs_restartGame\"] = 100066] = \"cs_restartGame\";\r\n    CommandId[CommandId[\"cs_fadeInRankPanel\"] = 100067] = \"cs_fadeInRankPanel\";\r\n    CommandId[CommandId[\"fadeInRankPanel\"] = 100068] = \"fadeInRankPanel\";\r\n    CommandId[CommandId[\"cs_fadeInNextRank\"] = 100069] = \"cs_fadeInNextRank\";\r\n    CommandId[CommandId[\"fadeInNextRank\"] = 100070] = \"fadeInNextRank\";\r\n    CommandId[CommandId[\"cs_setGameComing\"] = 100071] = \"cs_setGameComing\";\r\n    CommandId[CommandId[\"setGameComing\"] = 100072] = \"setGameComing\";\r\n    CommandId[CommandId[\"cs_fadeOutRankPanel\"] = 100073] = \"cs_fadeOutRankPanel\";\r\n    CommandId[CommandId[\"fadeOutRankPanel\"] = 100074] = \"fadeOutRankPanel\";\r\n    CommandId[CommandId[\"cs_fadeInCountDown\"] = 100075] = \"cs_fadeInCountDown\";\r\n    CommandId[CommandId[\"fadeInCountDown\"] = 100076] = \"fadeInCountDown\";\r\n    CommandId[CommandId[\"cs_fadeOutCountDown\"] = 100077] = \"cs_fadeOutCountDown\";\r\n    CommandId[CommandId[\"fadeOutCountDown\"] = 100078] = \"fadeOutCountDown\";\r\n    CommandId[CommandId[\"cs_inScreenScore\"] = 100079] = \"cs_inScreenScore\";\r\n    CommandId[CommandId[\"inScreenScore\"] = 100080] = \"inScreenScore\";\r\n    CommandId[CommandId[\"cs_findPlayerData\"] = 100081] = \"cs_findPlayerData\";\r\n})(exports.CommandId || (exports.CommandId = {}));\r\nvar CommandId = exports.CommandId;\r\nvar CommandItem = (function () {\r\n    function CommandItem(id) {\r\n        this.id = id;\r\n    }\r\n    return CommandItem;\r\n}());\r\nvar Command = (function (_super) {\r\n    __extends(Command, _super);\r\n    function Command() {\r\n        _super.call(this);\r\n        this.cmdArr = [];\r\n        this.newCmd(CommandId.updateLeftScore, \"addLeftScore\");\r\n        this.newCmd(CommandId.updateRightScore, \"addRightScore\");\r\n        this.newCmd(CommandId.toggleTracker, \"toggleTracker\");\r\n        this.newCmd(CommandId.toggleTimer, \"toggleTimer\");\r\n        this.newCmd(CommandId.toggleBallRolling, \"toggleBallRolling\");\r\n        this.newCmd(CommandId.disableTracker, \"disableTracker\");\r\n    }\r\n    Command.prototype.newCmd = function (id, name, desc) {\r\n        var ci = new CommandItem(id);\r\n        ci.name = name;\r\n        ci.desc = desc;\r\n        this.cmdArr.push(ci);\r\n    };\r\n    return Command;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.Command = Command;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/event/Command.ts\n ** module id = 9\n ** module chunks = 0\n **/","\"use strict\";\r\nvar EventDispatcher = (function () {\r\n    function EventDispatcher() {\r\n        this._func = {};\r\n        this._funcId = 0;\r\n    }\r\n    EventDispatcher.prototype.on = function (type, func) {\r\n        if (!this._func[type])\r\n            this._func[type] = [];\r\n        this._funcId++;\r\n        this._func[type].push({ func: func, id: this._funcId });\r\n    };\r\n    EventDispatcher.prototype.emit = function (type, param, broadcastId) {\r\n        if (param === void 0) { param = null; }\r\n        if (broadcastId === void 0) { broadcastId = null; }\r\n        if (this._func[type]) {\r\n            for (var i = 0; i < this._func[type].length; ++i) {\r\n                var f = this._func[type][i];\r\n                if (f)\r\n                    f.func(param);\r\n            }\r\n        }\r\n        if (this.broadcast && broadcastId)\r\n            this.broadcast(broadcastId, type, param);\r\n    };\r\n    EventDispatcher.prototype.proxy = function () {\r\n        var param = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            param[_i - 0] = arguments[_i];\r\n        }\r\n        throw new Error(\"no proxy method!!!\");\r\n    };\r\n    ;\r\n    EventDispatcher.prototype.broadcast = function () {\r\n        var param = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            param[_i - 0] = arguments[_i];\r\n        }\r\n        throw new Error(\"no broadcast method!!!\");\r\n    };\r\n    ;\r\n    EventDispatcher.prototype.del = function (type, funcId) {\r\n        if (funcId === void 0) { funcId = -1; }\r\n        if (this._func[type])\r\n            if (funcId < 0) {\r\n                this._func[type] = [];\r\n            }\r\n            else {\r\n                for (var i = 0; i < this._func[type].length; ++i) {\r\n                    var f = this._func[type][i];\r\n                    if (f) {\r\n                        if (f.id == funcId) {\r\n                            delete this._func[type][i];\r\n                            console.log('del event', type, funcId);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    };\r\n    EventDispatcher.prototype.removeAll = function () {\r\n        this._func = {};\r\n    };\r\n    return EventDispatcher;\r\n}());\r\nexports.EventDispatcher = EventDispatcher;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/event/EventDispatcher.ts\n ** module id = 10\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar VueEx_1 = require(\"../VueEx\");\r\nvar Const_1 = require(\"../../event/Const\");\r\nvar BasePanelView = (function (_super) {\r\n    __extends(BasePanelView, _super);\r\n    function BasePanelView() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    BasePanelView.prototype.initCanvas = function () {\r\n        this.stageWidth = Const_1.ViewConst.STAGE_WIDTH;\r\n        this.stageHeight = Const_1.ViewConst.STAGE_HEIGHT;\r\n        var canvas = document.getElementById(\"stage\");\r\n        if (canvas) {\r\n            canvas.setAttribute(\"width\", this.stageWidth + \"\");\r\n            canvas.setAttribute(\"height\", this.stageHeight + \"\");\r\n            var stage = new createjs.Stage(canvas);\r\n            stage.autoClear = true;\r\n            createjs.Ticker.framerate = 60;\r\n            createjs.Ticker.addEventListener(\"tick\", function () {\r\n                stage.update();\r\n            });\r\n            this.ctn = new createjs.Container();\r\n            stage.addChild(this.ctn);\r\n            this.stage = stage;\r\n        }\r\n    };\r\n    BasePanelView.prototype.ready = function (pid, isInitCanvas) {\r\n        var _this = this;\r\n        if (isInitCanvas === void 0) { isInitCanvas = true; }\r\n        this.isInitCanvas = isInitCanvas;\r\n        if (isInitCanvas)\r\n            this.initCanvas();\r\n        this.opReq = function (cmdId, param, callback) {\r\n            _this.$http.post(\"/panel/\" + pid + \"/\" + cmdId, param, callback);\r\n        };\r\n        var panel = this.$parent;\r\n        this.op = panel.isOp;\r\n        console.log(\"BasePanelView.ready\", panel.isOp);\r\n        return panel.connect();\r\n    };\r\n    return BasePanelView;\r\n}(VueEx_1.VueEx));\r\nexports.BasePanelView = BasePanelView;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/BasePanelView.ts\n ** module id = 11\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Vue = require('vue');\r\nvar vue_class_component_1 = require(\"vue-class-component\");\r\nexports.Component = vue_class_component_1.default;\r\nvar VueEx = (function (_super) {\r\n    __extends(VueEx, _super);\r\n    function VueEx() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    VueEx.prototype.ready = function () {\r\n        this.$parentMethods = this.$parent.$options.methods;\r\n    };\r\n    VueEx.prototype.getAttr = function (e, propName) {\r\n        var str = e.target.attributes[propName];\r\n        var a = str.split('=');\r\n        if (a.length === 2) {\r\n            return a[1];\r\n        }\r\n        return null;\r\n    };\r\n    VueEx.prototype.post = function (url, data, option) {\r\n        if (data)\r\n            this.$http.post(url, data, option);\r\n        else\r\n            this.$http.post(url, option);\r\n    };\r\n    VueEx.prototype.getElem = function (val) {\r\n        var _0 = val[0];\r\n        if (_0 == \"#\") {\r\n            return document.getElementById(val.substr(1));\r\n        }\r\n    };\r\n    return VueEx;\r\n}(Vue));\r\nexports.VueEx = VueEx;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/VueEx.ts\n ** module id = 12\n ** module chunks = 0\n **/","\"use strict\";\r\nexports.PanelId = {\r\n    stagePanel: 'stage',\r\n    winPanel: 'win',\r\n    actPanel: 'act',\r\n    screenPanel: 'screen',\r\n    playerPanel: 'player'\r\n};\r\nexports.ServerConst = {\r\n    SEND_ASYNC: true,\r\n    DEF_AVATAR: '/img/panel/stage/blue.png'\r\n};\r\nexports.ViewConst = {\r\n    STAGE_WIDTH: 1920,\r\n    STAGE_HEIGHT: 1080\r\n};\r\nexports.TimerState = {\r\n    START_STR: 'start',\r\n    PAUSE_STR: 'pause',\r\n    PAUSE: 0,\r\n    RUNNING: 1\r\n};\r\nexports.ViewEvent = {\r\n    PLAYER_EDIT: 'edit player',\r\n    STRAIGHT3_LEFT: 'STRAIGHT3_LEFT',\r\n    STRAIGHT3_RIGHT: 'STRAIGHT3_RIGHT'\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/event/Const.ts\n ** module id = 13\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar BaseInfo_1 = require(\"./BaseInfo\");\r\nvar PlayerDoc = (function () {\r\n    function PlayerDoc() {\r\n        this.id = 0;\r\n        this.name = '';\r\n        this.phone = 0;\r\n        this.eloScore = 0;\r\n        this.style = 0;\r\n        this.avatar = \"\";\r\n        this.height = 0;\r\n        this.weight = 0;\r\n        this.dtScore = 0;\r\n        this.activityId = 0;\r\n        this.gameRec = [];\r\n        this.loseGameCount = 0;\r\n        this.winGameCount = 0;\r\n    }\r\n    return PlayerDoc;\r\n}());\r\nvar PlayerInfo = (function (_super) {\r\n    __extends(PlayerInfo, _super);\r\n    function PlayerInfo(playerData) {\r\n        _super.call(this);\r\n        this.playerData = new PlayerDoc();\r\n        this.isRed = true;\r\n        this.isMvp = false;\r\n        this.backNumber = 0;\r\n        if (playerData) {\r\n            if (playerData['playerData'] != null) {\r\n                this.playerData = BaseInfo_1.obj2Class(playerData.playerData, PlayerDoc);\r\n                this.setPlayerInfoFromData(playerData);\r\n            }\r\n            else {\r\n                this.playerData = BaseInfo_1.obj2Class(playerData, PlayerDoc);\r\n                this.setPlayerInfoFromData(playerData);\r\n            }\r\n        }\r\n    }\r\n    PlayerInfo.prototype.setPlayerInfoFromData = function (data) {\r\n        if (data['isRed'] != null)\r\n            this.isRed = data.isRed;\r\n        if (data['isMvp'] != null)\r\n            this.isMvp = data.isMvp;\r\n        if (data['backNumber'] != null)\r\n            this.backNumber = data.backNumber;\r\n    };\r\n    PlayerInfo.prototype.getPlayerData = function () {\r\n        this.playerData['isRed'] = this.isRed;\r\n        this.playerData['isMvp'] = this.isMvp;\r\n        this.playerData['backNumber'] = this.backNumber;\r\n        return this.playerData;\r\n    };\r\n    PlayerInfo.prototype.id = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"id\", val);\r\n    };\r\n    PlayerInfo.prototype.phone = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"phone\", val);\r\n    };\r\n    PlayerInfo.prototype.name = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"name\", val);\r\n    };\r\n    PlayerInfo.prototype.activityId = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"activityId\", val);\r\n    };\r\n    PlayerInfo.prototype.eloScore = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"eloScore\", val);\r\n    };\r\n    PlayerInfo.prototype.dtScore = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"dtScore\", val);\r\n    };\r\n    PlayerInfo.prototype.style = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"style\", val);\r\n    };\r\n    PlayerInfo.prototype.avatar = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"avatar\", val);\r\n    };\r\n    PlayerInfo.prototype.gameRec = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"gameRec\", val);\r\n    };\r\n    PlayerInfo.winPercent = function (playerDoc) {\r\n        var p = playerDoc.winGameCount / PlayerInfo.gameCount(playerDoc);\r\n        if (!p)\r\n            p = 0;\r\n        return p;\r\n    };\r\n    PlayerInfo.winPercentStr = function (playerDoc) {\r\n        return (PlayerInfo.winPercent(playerDoc) * 100).toFixed(1) + \"%\";\r\n    };\r\n    PlayerInfo.prototype.winpercent = function (val) {\r\n        return this.winGameCount() / this.gameCount();\r\n    };\r\n    PlayerInfo.gameCount = function (playerDoc) {\r\n        return (playerDoc.loseGameCount + playerDoc.winGameCount) || 0;\r\n    };\r\n    PlayerInfo.prototype.gameCount = function () {\r\n        return this.loseGameCount() + this.winGameCount();\r\n    };\r\n    PlayerInfo.prototype.winGameCount = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"winGameCount\", val);\r\n    };\r\n    PlayerInfo.prototype.loseGameCount = function (val) {\r\n        return BaseInfo_1.prop(this.playerData, \"loseGameCount\", val);\r\n    };\r\n    PlayerInfo.prototype.getWinPercent = function () {\r\n        return (this.winpercent() * 100).toFixed(1) + \"%\";\r\n    };\r\n    PlayerInfo.getStyleIcon = function (style) {\r\n        var path = '/img/panel/stage/';\r\n        if (style === 1) {\r\n            path += 'feng.png';\r\n        }\r\n        else if (style === 2) {\r\n            path += 'lin.png';\r\n        }\r\n        else if (style === 3) {\r\n            path += 'huo.png';\r\n        }\r\n        else if (style === 4) {\r\n            path += 'shan.png';\r\n        }\r\n        return path;\r\n    };\r\n    PlayerInfo.prototype.getWinStyleIcon = function () {\r\n        var path = '/img/panel/stage/win/';\r\n        if (this.style() == 1) {\r\n            path += 'fengWin.png';\r\n        }\r\n        else if (this.style() == 2) {\r\n            path += 'linWin.png';\r\n        }\r\n        else if (this.style() == 3) {\r\n            path += 'huoWin.png';\r\n        }\r\n        else if (this.style() == 4) {\r\n            path += 'shanWin.png';\r\n        }\r\n        return path;\r\n    };\r\n    PlayerInfo.prototype.getRec = function () {\r\n        return { id: this.id(), eloScore: this.eloScore(), dtScore: this.dtScore() };\r\n    };\r\n    PlayerInfo.prototype.saveScore = function (dtScore, isWin) {\r\n        this.dtScore(dtScore);\r\n        this.eloScore(this.eloScore() + dtScore);\r\n        if (isWin) {\r\n            this.winGameCount(this.winGameCount() + 1);\r\n        }\r\n        else\r\n            this.loseGameCount(this.loseGameCount() + 1);\r\n    };\r\n    PlayerInfo.prototype.getCurWinningPercent = function () {\r\n        return this.winGameCount() / (this.loseGameCount() + this.winGameCount());\r\n    };\r\n    return PlayerInfo;\r\n}(BaseInfo_1.BaseInfo));\r\nexports.PlayerInfo = PlayerInfo;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/model/PlayerInfo.ts\n ** module id = 14\n ** module chunks = 0\n **/","\"use strict\";\r\nexports.isdef = function (val) {\r\n    return val != undefined;\r\n};\r\nexports.prop = function (obj, paramName, v, callback) {\r\n    if (exports.isdef(v)) {\r\n        obj[paramName] = v;\r\n        if (callback)\r\n            callback();\r\n    }\r\n    else\r\n        return obj[paramName];\r\n};\r\nexports.obj2Class = function (obj, cls) {\r\n    var c = new cls;\r\n    for (var paramName in obj) {\r\n        c[paramName] = obj[paramName];\r\n    }\r\n    return c;\r\n};\r\nfunction setPropTo(data, obj) {\r\n    for (var key in data) {\r\n        if (obj.hasOwnProperty(key))\r\n            obj[key] = data[key];\r\n    }\r\n}\r\nexports.setPropTo = setPropTo;\r\nvar BaseDoc = (function () {\r\n    function BaseDoc() {\r\n    }\r\n    return BaseDoc;\r\n}());\r\nexports.BaseDoc = BaseDoc;\r\nvar BaseInfo = (function () {\r\n    function BaseInfo() {\r\n    }\r\n    return BaseInfo;\r\n}());\r\nexports.BaseInfo = BaseInfo;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/model/BaseInfo.ts\n ** module id = 15\n ** module chunks = 0\n **/","\"use strict\";\r\nvar PlayerInfo_1 = require(\"../../../model/PlayerInfo\");\r\nvar PlayerRender_1 = require(\"../render/PlayerRender\");\r\nvar PlayerPanel = (function () {\r\n    function PlayerPanel(parent) {\r\n        this.playerCardArr = [];\r\n        var ctn = parent.scorePanel.ctn;\r\n        var playerInfo = new PlayerInfo_1.PlayerInfo();\r\n        var px = 24;\r\n        var py = 12;\r\n        var invert = 150;\r\n        for (var i = 0; i < 4; i++) {\r\n            var playerCard = new PlayerRender_1.StagePlayerCard(playerInfo, 1, true, true);\r\n            playerCard.delayShow(i * 600);\r\n            playerCard.x = px + i * invert;\r\n            playerCard.y = py;\r\n            this.playerCardArr.push(playerCard);\r\n            ctn.addChild(playerCard);\r\n        }\r\n        px = 1247;\r\n        for (var i = 0; i < 4; i++) {\r\n            var playerCard = new PlayerRender_1.StagePlayerCard(playerInfo, 1, false, true);\r\n            playerCard.delayShow((3 - i) * 600);\r\n            playerCard.x = px + i * invert;\r\n            playerCard.y = py;\r\n            this.playerCardArr.push(playerCard);\r\n            ctn.addChild(playerCard);\r\n        }\r\n    }\r\n    PlayerPanel.prototype.setEloScore = function (idx, eloScore) {\r\n        this.playerCardArr[idx].setEloScore(eloScore);\r\n    };\r\n    PlayerPanel.prototype.setPlayer = function (idx, playerInfo) {\r\n        var playerCard = this.playerCardArr[idx];\r\n        playerCard.setPlayerInfo(playerInfo, 1, playerCard.isBlue);\r\n    };\r\n    PlayerPanel.prototype.init = function (gameDoc) {\r\n        for (var i = 0; i < gameDoc.playerInfoArr.length; i++) {\r\n            if (gameDoc.playerInfoArr[i]) {\r\n                this.setPlayer(i, new PlayerInfo_1.PlayerInfo(gameDoc.playerInfoArr[i]));\r\n            }\r\n        }\r\n    };\r\n    return PlayerPanel;\r\n}());\r\nexports.PlayerPanel = PlayerPanel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/stage/PlayerPanel.ts\n ** module id = 16\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar JsFunc_1 = require(\"../../../utils/JsFunc\");\r\nvar PlayerInfo_1 = require(\"../../../model/PlayerInfo\");\r\nvar Fx_1 = require(\"../../../utils/Fx\");\r\nvar Container = createjs.Container;\r\nvar StagePlayerCard = (function (_super) {\r\n    __extends(StagePlayerCard, _super);\r\n    function StagePlayerCard(playerInfo, scale, isBlue, isDelayShow) {\r\n        if (scale === void 0) { scale = 1; }\r\n        if (isBlue === void 0) { isBlue = true; }\r\n        if (isDelayShow === void 0) { isDelayShow = false; }\r\n        _super.call(this);\r\n        this._delayShowEnd = false;\r\n        this.isDelayShow = isDelayShow;\r\n        this.setPlayerInfo(playerInfo, scale, isBlue);\r\n    }\r\n    StagePlayerCard.prototype.setName = function (name) {\r\n        this.nameText.text = name;\r\n    };\r\n    StagePlayerCard.prototype.setEloScore = function (eloScore) {\r\n        this.eloScoreText.text = eloScore.toString();\r\n    };\r\n    StagePlayerCard.prototype.setBackNumber = function (backNumber) {\r\n        this.backNumText.text = backNumber.toString();\r\n    };\r\n    StagePlayerCard.prototype.setStyle = function (style) {\r\n        this._styleCtn.removeAllChildren();\r\n        var styleIcon = new createjs.Bitmap(PlayerInfo_1.PlayerInfo.getStyleIcon(style));\r\n        this._styleCtn.addChild(styleIcon);\r\n    };\r\n    StagePlayerCard.prototype.setPlayerInfo = function (playerInfo, scale, isBlue) {\r\n        var _this = this;\r\n        if (scale === void 0) { scale = 1; }\r\n        if (isBlue === void 0) { isBlue = true; }\r\n        this.isBlue = isBlue;\r\n        var ctn = this;\r\n        this.removeAllChildren();\r\n        function _isBluePath(p) {\r\n            if (isBlue)\r\n                return p + \"Blue.png\";\r\n            return p + \"Red.png\";\r\n        }\r\n        var avatarFrame = new createjs.Bitmap(_isBluePath('/img/panel/stage/avatarFrame'));\r\n        var avatarCtn = new createjs.Container();\r\n        this.avatarCtn = avatarCtn;\r\n        if (isBlue) {\r\n            avatarCtn.x = 19;\r\n            avatarCtn.y = 1;\r\n        }\r\n        else {\r\n            avatarCtn.x = 3;\r\n            avatarCtn.y = 1;\r\n        }\r\n        var avatarMask = new createjs.Shape();\r\n        var sx = 44;\r\n        if (isBlue)\r\n            avatarMask.graphics.beginFill(\"#000000\")\r\n                .moveTo(sx, 0)\r\n                .lineTo(0, 76)\r\n                .lineTo(180 - sx, 76)\r\n                .lineTo(180, 0)\r\n                .lineTo(sx, 0);\r\n        else {\r\n            avatarMask.graphics.beginFill(\"#000000\")\r\n                .moveTo(0, 0)\r\n                .lineTo(sx, 76)\r\n                .lineTo(180, 76)\r\n                .lineTo(180 - sx, 0)\r\n                .lineTo(0, 0);\r\n        }\r\n        var avatarPath;\r\n        if (isBlue)\r\n            avatarPath = '/img/panel/stage/blue.png';\r\n        else\r\n            avatarPath = '/img/panel/stage/red.png';\r\n        avatarPath = playerInfo.avatar() || avatarPath;\r\n        JsFunc_1.loadImg(avatarPath, function () {\r\n            var avatarBmp = new createjs.Bitmap(avatarPath);\r\n            avatarBmp.mask = avatarMask;\r\n            avatarCtn.addChild(avatarMask);\r\n            avatarCtn.addChild(avatarBmp);\r\n            _this.avatarBmp = avatarBmp;\r\n            if (_this.isDelayShow) {\r\n                if (_this._delayShowEnd) {\r\n                    Fx_1.blink(avatarBmp);\r\n                }\r\n                else {\r\n                    avatarBmp.alpha = 0;\r\n                }\r\n            }\r\n            avatarBmp.scaleX = avatarBmp.scaleY = 180 / avatarBmp.getBounds().width;\r\n        });\r\n        ctn.addChild(avatarCtn);\r\n        ctn.addChild(avatarFrame);\r\n        var backNumText = new createjs.Text(playerInfo.backNumber + \"\", \"18px Arial\", \"#fff\");\r\n        backNumText.y = 5;\r\n        this.backNumText = backNumText;\r\n        if (isBlue) {\r\n            backNumText.textAlign = \"right\";\r\n            backNumText.x = 182;\r\n        }\r\n        else {\r\n            backNumText.textAlign = \"left\";\r\n            backNumText.x = 15;\r\n        }\r\n        ctn.addChild(backNumText);\r\n        var eloText = '';\r\n        if (playerInfo.gameRec().length >= 3)\r\n            eloText = playerInfo.eloScore();\r\n        else {\r\n            var newPlayerIcon = new createjs.Bitmap('/img/panel/stage/newPlayer.png');\r\n            if (isBlue)\r\n                newPlayerIcon.x = 37;\r\n            else\r\n                newPlayerIcon.x = 139;\r\n            newPlayerIcon.y = 61;\r\n            ctn.addChild(newPlayerIcon);\r\n        }\r\n        console.log(\"player\" + playerInfo.name() + \"game Count\", playerInfo.gameCount());\r\n        var eloScoreText = new createjs.Text(eloText, \"18px Arial\", \"#fff\");\r\n        eloScoreText.y = 59;\r\n        this.eloScoreText = eloScoreText;\r\n        if (isBlue) {\r\n            eloScoreText.textAlign = \"left\";\r\n            eloScoreText.x = 31;\r\n        }\r\n        else {\r\n            eloScoreText.textAlign = \"right\";\r\n            eloScoreText.x = 172;\r\n        }\r\n        ctn.addChild(eloScoreText);\r\n        var styleCtn = new createjs.Container();\r\n        this._styleCtn = styleCtn;\r\n        var styleIcon = new createjs.Bitmap(PlayerInfo_1.PlayerInfo.getStyleIcon(playerInfo.style()));\r\n        if (isBlue) {\r\n            styleCtn.x = 110;\r\n        }\r\n        else {\r\n            styleCtn.x = 52;\r\n        }\r\n        styleCtn.y = 75;\r\n        Fx_1.blink(styleIcon);\r\n        styleCtn.addChild(styleIcon);\r\n        ctn.addChild(styleCtn);\r\n        var nameText = new createjs.Text(playerInfo.name(), \"bold 18px Arial\", \"#fff\");\r\n        this.nameText = nameText;\r\n        nameText.y = 84;\r\n        if (isBlue) {\r\n            nameText.textAlign = \"left\";\r\n            nameText.x = 16;\r\n        }\r\n        else {\r\n            nameText.textAlign = \"right\";\r\n            nameText.x = 185;\r\n        }\r\n        ctn.addChild(nameText);\r\n        return ctn;\r\n    };\r\n    StagePlayerCard.prototype.delayShow = function (delay) {\r\n        var _this = this;\r\n        console.log('delay show', delay);\r\n        this._delayShowEnd = false;\r\n        createjs.Tween.get(this.avatarCtn).wait(delay).call(function () {\r\n            _this._delayShowEnd = true;\r\n            if (_this.avatarBmp) {\r\n                Fx_1.blink(_this.avatarBmp);\r\n            }\r\n            if (_this._styleCtn) {\r\n                Fx_1.blink(_this._styleCtn);\r\n            }\r\n        });\r\n        Fx_1.delayCall(delay, function () {\r\n            _this.avatarBmp.alpha = 0;\r\n        });\r\n    };\r\n    StagePlayerCard.newScoreText = function () {\r\n        var sheet = new createjs.SpriteSheet({\r\n            animations: {\r\n                \"0\": 1,\r\n                \"1\": 2,\r\n                \"2\": 3,\r\n                \"3\": 4,\r\n                \"4\": 5,\r\n                \"5\": 6,\r\n                \"6\": 7,\r\n                \"7\": 8,\r\n                \"8\": 9,\r\n                \"9\": 0\r\n            },\r\n            images: [\"/img/panel/stage/scoreNum.png\"],\r\n            frames: [[0, 0, 40, 54],\r\n                [41, 0, 40, 54],\r\n                [0, 55, 40, 54],\r\n                [41, 55, 40, 54],\r\n                [82, 0, 40, 54],\r\n                [82, 55, 40, 54],\r\n                [123, 0, 40, 54],\r\n                [123, 55, 40, 54],\r\n                [0, 110, 40, 54],\r\n                [41, 110, 40, 54]]\r\n        });\r\n        return new createjs.BitmapText(\"0\", sheet);\r\n    };\r\n    return StagePlayerCard;\r\n}(Container));\r\nexports.StagePlayerCard = StagePlayerCard;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/render/PlayerRender.ts\n ** module id = 17\n ** module chunks = 0\n **/","\"use strict\";\r\nfunction ascendingProp(prop) {\r\n    return function (a, b) {\r\n        return a[prop] - b[prop];\r\n    };\r\n}\r\nexports.ascendingProp = ascendingProp;\r\nfunction descendingProp(prop) {\r\n    return function (a, b) {\r\n        return b[prop] - a[prop];\r\n    };\r\n}\r\nexports.descendingProp = descendingProp;\r\nfunction mapToSortArray(map, prop, sortFunc) {\r\n    var arr = [];\r\n    for (var k in map) {\r\n        arr.push(map[k]);\r\n    }\r\n    arr.sort(sortFunc(prop));\r\n    return arr;\r\n}\r\nexports.mapToSortArray = mapToSortArray;\r\nfunction mapToArr(map) {\r\n    var a = [];\r\n    for (var k in map) {\r\n        a.push(map[k]);\r\n    }\r\n    return a;\r\n}\r\nexports.mapToArr = mapToArr;\r\nfunction arrCountSame(arrA, arrB) {\r\n    var n = 0;\r\n    for (var i = 0; i < arrB.length; i++) {\r\n        var obj = arrB[i];\r\n        if (arrA.indexOf(obj) > -1) {\r\n            n++;\r\n        }\r\n    }\r\n    return n;\r\n}\r\nexports.arrCountSame = arrCountSame;\r\nfunction arrUniqueFilter(el, i, a) {\r\n    return i == a.indexOf(el);\r\n}\r\nexports.arrUniqueFilter = arrUniqueFilter;\r\nfunction loadImg(path1, callback) {\r\n    var img = new Image();\r\n    img.onload = callback;\r\n    img.src = path1;\r\n}\r\nexports.loadImg = loadImg;\r\nfunction loadImgArr(pathArr, callback) {\r\n    var count = pathArr.length;\r\n    function onLoadImg() {\r\n        count--;\r\n        if (count === 0)\r\n            callback();\r\n    }\r\n    for (var i = 0; i < pathArr.length; i++) {\r\n        var p = pathArr[i];\r\n        var img = new Image();\r\n        img.onload = onLoadImg;\r\n        img.src = p;\r\n    }\r\n}\r\nexports.loadImgArr = loadImgArr;\r\nfunction combineArr(arr, num) {\r\n    var r = [];\r\n    (function f(t, a, n) {\r\n        if (n == 0) {\r\n            return r.push(t);\r\n        }\r\n        for (var i = 0, l = a.length; i <= l - n; i++) {\r\n            f(t.concat(a[i]), a.slice(i + 1), n - 1);\r\n        }\r\n    })([], arr, num);\r\n    return r;\r\n}\r\nexports.combineArr = combineArr;\r\nfunction formatSecond(sec, minStr, secStr) {\r\n    if (minStr === void 0) { minStr = \":\"; }\r\n    if (secStr === void 0) { secStr = \"\"; }\r\n    var min = Math.floor(sec / 60);\r\n    var s = sec % 60;\r\n    var strMin = min + \"\";\r\n    var strSec = s + \"\";\r\n    if (min < 10)\r\n        strMin = \"0\" + strMin;\r\n    if (s < 10)\r\n        strSec = \"0\" + strSec;\r\n    return strMin + minStr + strSec + secStr;\r\n}\r\nexports.formatSecond = formatSecond;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/utils/JsFunc.ts\n ** module id = 18\n ** module chunks = 0\n **/","\"use strict\";\r\nfunction delayCall(delay, callback) {\r\n    createjs.Tween.get(this).wait(delay).call(callback);\r\n}\r\nexports.delayCall = delayCall;\r\nfunction blink(target, time, loop) {\r\n    if (time === void 0) { time = 80; }\r\n    if (loop === void 0) { loop = false; }\r\n    var blink = time;\r\n    createjs.Tween.get(target, { loop: loop })\r\n        .to({ alpha: 1 }, blink)\r\n        .to({ alpha: 0 }, blink)\r\n        .to({ alpha: 1 }, blink)\r\n        .to({ alpha: 0 }, blink)\r\n        .to({ alpha: 1 }, blink);\r\n}\r\nexports.blink = blink;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/utils/Fx.ts\n ** module id = 19\n ** module chunks = 0\n **/","\"use strict\";\r\nvar JsFunc_1 = require(\"../../../utils/JsFunc\");\r\nvar Const_1 = require(\"../../../event/Const\");\r\nvar PlayerInfo_1 = require(\"../../../model/PlayerInfo\");\r\nvar EventPanel = (function () {\r\n    function EventPanel(parent) {\r\n        var ctn = new createjs.Container();\r\n        parent.stage.addChild(ctn);\r\n        this.ctn = ctn;\r\n    }\r\n    EventPanel.prototype.fadeInStraight3 = function (isRed) {\r\n        var _this = this;\r\n        console.log(\"straight score 3 isRed:\", isRed);\r\n        var isBusy = false;\r\n        isBusy = true;\r\n        this.ctn.removeAllChildren();\r\n        var ctn = new createjs.Container();\r\n        var basePath = '/img/panel/stage/straight3';\r\n        if (isRed)\r\n            basePath += 'Red.png';\r\n        else\r\n            basePath += 'Blue.png';\r\n        JsFunc_1.loadImg(basePath, function () {\r\n            var txt3 = new createjs.Bitmap(basePath);\r\n            var bound = txt3.getBounds();\r\n            txt3.x = -bound.width;\r\n            txt3.y = -bound.height;\r\n            ctn.addChild(txt3);\r\n            ctn.x = 1920 / 2 + 200;\r\n            ctn.y = 200;\r\n            ctn.alpha = 1;\r\n            ctn.scaleX = ctn.scaleY = 5;\r\n            _this.ctn.addChild(ctn);\r\n            createjs.Tween.get(ctn)\r\n                .to({ scaleX: 1, scaleY: 1 }, 150)\r\n                .wait(4000)\r\n                .to({ alpha: 0 }, 200).call(function () {\r\n                isBusy = false;\r\n            });\r\n        });\r\n    };\r\n    EventPanel.prototype.fadeInWinPanel = function (teamInfo, mvpIdx, mpvId) {\r\n        var mvp = Number(mvpIdx);\r\n        console.log(this, \"show fadeInWinPanel mvp:\", mvp);\r\n        var ctn = this.ctn;\r\n        var modal = new createjs.Shape();\r\n        modal.graphics.beginFill('#000').drawRect(0, 0, Const_1.ViewConst.STAGE_WIDTH, Const_1.ViewConst.STAGE_HEIGHT);\r\n        modal.alpha = .3;\r\n        ctn.addChild(modal);\r\n        var playerCtn = new createjs.Container();\r\n        ctn.addChild(playerCtn);\r\n        var isRedWin = (mvp > 3);\r\n        var isBlue = (mvp < 4);\r\n        var titlePath = \"/img/panel/stage/win/winPanelTitle\";\r\n        if (isRedWin)\r\n            titlePath += 'Red.png';\r\n        else\r\n            titlePath += 'Blue.png';\r\n        var titleCtn = new createjs.Container();\r\n        JsFunc_1.loadImg(titlePath, function () {\r\n            var title = new createjs.Bitmap(titlePath);\r\n            title.x = -419;\r\n            title.y = -158;\r\n            titleCtn.x = (Const_1.ViewConst.STAGE_WIDTH) * .5;\r\n            titleCtn.y = 198;\r\n            titleCtn.scaleX = titleCtn.scaleY = 5;\r\n            titleCtn.alpha = 0;\r\n            createjs.Tween.get(titleCtn).to({ scaleX: 1, scaleY: 1, alpha: 1 }, 150);\r\n            titleCtn.addChild(title);\r\n        });\r\n        ctn.addChild(titleCtn);\r\n        var prePlayerIsMvp = false;\r\n        playerCtn.x = (Const_1.ViewConst.STAGE_WIDTH - 4 * 390) * .5;\r\n        playerCtn.y = 300;\r\n        var start = 0;\r\n        if (!isBlue) {\r\n        }\r\n        for (var i = start; i < start + 4; i++) {\r\n            var pInfo;\r\n            pInfo = new PlayerInfo_1.PlayerInfo(teamInfo.playerInfoArr[i].playerData);\r\n            pInfo.isRed = teamInfo.playerInfoArr[i].isRed;\r\n            pInfo.isBlue = isBlue;\r\n            pInfo.isMvp = pInfo.id() == mpvId;\r\n            var playerCard = this.getWinPlayerCard(pInfo, function () {\r\n                var bound = playerCard.getBounds();\r\n                if (bound)\r\n                    playerCard.cache(bound.x, bound.y, bound.width, bound.height);\r\n            });\r\n            playerCard.x = i * 390;\r\n            if (pInfo.isMvp)\r\n                playerCard.y = -30;\r\n            else\r\n                playerCard.y = 0;\r\n            playerCard.px = playerCard.x;\r\n            playerCard.py = playerCard.y;\r\n            playerCard.x = 500;\r\n            playerCard.scaleX = playerCard.scaleY = 0.01;\r\n            createjs.Tween.get(playerCard)\r\n                .to({ x: playerCard.px, scaleX: 1.1, scaleY: 1.1 }, 200)\r\n                .to({ scaleX: 1, scaleY: 1 }, 60);\r\n            playerCtn.addChild(playerCard);\r\n            prePlayerIsMvp = pInfo.isMvp;\r\n        }\r\n    };\r\n    EventPanel.prototype.getWinPlayerCard = function (p, callback) {\r\n        var isMvp = p.isMvp;\r\n        var ctn = new createjs.Container();\r\n        console.log(\"playerCard=======:\", p.avatar());\r\n        JsFunc_1.loadImg(p.avatar(), function () {\r\n            var avatar = new createjs.Bitmap(p.avatar());\r\n            var scale = 80 / avatar.getBounds().height;\r\n            if (isMvp) {\r\n                avatar.scaleX = avatar.scaleY = 1.5 * scale;\r\n                avatar.x = (180 - 180 * 1.2) * .5 + 60;\r\n                avatar.y = 45 + 30;\r\n            }\r\n            else {\r\n                avatar.scaleX = avatar.scaleY = 1.2 * scale;\r\n                avatar.x = (180 - 180 * 1.2) * .5 + 60;\r\n                avatar.y = 50 + 30;\r\n            }\r\n            ctn.addChild(avatar);\r\n            var bgPath = '/img/panel/stage/win/playerBgWin';\r\n            if (p.isBlue)\r\n                bgPath += \"Blue\";\r\n            else\r\n                bgPath += \"Red\";\r\n            if (p.isMvp)\r\n                bgPath += \"Mvp\";\r\n            bgPath += '.png';\r\n            var bg = new createjs.Bitmap(bgPath);\r\n            if (p.isMvp) {\r\n                bg.x = -132;\r\n                bg.y = -105;\r\n            }\r\n            else {\r\n                bg.x = -116;\r\n                bg.y = -80;\r\n            }\r\n            ctn.addChild(bg);\r\n            var col;\r\n            if (p.isRed)\r\n                col = \"#e23f6b\";\r\n            else\r\n                col = \"#1ac3fa\";\r\n            var nameCol = \"#ddd\";\r\n            if (isMvp)\r\n                nameCol = \"#f1c236\";\r\n            var name;\r\n            if (isMvp)\r\n                name = new createjs.Text(p.name(), \"30px Arial\", nameCol);\r\n            else\r\n                name = new createjs.Text(p.name(), \"30px Arial\", col);\r\n            name.textAlign = 'center';\r\n            name.x = 90 + 60;\r\n            name.y = 200;\r\n            if (isMvp) {\r\n                name.x += 20;\r\n                name.y = 215;\r\n            }\r\n            ctn.addChild(name);\r\n            var eloScore;\r\n            var eloScoreText = '新秀';\r\n            if (p.gameCount() >= 3) {\r\n                eloScoreText = p.eloScore();\r\n            }\r\n            eloScore = new createjs.Text(eloScoreText, \"bold 32px Arial\", nameCol);\r\n            eloScore.textAlign = 'center';\r\n            eloScore.x = name.x;\r\n            eloScore.y = 245 + 30;\r\n            if (isMvp)\r\n                eloScore.y += 30;\r\n            ctn.addChild(eloScore);\r\n            var eloScoreDt = new createjs.Text(\"+\" + p.dtScore(), \"12px Arial\", col);\r\n            eloScoreDt.textAlign = 'left';\r\n            eloScoreDt.x = 140 + 60;\r\n            eloScoreDt.y = 260 + 30;\r\n            if (isMvp) {\r\n                eloScoreDt.x += 30;\r\n                eloScoreDt.y += 30;\r\n            }\r\n            ctn.addChild(eloScoreDt);\r\n            var winpercent = new createjs.Text(\"胜率\" + p.getWinPercent(), \"18px Arial\", col);\r\n            winpercent.textAlign = 'center';\r\n            winpercent.x = name.x;\r\n            winpercent.y = 320;\r\n            if (isMvp)\r\n                winpercent.y += 35;\r\n            ctn.addChild(winpercent);\r\n            var gameCount = new createjs.Text(\"场数\" + p.gameCount(), \"18px Arial\", col);\r\n            gameCount.textAlign = 'center';\r\n            gameCount.x = name.x;\r\n            gameCount.y = 350;\r\n            if (isMvp)\r\n                gameCount.y += 35;\r\n            ctn.addChild(gameCount);\r\n            var style = new createjs.Bitmap(p.getWinStyleIcon());\r\n            style.x = 110;\r\n            style.y = 370;\r\n            if (isMvp) {\r\n                style.x += 20;\r\n                style.y += 45;\r\n            }\r\n            ctn.addChild(style);\r\n            callback();\r\n        });\r\n        return ctn;\r\n    };\r\n    EventPanel.prototype.fadeOutWinPanel = function () {\r\n        console.log(this, \"show fade Out WinPanel\");\r\n        var ctn = this.ctn;\r\n        createjs.Tween.get(ctn).to({ alpha: 0 }, 200)\r\n            .call(function () {\r\n            ctn.alpha = 1;\r\n            ctn.removeAllChildren();\r\n        });\r\n    };\r\n    return EventPanel;\r\n}());\r\nexports.EventPanel = EventPanel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/stage/EventPanel.ts\n ** module id = 20\n ** module chunks = 0\n **/","\"use strict\";\r\nvar JsFunc_1 = require(\"../../../utils/JsFunc\");\r\nvar GameInfo_1 = require(\"../../../model/GameInfo\");\r\nvar Fx_1 = require(\"../../../utils/Fx\");\r\nvar Const_1 = require(\"../../../event/Const\");\r\nvar ScorePanel = (function () {\r\n    function ScorePanel(parent) {\r\n        this.timeOnSec = 0;\r\n        var scoreCtn = new createjs.Container();\r\n        this.ctn = scoreCtn;\r\n        scoreCtn.y = parent.stageHeight - 132;\r\n        parent.stage.addChild(scoreCtn);\r\n        var bg = new createjs.Bitmap('/img/panel/stage/scoreBg.png');\r\n        bg.x = 1;\r\n        scoreCtn.addChild(bg);\r\n        var timeText = new createjs.Text(\"99:99\", \"28px Arial\", \"#fff\");\r\n        timeText.x = parent.stageWidth * .5 - 31;\r\n        timeText.y = 100;\r\n        this.timeText = timeText;\r\n        scoreCtn.addChild(timeText);\r\n        var sheet = new createjs.SpriteSheet({\r\n            animations: {\r\n                \"0\": 1, \"1\": 2, \"2\": 3, \"3\": 4, \"4\": 5,\r\n                \"5\": 6, \"6\": 7, \"7\": 8, \"8\": 9, \"9\": 0\r\n            },\r\n            images: [\"/img/panel/stage/scoreNum.png\"],\r\n            frames: [[0, 0, 40, 54],\r\n                [41, 0, 40, 54],\r\n                [0, 55, 40, 54],\r\n                [41, 55, 40, 54],\r\n                [82, 0, 40, 54],\r\n                [82, 55, 40, 54],\r\n                [123, 0, 40, 54],\r\n                [123, 55, 40, 54],\r\n                [0, 110, 40, 54],\r\n                [41, 110, 40, 54]]\r\n        });\r\n        var px = 865;\r\n        var leftScoreNum = new createjs.BitmapText(\"0\", sheet);\r\n        leftScoreNum.letterSpacing = -2;\r\n        leftScoreNum.x = px;\r\n        leftScoreNum.y = 60;\r\n        this.leftScoreText = leftScoreNum;\r\n        this.leftScoreTextX = leftScoreNum.x;\r\n        scoreCtn.addChild(leftScoreNum);\r\n        var rightScoreNum = new createjs.BitmapText(\"0\", sheet);\r\n        rightScoreNum.letterSpacing = -2;\r\n        rightScoreNum.x = px + 160;\r\n        rightScoreNum.y = leftScoreNum.y;\r\n        this.rightScoreText = rightScoreNum;\r\n        this.rightScoreTextX = rightScoreNum.x;\r\n        scoreCtn.addChild(rightScoreNum);\r\n        this.leftCircleArr = [];\r\n        this.rightCircleArr = [];\r\n        var px = 675;\r\n        var py = 88;\r\n        for (var i = 0; i < 7; i++) {\r\n            var leftScoreBg = new createjs.Bitmap(\"/img/panel/stage/leftScoreBg.png\");\r\n            leftScoreBg.x = px + i * 20;\r\n            leftScoreBg.y = py;\r\n            scoreCtn.addChild(leftScoreBg);\r\n            var leftScore = new createjs.Bitmap(\"/img/panel/stage/leftScore.png\");\r\n            leftScore.x = leftScoreBg.x;\r\n            leftScore.y = leftScoreBg.y;\r\n            scoreCtn.addChild(leftScore);\r\n            this.leftCircleArr.push(leftScore);\r\n        }\r\n        px = 1090;\r\n        for (var i = 0; i < 7; i++) {\r\n            var rightScoreBg = new createjs.Bitmap(\"/img/panel/stage/rightScoreBg.png\");\r\n            rightScoreBg.x = px + i * 20;\r\n            rightScoreBg.y = py;\r\n            scoreCtn.addChild(rightScoreBg);\r\n            var rightScore = new createjs.Bitmap(\"/img/panel/stage/rightScore.png\");\r\n            rightScore.x = rightScoreBg.x;\r\n            rightScore.y = rightScoreBg.y;\r\n            scoreCtn.addChild(rightScore);\r\n            this.rightCircleArr.push(rightScore);\r\n        }\r\n        px = 770;\r\n        var lTxt = new createjs.Text(\"\", \"28px Arial\", \"#fff\");\r\n        lTxt.text = '0';\r\n        lTxt.textAlign = 'center';\r\n        lTxt.x = px;\r\n        lTxt.y = 22;\r\n        this.leftAvgEloScoreText = lTxt;\r\n        scoreCtn.addChild(lTxt);\r\n        var rTxt = new createjs.Text(\"\", \"28px Arial\", \"#fff\");\r\n        rTxt.text = '0';\r\n        rTxt.textAlign = 'center';\r\n        rTxt.x = lTxt.x + 385;\r\n        rTxt.y = lTxt.y;\r\n        this.rightAvgEloScoreText = rTxt;\r\n        scoreCtn.addChild(rTxt);\r\n    }\r\n    Object.defineProperty(ScorePanel.prototype, \"isBlueWin\", {\r\n        get: function () {\r\n            return Number(this.leftScoreText.text) > Number(this.rightScoreText.text);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScorePanel.prototype.setLeftScore = function (leftScore) {\r\n        this.leftScoreText.text = leftScore + \"\";\r\n        if (leftScore > 9)\r\n            this.leftScoreText.x = this.leftScoreTextX - 18;\r\n        else\r\n            this.leftScoreText.x = this.leftScoreTextX;\r\n        var len = this.leftCircleArr.length;\r\n        for (var i = 0; i < this.leftCircleArr.length; i++) {\r\n            if (i < leftScore) {\r\n                if (this.leftCircleArr[len - 1 - i].alpha == 0)\r\n                    Fx_1.blink(this.leftCircleArr[len - 1 - i]);\r\n            }\r\n            else {\r\n                createjs.Tween.get(this.leftCircleArr[len - 1 - i]).to({ alpha: 0 }, 200);\r\n            }\r\n        }\r\n    };\r\n    ScorePanel.prototype.setRightScore = function (rightScore) {\r\n        if (rightScore > 9)\r\n            this.rightScoreText.x = this.rightScoreTextX - 18;\r\n        else\r\n            this.rightScoreText.x = this.rightScoreTextX;\r\n        this.rightScoreText.text = rightScore + \"\";\r\n        var len = this.rightCircleArr.length;\r\n        for (var i = 0; i < len; i++) {\r\n            if (i < rightScore) {\r\n                if (this.rightCircleArr[i].alpha == 0)\r\n                    Fx_1.blink(this.rightCircleArr[i]);\r\n            }\r\n            else {\r\n                createjs.Tween.get(this.rightCircleArr[i]).to({ alpha: 0 }, 200);\r\n            }\r\n        }\r\n    };\r\n    ScorePanel.prototype.setAvgEloScore = function (data) {\r\n        this.leftAvgEloScoreText.text = data.left + \"\";\r\n        this.rightAvgEloScoreText.text = data.right + \"\";\r\n    };\r\n    ScorePanel.prototype.resetTimer = function () {\r\n        this.timeOnSec = 0;\r\n        this.timerState = Const_1.TimerState.PAUSE;\r\n        this.timeText.text = JsFunc_1.formatSecond(this.timeOnSec);\r\n    };\r\n    ScorePanel.prototype.toggleTimer1 = function () {\r\n        var _this = this;\r\n        if (this.timerId) {\r\n            clearInterval(this.timerId);\r\n            this.timerId = 0;\r\n            this.timerState = Const_1.TimerState.PAUSE;\r\n        }\r\n        else {\r\n            this.timerId = setInterval(function () {\r\n                _this.timeOnSec++;\r\n                _this.timeText.text = JsFunc_1.formatSecond(_this.timeOnSec);\r\n            }, 1000);\r\n            this.timerState = Const_1.TimerState.RUNNING;\r\n        }\r\n    };\r\n    ScorePanel.prototype.setTime = function (time, state) {\r\n        this.timeText.text = JsFunc_1.formatSecond(time);\r\n        this.timeOnSec = time;\r\n        if (state) {\r\n            this.toggleTimer1();\r\n        }\r\n    };\r\n    ScorePanel.prototype.init = function (gameInfo) {\r\n        this.setLeftScore(gameInfo.leftScore);\r\n        this.setRightScore(gameInfo.rightScore);\r\n        var gameInfoClone = new GameInfo_1.GameInfo(gameInfo);\r\n        this.setAvgEloScore(gameInfoClone.getAvgEloScore());\r\n    };\r\n    return ScorePanel;\r\n}());\r\nexports.ScorePanel = ScorePanel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/stage/ScorePanel.ts\n ** module id = 21\n ** module chunks = 0\n **/","\"use strict\";\r\nvar TeamInfo_1 = require(\"./TeamInfo\");\r\nvar PlayerInfo_1 = require(\"./PlayerInfo\");\r\nvar BaseInfo_1 = require(\"./BaseInfo\");\r\nvar Const_1 = require(\"../event/Const\");\r\nvar GameDoc = (function () {\r\n    function GameDoc() {\r\n        this.id = -1;\r\n        this.blueScore = 0;\r\n        this.redScore = 0;\r\n        this.mvp = 0;\r\n    }\r\n    return GameDoc;\r\n}());\r\nexports.GameDoc = GameDoc;\r\nvar GameInfo = (function () {\r\n    function GameInfo(gameDoc) {\r\n        this.id = 0;\r\n        this.winScore = 7;\r\n        this.leftScore = 0;\r\n        this.rightScore = 0;\r\n        this.leftFoul = 0;\r\n        this.rightFoul = 0;\r\n        this.time = 0;\r\n        this.timerState = 0;\r\n        this.straightScoreLeft = 0;\r\n        this.straightScoreStack = [];\r\n        this.straightScoreRight = 0;\r\n        this.playerInfoArr = new Array(8);\r\n        this.playerRecArr = [];\r\n        this._timer = null;\r\n        this.gameState = 0;\r\n        this.unLimitScore = 0;\r\n        if (gameDoc) {\r\n            BaseInfo_1.setPropTo(gameDoc, this);\r\n            var playerDocArr = this.playerInfoArr;\r\n            this.playerInfoArr = [];\r\n            for (var i = 0; i < playerDocArr.length; i++) {\r\n                this.playerInfoArr.push(new PlayerInfo_1.PlayerInfo(playerDocArr[i]));\r\n            }\r\n        }\r\n    }\r\n    GameInfo.prototype.getAvgEloScore = function () {\r\n        var sum = 0;\r\n        var count = 0;\r\n        var leftPlayerArr = this.getLeftTeam();\r\n        for (var i = 0; i < leftPlayerArr.length; i++) {\r\n            var obj = leftPlayerArr[i];\r\n            if (obj) {\r\n                count++;\r\n                sum += obj.eloScore();\r\n            }\r\n        }\r\n        var left = Math.floor(sum / count);\r\n        sum = 0;\r\n        count = 0;\r\n        var playerArr = this.getRightTeam();\r\n        for (var i = 0; i < playerArr.length; i++) {\r\n            var obj = playerArr[i];\r\n            if (obj) {\r\n                count++;\r\n                sum += obj.eloScore();\r\n            }\r\n        }\r\n        var right = Math.floor(sum / count);\r\n        return { left: left, right: right };\r\n    };\r\n    GameInfo.prototype.addLeftScore = function () {\r\n        if (this.unLimitScore === 1)\r\n            this.leftScore += 1;\r\n        else\r\n            this.leftScore = (this.leftScore + 1) % (this.winScore + 1);\r\n        this.pushStraightScore();\r\n        this.straightScoreRight = 0;\r\n        this.straightScoreLeft++;\r\n        if (this.leftScore == 0)\r\n            this.straightScoreLeft = 0;\r\n        return this.straightScoreLeft;\r\n    };\r\n    GameInfo.prototype.minLeftScore = function () {\r\n        if (this.unLimitScore === 1)\r\n            this.leftScore -= 1;\r\n        else\r\n            this.leftScore = (this.leftScore - 1) % (this.winScore + 1);\r\n        this.popStraightScore();\r\n    };\r\n    GameInfo.prototype.pushStraightScore = function () {\r\n        this.straightScoreStack.push({ left: this.straightScoreLeft, right: this.straightScoreRight });\r\n    };\r\n    GameInfo.prototype.popStraightScore = function () {\r\n        var stack = this.straightScoreStack.pop();\r\n        this.straightScoreLeft = stack.left;\r\n        this.straightScoreRight = stack.right;\r\n    };\r\n    GameInfo.prototype.minRightScore = function () {\r\n        if (this.unLimitScore === 1)\r\n            this.rightScore -= 1;\r\n        else\r\n            this.rightScore = (this.rightScore - 1) % (this.winScore + 1);\r\n        this.popStraightScore();\r\n    };\r\n    GameInfo.prototype.addRightScore = function () {\r\n        if (this.unLimitScore === 1)\r\n            this.rightScore += 1;\r\n        else\r\n            this.rightScore = (this.rightScore + 1) % (this.winScore + 1);\r\n        this.pushStraightScore();\r\n        this.straightScoreLeft = 0;\r\n        this.straightScoreRight++;\r\n        if (this.rightScore == 0)\r\n            this.straightScoreRight = 0;\r\n        return this.straightScoreRight;\r\n    };\r\n    GameInfo.prototype.getGameId = function () {\r\n        return this.id;\r\n    };\r\n    GameInfo.prototype.toggleTimer = function (state) {\r\n        var _this = this;\r\n        if (state) {\r\n            if (state === Const_1.TimerState.PAUSE) {\r\n                this.resetTimer();\r\n            }\r\n        }\r\n        else {\r\n            if (this._timer) {\r\n                this.resetTimer();\r\n            }\r\n            else {\r\n                this._timer = setInterval(function () {\r\n                    _this.time++;\r\n                }, 1000);\r\n                this.timerState = 1;\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(GameInfo.prototype, \"isFinish\", {\r\n        get: function () {\r\n            return this.gameState === GameInfo.GAME_STATE_SAVE;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GameInfo.prototype.resetTimer = function () {\r\n        clearInterval(this._timer);\r\n        this._timer = 0;\r\n        this.timerState = 0;\r\n    };\r\n    GameInfo.prototype.setPlayerInfoByIdx = function (pos, playerInfo) {\r\n        playerInfo.isBlue = (pos < 4);\r\n        playerInfo.isRed = !playerInfo.isBlue;\r\n        this.playerInfoArr[pos] = playerInfo;\r\n        return playerInfo;\r\n    };\r\n    GameInfo.prototype.setWinByMvpIdx = function (mvpIdx) {\r\n        var isBlueWin = (mvpIdx < 4);\r\n        this.mvpPlayerId = this.playerInfoArr[mvpIdx].id();\r\n        if (isBlueWin) {\r\n            return this.setLeftTeamWin();\r\n        }\r\n        else {\r\n            return this.setRightTeamWin();\r\n        }\r\n    };\r\n    GameInfo.prototype._setGameResult = function (isLeftWin) {\r\n        if (this.gameState === 0) {\r\n            var teamLeft = new TeamInfo_1.TeamInfo();\r\n            teamLeft.setPlayerArr(this.getLeftTeam());\r\n            var teamRight = new TeamInfo_1.TeamInfo();\r\n            teamRight.setPlayerArr(this.getRightTeam());\r\n            if (isLeftWin) {\r\n                teamLeft.beat2(teamRight, this.mvpPlayerId);\r\n                this._winTeam = teamLeft;\r\n                this._loseTeam = teamRight;\r\n            }\r\n            else {\r\n                teamRight.beat2(teamLeft, this.mvpPlayerId);\r\n                this._winTeam = teamRight;\r\n                this._loseTeam = teamLeft;\r\n            }\r\n            this.gameState = 1;\r\n        }\r\n        return this._winTeam;\r\n    };\r\n    GameInfo.prototype.getGameDoc = function () {\r\n        return {};\r\n    };\r\n    GameInfo.prototype.setLeftTeamWin = function () {\r\n        return this._setGameResult(true);\r\n    };\r\n    GameInfo.prototype.setRightTeamWin = function () {\r\n        return this._setGameResult(false);\r\n    };\r\n    GameInfo.prototype.getLeftTeam = function (start) {\r\n        if (start === void 0) { start = 0; }\r\n        var team = [];\r\n        for (var i = start; i < 4 + start; i++) {\r\n            var pInfo = this.playerInfoArr[i];\r\n            team.push(pInfo);\r\n            pInfo.isRed = (start > 0);\r\n        }\r\n        return team;\r\n    };\r\n    Object.defineProperty(GameInfo.prototype, \"isBlueWin\", {\r\n        get: function () {\r\n            return this.leftScore > this.rightScore;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GameInfo.prototype.getRightTeam = function () {\r\n        return this.getLeftTeam(4);\r\n    };\r\n    GameInfo.prototype.addRightFoul = function () {\r\n        this.rightFoul++;\r\n        return this.rightFoul;\r\n    };\r\n    GameInfo.prototype.minRightFoul = function () {\r\n        this.rightFoul--;\r\n        return this.rightFoul;\r\n    };\r\n    GameInfo.prototype.addLeftFoul = function () {\r\n        this.leftFoul++;\r\n        return this.leftFoul;\r\n    };\r\n    GameInfo.prototype.minLeftFoul = function () {\r\n        this.leftFoul--;\r\n        return this.leftFoul;\r\n    };\r\n    GameInfo.GAME_STATE_ING = 0;\r\n    GameInfo.GAME_STATE_FIN = 1;\r\n    GameInfo.GAME_STATE_SAVE = 2;\r\n    return GameInfo;\r\n}());\r\nexports.GameInfo = GameInfo;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/model/GameInfo.ts\n ** module id = 22\n ** module chunks = 0\n **/","\"use strict\";\r\nvar EloUtil_1 = require(\"../utils/EloUtil\");\r\nvar TeamInfo = (function () {\r\n    function TeamInfo() {\r\n        this.playerInfoArr = [];\r\n    }\r\n    TeamInfo.prototype.setPlayer = function (player, pos) {\r\n    };\r\n    TeamInfo.prototype.getPlayerInfoById = function (playerId) {\r\n        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n            var playerInfo = this.playerInfoArr[i];\r\n            if (playerInfo.id() == playerId) {\r\n                return playerInfo;\r\n            }\r\n        }\r\n    };\r\n    TeamInfo.prototype.length = function () {\r\n        return this.playerInfoArr.length;\r\n    };\r\n    TeamInfo.prototype.push = function (playerInfo) {\r\n        this.playerInfoArr.push(playerInfo);\r\n    };\r\n    TeamInfo.prototype.setScore = function (score) {\r\n        this.score = score;\r\n    };\r\n    TeamInfo.prototype.setName = function (name) {\r\n        this.name = name;\r\n    };\r\n    TeamInfo.prototype.clear = function () {\r\n        this.score = 0;\r\n    };\r\n    TeamInfo.prototype.setPlayerArr = function (playerArr) {\r\n        this.playerInfoArr.length = 0;\r\n        this.playerInfoArr = this.playerInfoArr.concat(playerArr);\r\n        this.score = 0;\r\n        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n            var player = this.playerInfoArr[i];\r\n            this.score += player.eloScore();\r\n        }\r\n        this.score /= this.playerInfoArr.length;\r\n        console.log(this, \"player score:\", this.score);\r\n    };\r\n    TeamInfo.prototype.beat = function (loserTeam) {\r\n        var win = EloUtil_1.EloUtil.classicMethod(this.score, loserTeam.score);\r\n        this.saveScore(win, true);\r\n        loserTeam.saveScore(-win, false);\r\n    };\r\n    TeamInfo.prototype.beat2 = function (loserTeam, mvpPlayerId) {\r\n        var winTeamScore = this.score;\r\n        var loseTeamScore = loserTeam.score;\r\n        function getScoreArr(playerInArr, teamScore, isWin, mvpId) {\r\n            if (mvpId === void 0) { mvpId = -1; }\r\n            var scoreArr = [];\r\n            for (var i = 0; i < playerInArr.length; i++) {\r\n                var playerInfo = playerInArr[i];\r\n                var score = EloUtil_1.EloUtil.classicMethod(playerInfo.eloScore(), teamScore);\r\n                if (playerInfo.id() == mvpId) {\r\n                    var teamWinScore = EloUtil_1.EloUtil.classicMethod(winTeamScore, loseTeamScore);\r\n                    score += Math.floor(0.25 * teamWinScore);\r\n                }\r\n                if (!isWin)\r\n                    score = -score;\r\n                scoreArr.push(score);\r\n            }\r\n            return scoreArr;\r\n        }\r\n        var winScoreArr = getScoreArr(this.playerInfoArr, loseTeamScore, true, mvpPlayerId);\r\n        var loseScoreArr = getScoreArr(loserTeam.playerInfoArr, winTeamScore, false);\r\n        this.saveScoreArr(winScoreArr, true);\r\n        loserTeam.saveScoreArr(loseScoreArr, false);\r\n    };\r\n    TeamInfo.prototype.mix2 = function (teamInfo) {\r\n        var tmp;\r\n        tmp = this.playerInfoArr[1];\r\n        this.playerInfoArr[1] = teamInfo.playerInfoArr[3];\r\n        teamInfo.playerInfoArr[3] = tmp;\r\n        tmp = this.playerInfoArr[3];\r\n        this.playerInfoArr[3] = teamInfo.playerInfoArr[2];\r\n        teamInfo.playerInfoArr[2] = tmp;\r\n    };\r\n    TeamInfo.prototype.getPercentage = function () {\r\n    };\r\n    TeamInfo.prototype.saveScore = function (score, isWin) {\r\n        this.score += score;\r\n        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n            var player = this.playerInfoArr[i];\r\n            player.saveScore(score, isWin);\r\n        }\r\n    };\r\n    TeamInfo.prototype.saveScoreArr = function (scoreArr, isWin) {\r\n        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n            var score = scoreArr[i];\r\n            this.score += score;\r\n            var player = this.playerInfoArr[i];\r\n            player.saveScore(score, isWin);\r\n        }\r\n    };\r\n    TeamInfo.prototype.getNewPlayerDataArr = function () {\r\n        var a = [];\r\n        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n            var playerInfo = this.playerInfoArr[i];\r\n            a.push(playerInfo.getPlayerData());\r\n        }\r\n        return a;\r\n    };\r\n    TeamInfo.prototype.getWinningPercent = function () {\r\n        var wp;\r\n        for (var i = 0; i < this.playerInfoArr.length; i++) {\r\n            var player = this.playerInfoArr[i];\r\n            wp += player.getCurWinningPercent();\r\n        }\r\n        wp /= this.playerInfoArr.length;\r\n        return wp;\r\n    };\r\n    return TeamInfo;\r\n}());\r\nexports.TeamInfo = TeamInfo;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/model/TeamInfo.ts\n ** module id = 23\n ** module chunks = 0\n **/","\"use strict\";\r\nexports.EloConf = {\r\n    score: 2000,\r\n    K: 32\r\n};\r\nvar EloUtil = (function () {\r\n    function EloUtil() {\r\n    }\r\n    EloUtil.classicMethod = function (winEloScore, loseEloScore) {\r\n        var Elo1 = winEloScore;\r\n        var Elo2 = loseEloScore;\r\n        var K = exports.EloConf.K;\r\n        var EloDifference = Elo2 - Elo1;\r\n        var percentage = 1 / (1 + Math.pow(10, EloDifference / 400));\r\n        var win = Math.round(K * (1 - percentage));\r\n        return win;\r\n    };\r\n    EloUtil.playerToWinMethod = function (winEloScore, loseEloScore) {\r\n    };\r\n    return EloUtil;\r\n}());\r\nexports.EloUtil = EloUtil;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/utils/EloUtil.ts\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = \"<style>\\r\\n    #stage-panel {\\r\\n        position: absolute;\\r\\n        width: 950px;\\r\\n        left: 100px;\\r\\n        top: 80px;\\r\\n        opacity: .8;\\r\\n    }\\r\\n</style>\\r\\n<div id=\\\"stage-panel\\\" class=\\\"card-panel grey lighten-3\\\" v-if=\\\"op\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\" v-for=\\\"playerInfo in playerInfoArr\\\">\\r\\n            <div class=\\\"col\\\" style=\\\"width: 85px\\\">\\r\\n                <img src=\\\"/img/panel/stage/blue.png\\\" id=\\\"playerImg{{$index}}\\\" style=\\\"width: 80px\\\">\\r\\n                <input id=\\\"player{{$index}}\\\" type=\\\"text\\\" @keyup.enter=\\\"onQueryPlayer($index)\\\" style=\\\"width: 75px\\\">\\r\\n                <input id=\\\"playerNum{{$index}}\\\" type=\\\"text\\\" @keyup.enter=\\\"onUpdatePlayerNum($index)\\\"\\r\\n                       style=\\\"width: 35px\\\">\\r\\n                <a class=\\\"waves-effect waves-light btn\\\" style=\\\"width: 75px;height: 25px\\\"\\r\\n                   @click=\\\"onUpdatePlayer($index)\\\">↓</a>\\r\\n                <p>\\r\\n                    <input name=\\\"mvp\\\" type=\\\"radio\\\" id=\\\"mvp{{$index}}\\\" value=\\\"{{$index}}\\\" v-model=\\\"mvpIdx\\\"/>\\r\\n                    <label for=\\\"mvp{{$index}}\\\">mvp{{$index}}</label>\\r\\n                    <!--<input id=\\\"eloScore{{$index}}\\\" type=\\\"text\\\" @keyup.enter=\\\"onSetEloScore($index)\\\" style=\\\"width: 75px\\\">-->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        game id:{{gameId}}\\r\\n        ````````````````````````````````````````\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onStarting\\\">starting line</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onUpdateBackNum\\\">back num</a>\\r\\n        ````````````````````````````````````````\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"display: inline-flex\\\">\\r\\n        <div class=\\\"switch\\\">\\r\\n            <label>\\r\\n                pause\\r\\n                <input type=\\\"checkbox\\\" @click=\\\"onToggleTimer\\\">\\r\\n                <span class=\\\"lever\\\"></span>\\r\\n                start::::::::\\r\\n            </label>\\r\\n        </div>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onResetTimer\\\" style=\\\"height: 35px\\\">Reset</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddLeftScore\\\">Left++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinLeftScore\\\">Left--</a>\\r\\n        <input type=\\\"checkbox\\\" id=\\\"test5\\\"/>\\r\\n        <label for=\\\"test5\\\">///////不限制分数\\\\\\\\\\\\\\\\\\\\\\\\\\\\</label>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinRightScore\\\">Right--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddRightScore\\\">Right++</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onShowWin\\\">Show Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onHideWin\\\">Hide Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onSubmitGame\\\">Submit Game</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onRefresh\\\">Refresh</a>\\r\\n    </div>\\r\\n</div>\\r\\n<div style=\\\"display: none\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinBlue.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinBlueMvp.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinRed.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/playerBgWinRedMvp.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/winPanelTitleBlue.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/winPanelTitleRed.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/fengWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/huoWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/shanWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/win/linWin.png\\\">\\r\\n    <img src=\\\"/img/panel/stage/newPlayer.png\\\">\\r\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/view/panel/stage/stage-panel.html\n ** module id = 25\n ** module chunks = 0\n **/","Object.defineProperty(exports, '__esModule', {\n  value: true\n})\n\nvar Vue = require('vue')\n\nvar internalHooks = [\n  'data',\n  'el',\n  'init',\n  'created',\n  'ready',\n  'beforeCompile',\n  'compiled',\n  'beforeDestroy',\n  'destroyed',\n  'attached',\n  'detached',\n  'activate'\n]\n\nfunction componentFactory (Component, options) {\n  if (!options) {\n    options = {}\n  }\n  options.name = options.name || Component.name\n  // prototype props.\n  var proto = Component.prototype\n  Object.getOwnPropertyNames(proto).forEach(function (key) {\n    if (key === 'constructor') {\n      return\n    }\n    // hooks\n    if (internalHooks.indexOf(key) > -1) {\n      options[key] = proto[key]\n      return\n    }\n    var descriptor = Object.getOwnPropertyDescriptor(proto, key)\n    if (typeof descriptor.value === 'function') {\n      // methods\n      (options.methods || (options.methods = {}))[key] = descriptor.value\n    } else if (descriptor.get || descriptor.set) {\n      // computed properties\n      (options.computed || (options.computed = {}))[key] = {\n        get: descriptor.get,\n        set: descriptor.set\n      }\n    }\n  })\n  // find super\n  var superProto = Object.getPrototypeOf(Component.prototype)\n  var Super = superProto instanceof Vue\n    ? superProto.constructor\n    : Vue\n  return Super.extend(options)\n}\n\nfunction decorator (options) {\n  if (typeof options === 'function') {\n    return componentFactory(options)\n  }\n  return function (Component) {\n    return componentFactory(Component, options)\n  }\n}\n\nexports.default = decorator\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-class-component/index.js\n ** module id = 26\n ** module chunks = 0\n **/","\"use strict\";\r\nexports.PanelId = {\r\n    stagePanel: 'stage',\r\n    winPanel: 'win',\r\n    actPanel: 'act',\r\n    screenPanel: 'screen',\r\n    playerPanel: 'player'\r\n};\r\nexports.ServerConst = {\r\n    SEND_ASYNC: true,\r\n    DEF_AVATAR: '/img/panel/stage/blue.png'\r\n};\r\nexports.ViewConst = {\r\n    STAGE_WIDTH: 1920,\r\n    STAGE_HEIGHT: 1080\r\n};\r\nexports.TimerState = {\r\n    START_STR: 'start',\r\n    PAUSE_STR: 'pause',\r\n    PAUSE: 0,\r\n    RUNNING: 1\r\n};\r\nexports.ViewEvent = {\r\n    PLAYER_EDIT: 'edit player',\r\n    STRAIGHT3_LEFT: 'STRAIGHT3_LEFT',\r\n    STRAIGHT3_RIGHT: 'STRAIGHT3_RIGHT'\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/event/Const.ts\n ** module id = 27\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventDispatcher_1 = require(\"./EventDispatcher\");\r\n(function (CommandId) {\r\n    CommandId[CommandId[\"ShowConsoleWin\"] = 100000] = \"ShowConsoleWin\";\r\n    CommandId[CommandId[\"toggleTracker\"] = 100001] = \"toggleTracker\";\r\n    CommandId[CommandId[\"toggleBallRolling\"] = 100002] = \"toggleBallRolling\";\r\n    CommandId[CommandId[\"toggleTimer\"] = 100003] = \"toggleTimer\";\r\n    CommandId[CommandId[\"cs_toggleTimer\"] = 100004] = \"cs_toggleTimer\";\r\n    CommandId[CommandId[\"resetTimer\"] = 100005] = \"resetTimer\";\r\n    CommandId[CommandId[\"cs_resetTimer\"] = 100006] = \"cs_resetTimer\";\r\n    CommandId[CommandId[\"disableTracker\"] = 100007] = \"disableTracker\";\r\n    CommandId[CommandId[\"updateLeftScore\"] = 100008] = \"updateLeftScore\";\r\n    CommandId[CommandId[\"cs_addLeftScore\"] = 100009] = \"cs_addLeftScore\";\r\n    CommandId[CommandId[\"updateRightScore\"] = 100010] = \"updateRightScore\";\r\n    CommandId[CommandId[\"cs_addRightScore\"] = 100011] = \"cs_addRightScore\";\r\n    CommandId[CommandId[\"minLeftScore\"] = 100012] = \"minLeftScore\";\r\n    CommandId[CommandId[\"cs_minLeftScore\"] = 100013] = \"cs_minLeftScore\";\r\n    CommandId[CommandId[\"minRightScore\"] = 100014] = \"minRightScore\";\r\n    CommandId[CommandId[\"cs_minRightScore\"] = 100015] = \"cs_minRightScore\";\r\n    CommandId[CommandId[\"updateLeftFoul\"] = 100016] = \"updateLeftFoul\";\r\n    CommandId[CommandId[\"cs_addLeftFoul\"] = 100017] = \"cs_addLeftFoul\";\r\n    CommandId[CommandId[\"cs_minLeftFoul\"] = 100018] = \"cs_minLeftFoul\";\r\n    CommandId[CommandId[\"updateRightFoul\"] = 100019] = \"updateRightFoul\";\r\n    CommandId[CommandId[\"cs_addRightFoul\"] = 100020] = \"cs_addRightFoul\";\r\n    CommandId[CommandId[\"cs_minRightFoul\"] = 100021] = \"cs_minRightFoul\";\r\n    CommandId[CommandId[\"stageFadeOut\"] = 100022] = \"stageFadeOut\";\r\n    CommandId[CommandId[\"cs_fadeOut\"] = 100023] = \"cs_fadeOut\";\r\n    CommandId[CommandId[\"playerScore\"] = 100024] = \"playerScore\";\r\n    CommandId[CommandId[\"cs_playerScore\"] = 100025] = \"cs_playerScore\";\r\n    CommandId[CommandId[\"stageFadeIn\"] = 100026] = \"stageFadeIn\";\r\n    CommandId[CommandId[\"cs_stageFadeIn\"] = 100027] = \"cs_stageFadeIn\";\r\n    CommandId[CommandId[\"moveStagePanel\"] = 100028] = \"moveStagePanel\";\r\n    CommandId[CommandId[\"cs_moveStagePanel\"] = 100029] = \"cs_moveStagePanel\";\r\n    CommandId[CommandId[\"updatePlayer\"] = 100030] = \"updatePlayer\";\r\n    CommandId[CommandId[\"cs_updatePlayer\"] = 100031] = \"cs_updatePlayer\";\r\n    CommandId[CommandId[\"updatePlayerAll\"] = 100032] = \"updatePlayerAll\";\r\n    CommandId[CommandId[\"cs_updatePlayerAll\"] = 100033] = \"cs_updatePlayerAll\";\r\n    CommandId[CommandId[\"cs_updatePlayerBackNum\"] = 100034] = \"cs_updatePlayerBackNum\";\r\n    CommandId[CommandId[\"updatePlayerBackNum\"] = 100035] = \"updatePlayerBackNum\";\r\n    CommandId[CommandId[\"fadeInNotice\"] = 100036] = \"fadeInNotice\";\r\n    CommandId[CommandId[\"cs_fadeInNotice\"] = 100037] = \"cs_fadeInNotice\";\r\n    CommandId[CommandId[\"cs_resetGame\"] = 100038] = \"cs_resetGame\";\r\n    CommandId[CommandId[\"cs_unLimitScore\"] = 100039] = \"cs_unLimitScore\";\r\n    CommandId[CommandId[\"unLimitScore\"] = 100040] = \"unLimitScore\";\r\n    CommandId[CommandId[\"fadeInWinPanel\"] = 100041] = \"fadeInWinPanel\";\r\n    CommandId[CommandId[\"cs_fadeInWinPanel\"] = 100042] = \"cs_fadeInWinPanel\";\r\n    CommandId[CommandId[\"fadeOutWinPanel\"] = 100043] = \"fadeOutWinPanel\";\r\n    CommandId[CommandId[\"cs_fadeOutWinPanel\"] = 100044] = \"cs_fadeOutWinPanel\";\r\n    CommandId[CommandId[\"saveGameRec\"] = 100045] = \"saveGameRec\";\r\n    CommandId[CommandId[\"cs_saveGameRec\"] = 100046] = \"cs_saveGameRec\";\r\n    CommandId[CommandId[\"cs_queryPlayerByPos\"] = 100047] = \"cs_queryPlayerByPos\";\r\n    CommandId[CommandId[\"fadeInPlayerPanel\"] = 100048] = \"fadeInPlayerPanel\";\r\n    CommandId[CommandId[\"cs_fadeInPlayerPanel\"] = 100049] = \"cs_fadeInPlayerPanel\";\r\n    CommandId[CommandId[\"fadeOutPlayerPanel\"] = 100050] = \"fadeOutPlayerPanel\";\r\n    CommandId[CommandId[\"cs_fadeOutPlayerPanel\"] = 100051] = \"cs_fadeOutPlayerPanel\";\r\n    CommandId[CommandId[\"movePlayerPanel\"] = 100052] = \"movePlayerPanel\";\r\n    CommandId[CommandId[\"cs_movePlayerPanel\"] = 100053] = \"cs_movePlayerPanel\";\r\n    CommandId[CommandId[\"straightScore3\"] = 100054] = \"straightScore3\";\r\n    CommandId[CommandId[\"straightScore5\"] = 100055] = \"straightScore5\";\r\n    CommandId[CommandId[\"initPanel\"] = 100056] = \"initPanel\";\r\n    CommandId[CommandId[\"cs_fadeInActivityPanel\"] = 100057] = \"cs_fadeInActivityPanel\";\r\n    CommandId[CommandId[\"fadeInActivityPanel\"] = 100058] = \"fadeInActivityPanel\";\r\n    CommandId[CommandId[\"cs_fadeInNextActivity\"] = 100059] = \"cs_fadeInNextActivity\";\r\n    CommandId[CommandId[\"fadeInNextActivity\"] = 100060] = \"fadeInNextActivity\";\r\n    CommandId[CommandId[\"cs_fadeInActivityExGame\"] = 100061] = \"cs_fadeInActivityExGame\";\r\n    CommandId[CommandId[\"fadeInActivityExGame\"] = 100062] = \"fadeInActivityExGame\";\r\n    CommandId[CommandId[\"cs_fadeOutActivityPanel\"] = 100063] = \"cs_fadeOutActivityPanel\";\r\n    CommandId[CommandId[\"fadeOutActivityPanel\"] = 100064] = \"fadeOutActivityPanel\";\r\n    CommandId[CommandId[\"cs_startGame\"] = 100065] = \"cs_startGame\";\r\n    CommandId[CommandId[\"cs_restartGame\"] = 100066] = \"cs_restartGame\";\r\n    CommandId[CommandId[\"cs_fadeInRankPanel\"] = 100067] = \"cs_fadeInRankPanel\";\r\n    CommandId[CommandId[\"fadeInRankPanel\"] = 100068] = \"fadeInRankPanel\";\r\n    CommandId[CommandId[\"cs_fadeInNextRank\"] = 100069] = \"cs_fadeInNextRank\";\r\n    CommandId[CommandId[\"fadeInNextRank\"] = 100070] = \"fadeInNextRank\";\r\n    CommandId[CommandId[\"cs_setGameComing\"] = 100071] = \"cs_setGameComing\";\r\n    CommandId[CommandId[\"setGameComing\"] = 100072] = \"setGameComing\";\r\n    CommandId[CommandId[\"cs_fadeOutRankPanel\"] = 100073] = \"cs_fadeOutRankPanel\";\r\n    CommandId[CommandId[\"fadeOutRankPanel\"] = 100074] = \"fadeOutRankPanel\";\r\n    CommandId[CommandId[\"cs_fadeInCountDown\"] = 100075] = \"cs_fadeInCountDown\";\r\n    CommandId[CommandId[\"fadeInCountDown\"] = 100076] = \"fadeInCountDown\";\r\n    CommandId[CommandId[\"cs_fadeOutCountDown\"] = 100077] = \"cs_fadeOutCountDown\";\r\n    CommandId[CommandId[\"fadeOutCountDown\"] = 100078] = \"fadeOutCountDown\";\r\n    CommandId[CommandId[\"cs_inScreenScore\"] = 100079] = \"cs_inScreenScore\";\r\n    CommandId[CommandId[\"inScreenScore\"] = 100080] = \"inScreenScore\";\r\n    CommandId[CommandId[\"cs_findPlayerData\"] = 100081] = \"cs_findPlayerData\";\r\n})(exports.CommandId || (exports.CommandId = {}));\r\nvar CommandId = exports.CommandId;\r\nvar CommandItem = (function () {\r\n    function CommandItem(id) {\r\n        this.id = id;\r\n    }\r\n    return CommandItem;\r\n}());\r\nvar Command = (function (_super) {\r\n    __extends(Command, _super);\r\n    function Command() {\r\n        _super.call(this);\r\n        this.cmdArr = [];\r\n        this.newCmd(CommandId.updateLeftScore, \"addLeftScore\");\r\n        this.newCmd(CommandId.updateRightScore, \"addRightScore\");\r\n        this.newCmd(CommandId.toggleTracker, \"toggleTracker\");\r\n        this.newCmd(CommandId.toggleTimer, \"toggleTimer\");\r\n        this.newCmd(CommandId.toggleBallRolling, \"toggleBallRolling\");\r\n        this.newCmd(CommandId.disableTracker, \"disableTracker\");\r\n    }\r\n    Command.prototype.newCmd = function (id, name, desc) {\r\n        var ci = new CommandItem(id);\r\n        ci.name = name;\r\n        ci.desc = desc;\r\n        this.cmdArr.push(ci);\r\n    };\r\n    return Command;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.Command = Command;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../YuanTV3/src/event/Command.ts\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = \"<style>\\r\\n    #stage-panel {\\r\\n        /*position: absolute;*/\\r\\n        /*width: 950px;*/\\r\\n        /*left: 100px;*/\\r\\n        /*top: 80px;*/\\r\\n        /*opacity: .8;*/\\r\\n        /*zoom: 2;*/\\r\\n    }\\r\\n</style>\\r\\n<div id=\\\"stage-panel\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        game id:{{gameId}}\\r\\n        ````````````````````````````````````````\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onStarting\\\">starting line</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\"\\r\\n           @click=\\\"onUpdateBackNum\\\">back num</a>\\r\\n        ````````````````````````````````````````\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"display: inline-flex\\\">\\r\\n        <div class=\\\"switch\\\">\\r\\n            <label>\\r\\n                pause\\r\\n                <input type=\\\"checkbox\\\" @click=\\\"onToggleTimer\\\">\\r\\n                <span class=\\\"lever\\\"></span>\\r\\n                start::::::::\\r\\n            </label>\\r\\n        </div>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onResetTimer\\\" style=\\\"height: 35px\\\">Reset</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddLeftScore\\\">Left++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinLeftScore\\\">Left--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddLeftFoul\\\">Foul++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinLeftFoul\\\">Foul--</a>\\r\\n        <input type=\\\"checkbox\\\" id=\\\"test5\\\"/>\\r\\n        <label for=\\\"test5\\\">///////不限制分数\\\\\\\\\\\\\\\\\\\\\\\\\\\\</label>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinRightScore\\\">Right--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddRightScore\\\">Right++</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onMinRightFoul\\\">Foul--</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onAddRightFoul\\\">Foul++</a>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onShowWin\\\">Show Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onHideWin\\\">Hide Win</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onSubmitGame\\\">Submit Game</a>\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onRefresh\\\">Refresh</a>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <a class=\\\"waves-effect waves-light btn\\\" @click=\\\"onComingActivity\\\">Coming Act</a>\\r\\n    </div>\\r\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/mobile/stage-panel-mobile.html\n ** module id = 29\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar VueEx_1 = require(\"../../../../YuanTV3/src/view/VueEx\");\r\nvar Const_1 = require(\"../../model/Const\");\r\nvar Setting = (function (_super) {\r\n    __extends(Setting, _super);\r\n    function Setting() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    Setting.prototype.onServerIP = function (v) {\r\n        console.log(\"onServerIP\" + v);\r\n        Const_1.appModel.ip = v;\r\n    };\r\n    Setting = __decorate([\r\n        VueEx_1.Component({\r\n            template: require('./setting.html'),\r\n            props: {\r\n                serverIP: {\r\n                    type: String,\r\n                    required: true,\r\n                    default: '192.168.1.73'\r\n                }\r\n            },\r\n            watch: {\r\n                serverIP: 'onServerIP'\r\n            }\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], Setting);\r\n    return Setting;\r\n}(VueEx_1.VueEx));\r\nexports.Setting = Setting;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/mobile/setting/Setting.ts\n ** module id = 30\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"container\\\">\\r\\n    <input type=\\\"text\\\" v-model=\\\"serverIP\\\"/>\\r\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/mobile/setting/setting.html\n ** module id = 31\n ** module chunks = 0\n **/","\"use strict\";\r\n(function (EventId) {\r\n    EventId[EventId[\"setting_serverIPChanged\"] = 0] = \"setting_serverIPChanged\";\r\n})(exports.EventId || (exports.EventId = {}));\r\nvar EventId = exports.EventId;\r\nvar AppModel = (function () {\r\n    function AppModel() {\r\n        this.ip = '192.168.1.73';\r\n    }\r\n    return AppModel;\r\n}());\r\nvar appModel = new AppModel();\r\nexports.appModel = appModel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/model/Const.ts\n ** module id = 32\n ** module chunks = 0\n **/"],"sourceRoot":""}